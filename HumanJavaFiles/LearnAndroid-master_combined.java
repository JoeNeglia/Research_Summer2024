package com.Learning.com;

import android.content.Context;
import android.support.test.InstrumentationRegistry;
import android.support.test.runner.AndroidJUnit4;

import org.junit.Test;
import org.junit.runner.RunWith;

import static org.junit.Assert.*;

/**
 * Instrumented test, which will execute on an Android device.
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
@RunWith(AndroidJUnit4.class)
public class ExampleInstrumentedTest {
    @Test
    public void useAppContext() {
        // Context of the app under test.
        Context appContext = InstrumentationRegistry.getTargetContext();

        assertEquals("com.Learning.com", appContext.getPackageName());
    }
}


package com.Learning.com;

import org.junit.Test;

import static org.junit.Assert.*;

/**
 * Example local unit test, which will execute on the development machine (host).
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
public class ExampleUnitTest {
    @Test
    public void addition_isCorrect() {
        assertEquals(4, 2 + 2);
    }
}

package com.Learning.com;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;

public class SimpleIntent_demo extends AppCompatActivity {
    Button clickbutton;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_simple_intent_demo);
        clickbutton=(Button)findViewById(R.id.click);
        clickbutton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent=new Intent(SimpleIntent_demo.this,SecondActivity.class);
                //SecondActivity(replace with your activity...
                startActivity(intent);
            }
        });
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_pattern_lock_view_ref extends Fragment {
    TextView text, head, content, text_m, head_m, content_m;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text = (TextView) view.findViewById(R.id.text_implementation);
        head = (TextView) view.findViewById(R.id.head_implementation);
        content = (TextView) view.findViewById(R.id.content_implementation);
        text_m = (TextView) view.findViewById(R.id.text_manifest);
        head_m = (TextView) view.findViewById(R.id.head_manifest);
        content_m = (TextView) view.findViewById(R.id.content_manifest);
//        text_m.setVisibility(View.VISIBLE);
//        head_m.setVisibility(View.VISIBLE);
//        content_m.setVisibility(View.VISIBLE);


        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n" +
                "After Implementation sync now to implement the content");
        content.setText("implementation 'com.andrognito.patternlockview:patternlockview:1.0.0'");


//        head_m.setText("Manifest Guide");
//
//        text_m.setText("Click-->app-->Manifest-->(add permission)\n" +
//                "Add Permission before application tag:-(top of <application)");
//        content_m.setText("<uses-permission android:name=\"android.permission.INTERNET\" />");

        return view;
    }
}


package com.Learning.com;

import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class Fragment_custom_listview_demo extends Fragment {
    ListView listView;
    String[]names={"Alpha","Beta","CupCake","Donut","Eclair","Fryso","Ginger Bread","HoneyComb","Icecream Sandwich","Jelly Bean","Kitkat","Lolipop","Marshmellow","Noughat","Oreo","Pie"};
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_custom_listview_demo, container, false);
        listView=(ListView)view.findViewById(R.id.listview);
        CustomAdapter customAdapter=new CustomAdapter(getActivity(),names);
        listView.setAdapter(customAdapter);
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                Toast.makeText(getActivity(), (String)listView.getItemAtPosition(position), Toast.LENGTH_SHORT).show();
            }
        });
        return view;
    }
}
class CustomAdapter extends ArrayAdapter<String> {
    public final Context context;
    private final String[] names;
    public CustomAdapter(Context context,String[] names) {
        super(context,R.layout.custom_listview_layout, names);
        this.context=context;
        this.names=names;
    }

    @Override
    public View getView(int position, View convertView,  ViewGroup parent) {

        LayoutInflater inflater=(LayoutInflater)getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        View view=inflater.inflate(R.layout.custom_listview_layout,null,true);
        TextView name=(TextView)view.findViewById(R.id.text);
        ImageView imageView=(ImageView)view.findViewById(R.id.image);
        name.setText(names[position]);
        imageView.setImageResource(R.drawable.user);
        return view;
    }
}



package com.Learning.com;

import android.Manifest;
import android.app.Activity;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v4.app.ActivityCompat;
import android.support.v4.app.Fragment;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AlertDialog;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Toast;

import com.blikoon.qrcodescanner.QrCodeActivity;

public class Fragment_qrscanner_demo  extends Fragment {
    Button btnScanBarcode;
    int CAMERA_PERMISSION_CODE=24;
    private static final int REQUEST_CODE_QR_SCAN=101;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_qrscanner_demo, container, false);
        btnScanBarcode=(Button)view.findViewById(R.id.btnScanBarcode);
        btnScanBarcode.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if(canOpenCamera()){
                    openCamera();
                }else {
                    requestCameraPermission();
                }

            }
        });
    return view;
    }
    private void openCamera(){
        Intent intent=new Intent(getActivity(), QrCodeActivity.class);
        startActivityForResult(intent,REQUEST_CODE_QR_SCAN);
    }
    private boolean canOpenCamera(){
        int result= ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.CAMERA);
        if(result== PackageManager.PERMISSION_GRANTED){
            return true;
        }
        return false;
    }
    private void requestCameraPermission(){
        if(ActivityCompat.shouldShowRequestPermissionRationale(getActivity(), Manifest.permission.CAMERA)){
            Toast.makeText(getActivity(), "Accept Permission to open camera", Toast.LENGTH_SHORT).show();
        }
        ActivityCompat.requestPermissions(getActivity(),new String[]{Manifest.permission.CAMERA},CAMERA_PERMISSION_CODE);
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        if(requestCode==CAMERA_PERMISSION_CODE){
            if(grantResults.length>0&&grantResults[0]== PackageManager.PERMISSION_GRANTED){
                openCamera();
            }else {
                Toast.makeText(getActivity(), "User Denied Permisssion", Toast.LENGTH_SHORT).show();
            }
        }

    }
    public void onActivityResult(int req_code, int resultcode, Intent data){
        if(resultcode!= Activity.RESULT_OK){
            if(data==null){
                return;
            }
            String result=data.getStringExtra("com.blikoon.qrcodescanner.error_decoding_image");
            if(result!=null){
                AlertDialog alertDialog=new AlertDialog.Builder(getActivity()).create();
                alertDialog.setTitle("Scan Error");;
                alertDialog.setMessage("QR couldn't able to scan");
                alertDialog.setButton(AlertDialog.BUTTON_POSITIVE, "OK",
                        new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                dialog.dismiss();
                            }
                        });
                alertDialog.show();
            }
            return;
        }
        if(req_code==REQUEST_CODE_QR_SCAN){
            if(data==null)
                return;
            String result=data.getStringExtra("com.blikoon.qrcodescanner.got_qr_scan_relult");

            AlertDialog alertDialog = new AlertDialog.Builder(getActivity()).create();
            alertDialog.setTitle("Scan Result");
            alertDialog.setMessage(result);
            alertDialog.setButton(AlertDialog.BUTTON_POSITIVE, "OK",
                    new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            dialog.dismiss();
                        }
                    });
            alertDialog.show();
        }
    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_curve_edge_xml  extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2;
    TextView title2;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <Button\n" +
            "        android:id=\"@+id/curve\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Curve Edge\"\n" +
            "        android:textColor=\"@android:color/white\"\n" +
            "        android:textAlignment=\"center\"\n" +
            "        android:textStyle=\"bold\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:background=\"@drawable/curve_edge\"/>\n" +
            "\n" +
            "</LinearLayout>";
    String code2="<selector xmlns:android=\"http://schemas.android.com/apk/res/android\" >\n" +
            "    <item android:state_pressed=\"true\" >\n" +
            "        <shape android:shape=\"rectangle\"  >\n" +
            "            <corners android:radius=\"3dip\" />\n" +
            "            <stroke android:width=\"1dip\" android:color=\"#5e7974\" />\n" +
            "            <gradient android:angle=\"-90\" android:startColor=\"#345953\" android:endColor=\"#689a92\"  />\n" +
            "        </shape>\n" +
            "    </item>\n" +
            "    <item android:state_focused=\"true\">\n" +
            "        <shape android:shape=\"rectangle\"  >\n" +
            "            <corners android:radius=\"3dip\" />\n" +
            "            <stroke android:width=\"1dip\" android:color=\"#5e7974\" />\n" +
            "            <solid android:color=\"#58857e\"/>\n" +
            "        </shape>\n" +
            "    </item>\n" +
            "    <item >\n" +
            "        <shape android:shape=\"rectangle\"  >\n" +
            "            <corners android:radius=\"3dip\" />\n" +
            "            <stroke android:width=\"1dip\" android:color=\"#5e7974\" />\n" +
            "            <gradient android:angle=\"-90\" android:startColor=\"#8dbab3\" android:endColor=\"#58857e\" />\n" +
            "        </shape>\n" +
            "    </item>\n" +
            "</selector>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("curve_edge.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.TextView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_fingerprint_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    TextView title2;
    String Code="import android.app.KeyguardManager;\n" +
            "import android.content.pm.PackageManager;\n" +
            "import android.hardware.fingerprint.FingerprintManager;\n" +
            "import android.Manifest;\n" +
            "import android.os.Build;\n" +
            "import android.os.Bundle;\n" +
            "import android.security.keystore.KeyGenParameterSpec;\n" +
            "import android.security.keystore.KeyPermanentlyInvalidatedException;\n" +
            "import android.security.keystore.KeyProperties;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.support.v4.app.ActivityCompat;\n" +
            "import android.widget.TextView;\n" +
            "import java.io.IOException;\n" +
            "import java.security.InvalidAlgorithmParameterException;\n" +
            "import java.security.InvalidKeyException;\n" +
            "import java.security.KeyStore;\n" +
            "import java.security.KeyStoreException;\n" +
            "import java.security.NoSuchAlgorithmException;\n" +
            "import java.security.NoSuchProviderException;\n" +
            "import java.security.UnrecoverableKeyException;\n" +
            "import java.security.cert.CertificateException;\n" +
            "import javax.crypto.Cipher;\n" +
            "import javax.crypto.KeyGenerator;\n" +
            "import javax.crypto.NoSuchPaddingException;\n" +
            "import javax.crypto.SecretKey;\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "\n" +
            "    // Declare a string variable for the key we’re going to use in our fingerprint authentication\n" +
            "    private static final String KEY_NAME = \"yourKey\";\n" +
            "    private Cipher cipher;\n" +
            "    private KeyStore keyStore;\n" +
            "    private KeyGenerator keyGenerator;\n" +
            "    private TextView textView;\n" +
            "    private FingerprintManager.CryptoObject cryptoObject;\n" +
            "    private FingerprintManager fingerprintManager;\n" +
            "    private KeyguardManager keyguardManager;\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "\n" +
            "        // If you’ve set your app’s minSdkVersion to anything lower than 23, then you’ll need to verify that the device is running Marshmallow\n" +
            "        // or higher before executing any fingerprint-related code\n" +
            "        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n" +
            "            //Get an instance of KeyguardManager and FingerprintManager//\n" +
            "            keyguardManager =\n" +
            "                    (KeyguardManager) getSystemService(KEYGUARD_SERVICE);\n" +
            "            fingerprintManager =\n" +
            "                    (FingerprintManager) getSystemService(FINGERPRINT_SERVICE);\n" +
            "\n" +
            "            textView = (TextView) findViewById(R.id.textview);\n" +
            "\n" +
            "            //Check whether the device has a fingerprint sensor//\n" +
            "            if (!fingerprintManager.isHardwareDetected()) {\n" +
            "                // If a fingerprint sensor isn’t available, then inform the user that they’ll be unable to use your app’s fingerprint functionality//\n" +
            "                textView.setText(\"Your device doesn't support fingerprint authentication\");\n" +
            "            }\n" +
            "            //Check whether the user has granted your app the USE_FINGERPRINT permission//\n" +
            "            if (ActivityCompat.checkSelfPermission(this, Manifest.permission.USE_FINGERPRINT) != PackageManager.PERMISSION_GRANTED) {\n" +
            "                // If your app doesn't have this permission, then display the following text//\n" +
            "                textView.setText(\"Please enable the fingerprint permission\");\n" +
            "            }\n" +
            "\n" +
            "            //Check that the user has registered at least one fingerprint//\n" +
            "            if (!fingerprintManager.hasEnrolledFingerprints()) {\n" +
            "                // If the user hasn’t configured any fingerprints, then display the following message//\n" +
            "                textView.setText(\"No fingerprint configured. Please register at least one fingerprint in your device's Settings\");\n" +
            "            }\n" +
            "\n" +
            "            //Check that the lockscreen is secured//\n" +
            "            if (!keyguardManager.isKeyguardSecure()) {\n" +
            "                // If the user hasn’t secured their lockscreen with a PIN password or pattern, then display the following text//\n" +
            "                textView.setText(\"Please enable lockscreen security in your device's Settings\");\n" +
            "            } else {\n" +
            "                try {\n" +
            "\n" +
            "                    generateKey();\n" +
            "                } catch (FingerprintException e) {\n" +
            "                    e.printStackTrace();\n" +
            "                }\n" +
            "\n" +
            "                if (initCipher()) {\n" +
            "                    //If the cipher is initialized successfully, then create a CryptoObject instance//\n" +
            "                    cryptoObject = new FingerprintManager.CryptoObject(cipher);\n" +
            "\n" +
            "                    // Here, I’m referencing the FingerprintHandler class that we’ll create in the next section. This class will be responsible\n" +
            "                    // for starting the authentication process (via the startAuth method) and processing the authentication process events//\n" +
            "                    FingerprintHandler helper = new FingerprintHandler(this);\n" +
            "                    helper.startAuth(fingerprintManager, cryptoObject);\n" +
            "                }\n" +
            "            }\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "//Create the generateKey method that we’ll use to gain access to the Android keystore and generate the encryption key//\n" +
            "\n" +
            "    private void generateKey() throws FingerprintException {\n" +
            "        try {\n" +
            "            // Obtain a reference to the Keystore using the standard Android keystore container identifier (“AndroidKeystore”)//\n" +
            "            keyStore = KeyStore.getInstance(\"AndroidKeyStore\");\n" +
            "\n" +
            "            //Generate the key//\n" +
            "            keyGenerator = KeyGenerator.getInstance(KeyProperties.KEY_ALGORITHM_AES, \"AndroidKeyStore\");\n" +
            "\n" +
            "            //Initialize an empty KeyStore//\n" +
            "            keyStore.load(null);\n" +
            "\n" +
            "            //Initialize the KeyGenerator//\n" +
            "            keyGenerator.init(new\n" +
            "\n" +
            "                    //Specify the operation(s) this key can be used for//\n" +
            "                    KeyGenParameterSpec.Builder(KEY_NAME,\n" +
            "                    KeyProperties.PURPOSE_ENCRYPT |\n" +
            "                            KeyProperties.PURPOSE_DECRYPT)\n" +
            "                    .setBlockModes(KeyProperties.BLOCK_MODE_CBC)\n" +
            "\n" +
            "                    //Configure this key so that the user has to confirm their identity with a fingerprint each time they want to use it//\n" +
            "                    .setUserAuthenticationRequired(true)\n" +
            "                    .setEncryptionPaddings(\n" +
            "                            KeyProperties.ENCRYPTION_PADDING_PKCS7)\n" +
            "                    .build());\n" +
            "\n" +
            "            //Generate the key//\n" +
            "            keyGenerator.generateKey();\n" +
            "\n" +
            "        } catch (KeyStoreException\n" +
            "                | NoSuchAlgorithmException\n" +
            "                | NoSuchProviderException\n" +
            "                | InvalidAlgorithmParameterException\n" +
            "                | CertificateException\n" +
            "                | IOException exc) {\n" +
            "            exc.printStackTrace();\n" +
            "            throw new FingerprintException(exc);\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    //Create a new method that we’ll use to initialize our cipher//\n" +
            "    public boolean initCipher() {\n" +
            "        try {\n" +
            "            //Obtain a cipher instance and configure it with the properties required for fingerprint authentication//\n" +
            "            cipher = Cipher.getInstance(\n" +
            "                    KeyProperties.KEY_ALGORITHM_AES + \"/\"\n" +
            "                            + KeyProperties.BLOCK_MODE_CBC + \"/\"\n" +
            "                            + KeyProperties.ENCRYPTION_PADDING_PKCS7);\n" +
            "        } catch (NoSuchAlgorithmException |\n" +
            "                NoSuchPaddingException e) {\n" +
            "            throw new RuntimeException(\"Failed to get Cipher\", e);\n" +
            "        }\n" +
            "\n" +
            "        try {\n" +
            "            keyStore.load(null);\n" +
            "            SecretKey key = (SecretKey) keyStore.getKey(KEY_NAME,\n" +
            "                    null);\n" +
            "            cipher.init(Cipher.ENCRYPT_MODE, key);\n" +
            "            //Return true if the cipher has been initialized successfully//\n" +
            "            return true;\n" +
            "        } catch (KeyPermanentlyInvalidatedException e) {\n" +
            "\n" +
            "            //Return false if cipher initialization failed//\n" +
            "            return false;\n" +
            "        } catch (KeyStoreException | CertificateException\n" +
            "                | UnrecoverableKeyException | IOException\n" +
            "                | NoSuchAlgorithmException | InvalidKeyException e) {\n" +
            "            throw new RuntimeException(\"Failed to init Cipher\", e);\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    private class FingerprintException extends Exception {\n" +
            "        public FingerprintException(Exception e) {\n" +
            "            super(e);\n" +
            "        }\n" +
            "    }\n" +
            "}";
    String Code2="import android.annotation.TargetApi;\n" +
            "import android.content.Context;\n" +
            "import android.content.pm.PackageManager;\n" +
            "import android.hardware.fingerprint.FingerprintManager;\n" +
            "import android.Manifest;\n" +
            "import android.os.Build;\n" +
            "import android.os.CancellationSignal;\n" +
            "import android.support.v4.app.ActivityCompat;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "@TargetApi(Build.VERSION_CODES.M)\n" +
            "public class FingerprintHandler extends FingerprintManager.AuthenticationCallback {\n" +
            "\n" +
            "    // You should use the CancellationSignal method whenever your app can no longer process user input, for example when your app goes\n" +
            "    // into the background. If you don’t use this method, then other apps will be unable to access the touch sensor, including the lockscreen!//\n" +
            "\n" +
            "    private CancellationSignal cancellationSignal;\n" +
            "    private Context context;\n" +
            "\n" +
            "    public FingerprintHandler(Context mContext) {\n" +
            "        context = mContext;\n" +
            "    }\n" +
            "\n" +
            "    //Implement the startAuth method, which is responsible for starting the fingerprint authentication process//\n" +
            "\n" +
            "    public void startAuth(FingerprintManager manager, FingerprintManager.CryptoObject cryptoObject) {\n" +
            "\n" +
            "        cancellationSignal = new CancellationSignal();\n" +
            "        if (ActivityCompat.checkSelfPermission(context, Manifest.permission.USE_FINGERPRINT) != PackageManager.PERMISSION_GRANTED) {\n" +
            "            return;\n" +
            "        }\n" +
            "        manager.authenticate(cryptoObject, cancellationSignal, 0, this, null);\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    //onAuthenticationError is called when a fatal error has occurred. It provides the error code and error message as its parameters//\n" +
            "\n" +
            "    public void onAuthenticationError(int errMsgId, CharSequence errString) {\n" +
            "\n" +
            "        //I’m going to display the results of fingerprint authentication as a series of toasts.\n" +
            "        //Here, I’m creating the message that’ll be displayed if an error occurs//\n" +
            "\n" +
            "        Toast.makeText(context, \"Authentication error\\n\" + errString, Toast.LENGTH_LONG).show();\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "\n" +
            "    //onAuthenticationFailed is called when the fingerprint doesn’t match with any of the fingerprints registered on the device//\n" +
            "\n" +
            "    public void onAuthenticationFailed() {\n" +
            "        Toast.makeText(context, \"Authentication failed\", Toast.LENGTH_LONG).show();\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "\n" +
            "    //onAuthenticationHelp is called when a non-fatal error has occurred. This method provides additional information about the error,\n" +
            "    //so to provide the user with as much feedback as possible I’m incorporating this information into my toast//\n" +
            "    public void onAuthenticationHelp(int helpMsgId, CharSequence helpString) {\n" +
            "        Toast.makeText(context, \"Authentication help\\n\" + helpString, Toast.LENGTH_LONG).show();\n" +
            "    }@Override\n" +
            "\n" +
            "    //onAuthenticationSucceeded is called when a fingerprint has been successfully matched to one of the fingerprints stored on the user’s device//\n" +
            "    public void onAuthenticationSucceeded(\n" +
            "            FingerprintManager.AuthenticationResult result) {\n" +
            "\n" +
            "        Toast.makeText(context, \"Success!\", Toast.LENGTH_LONG).show();\n" +
            "    }\n" +
            "\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("RecyclerViewAdapter.Java");
        WebView webView2=(WebView)view.findViewById(R.id.webview2);
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code2)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webView2);
        return view;
    }



}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_view_flipper_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.content.Context;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.LayoutInflater;\n" +
            "import android.view.View;\n" +
            "import android.view.ViewGroup;\n" +
            "import android.widget.AdapterViewFlipper;\n" +
            "import android.widget.BaseAdapter;\n" +
            "import android.widget.ImageView;\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    AdapterViewFlipper adapterViewFlipper;\n" +
            "    int[] images = {\n" +
            "            R.drawable.img1,\n" +
            "            R.drawable.img2,\n" +
            "            R.drawable.img1,\n" +
            "            R.drawable.img2,\n" +
            "            R.drawable.img1,\n" +
            "\n" +
            "    };\n" +
            "    String[] text = {\n" +
            "            \"ATOMIC ABSROPTION SPECTROSCOPY\",\n" +
            "            \"FT-IR SPECTROSCOPY\",\n" +
            "            \"GASS CHROMATOGRAPHY\",\n" +
            "            \"HIGH PERFORMANCE LIQUID CHROMATOGRAPHY-MASS SPECTROSCOPY\",\n" +
            "            \"UV-VIS SPECTROSCOPY\",\n" +
            "    };\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "\n" +
            "        adapterViewFlipper = (AdapterViewFlipper) findViewById(R.id.adapterViewFlipper_phy);\n" +
            "        CusAdap cusAdap = new CusAdap(this, images, text);\n" +
            "        adapterViewFlipper.setAdapter(cusAdap);\n" +
            "        adapterViewFlipper.setFlipInterval(3000);\n" +
            "        adapterViewFlipper.setAutoStart(true);\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "    class CusAdap extends BaseAdapter {\n" +
            "        Context context;\n" +
            "        int[] images;\n" +
            "        String[] s_text;\n" +
            "        String[] s_head;\n" +
            "        LayoutInflater inflater;\n" +
            "\n" +
            "        public CusAdap(Context applicationContext, int[] images, String[] s_text) {\n" +
            "            this.context = applicationContext;\n" +
            "            this.images = images;\n" +
            "            this.s_text = s_text;\n" +
            "            inflater = (LayoutInflater.from(applicationContext));\n" +
            "        }\n" +
            "\n" +
            "        @Override\n" +
            "        public int getCount() {\n" +
            "            return images.length;\n" +
            "        }\n" +
            "\n" +
            "        @Override\n" +
            "        public Object getItem(int position) {\n" +
            "            return null;\n" +
            "        }\n" +
            "\n" +
            "        @Override\n" +
            "        public long getItemId(int position) {\n" +
            "            return 0;\n" +
            "        }\n" +
            "\n" +
            "        @Override\n" +
            "        public View getView(int position, View view, ViewGroup parent) {\n" +
            "            view = inflater.inflate(R.layout.adapter_list_item, null);\n" +
            "            ImageView image = (ImageView) view.findViewById(R.id.image);\n" +
            "            TextView text = (TextView) view.findViewById(R.id.text_slider);\n" +
            "\n" +
            "            text.setText(s_text[position]);\n" +
            "            image.setImageResource(images[position]);\n" +
            "\n" +
            "            return view;\n" +
            "        }\n" +
            "    }\n" +
            "}\n"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.content.Context;
import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.ads.AdListener;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.InterstitialAd;
import com.google.android.gms.ads.MobileAds;

public class Basic extends AppCompatActivity {
    InterstitialAd mInterstitialAd;
    int i=0;
    String[] items={"Textview","EditText","ImageView","Button","AutoCompleteTextView","MultiAutoCompleteTextView","RadioButton & Radio Group","Check Box","Toogle Button","Progress Bar","Clock","Date Picker","Simple and custom Toast","Alert Dialog","Custom Alert Dialog","Simple Intent","Bundle Passing","Implementation and change Fragment","Spinner","Swipe refresh layout","Dialer Intent","Scroll View","Curve Edge Buttons"};
    ListView listView;
    Context context=this;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_basic);
        MobileAds.initialize(this,"ca-app-pub-5555883160769534~8402070138");
        mInterstitialAd = new InterstitialAd(this);
        mInterstitialAd.setAdUnitId("ca-app-pub-5555883160769534");






        listView=(ListView)findViewById(R.id.listview);
        ArrayAdapter<String>adapter=new ArrayAdapter<String>(this,android.R.layout.simple_list_item_1,android.R.id.text1,items);
        listView.setAdapter(adapter);
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                mInterstitialAd.loadAd(new AdRequest.Builder().build());
                i=i+1;
                Log.i("num of clicks",""+i);
                if(i>1) {
                    if (i % 2 == 0) {

                        if (mInterstitialAd != null && mInterstitialAd.isLoaded()) {
                            mInterstitialAd.show();
                        } else {
                        }

                        if (mInterstitialAd.isLoaded()) {
                            mInterstitialAd.show();
                        } else {
                            Log.d("TAG", "The interstitial wasn't loaded yet.");

                        }

                        mInterstitialAd.setAdListener(new AdListener() {
                            @Override
                            public void onAdLoaded() {
                                // Code to be executed when an ad finishes loading.
                            }

                            @Override
                            public void onAdFailedToLoad(int errorCode) {
                                // Code to be executed when an ad request fails.
                            }

                            @Override
                            public void onAdOpened() {
                                // Code to be executed when the ad is displayed.
                            }

                            @Override
                            public void onAdClicked() {
                                // Code to be executed when the user clicks on an ad.
                            }

                            @Override
                            public void onAdLeftApplication() {
                                // Code to be executed when the user has left the app.
                            }

                            @Override
                            public void onAdClosed() {
                                // Code to be executed when the interstitial ad is closed.
                            }
                        });
                    }
                }
                switch (position){
                    case 0: {

                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "textview");
                        startActivity(intent);
                        break;
                    }
                    case 1: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "edittext");
                        startActivity(intent);
                        break;

                    } case 2: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "imageview");
                        startActivity(intent);
                        break;
                    } case 3: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "button");
                        startActivity(intent);
                        break;
                    } case 4: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "AutoCompleteTextView");
                        startActivity(intent);
                        break;
                    } case 5: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "MultiAutoCompleteTextView");
                        startActivity(intent);
                        break;
                    } case 6: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "Radiobutton_and_Radiogroup");
                        startActivity(intent);
                        break;
                    } case 7: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "Checkbox");
                        startActivity(intent);
                        break;
                    } case 8: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "toogle");
                        startActivity(intent);
                        break;
                    } case 9: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "progressbar");
                        startActivity(intent);
                        break;
                    } case 10: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "clock");
                        startActivity(intent);
                        break;
                    } case 11: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "datepicker");
                        startActivity(intent);
                        break;
                    } case 12: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "simpleandcustomtoast");
                        startActivity(intent);
                        break;
                    } case 13: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "Alertdialog");
                        startActivity(intent);
                        break;
                    } case 14: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "customalertdialog");
                        startActivity(intent);
                        break;
                    } case 15: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "simpleintent");
                        startActivity(intent);
                        break;
                    } case 16: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "bundlepassing");
                        startActivity(intent);
                        break;
                    } case 17: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "fragment");
                        startActivity(intent);
                        break;
                    } case 18: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "spinner");
                        startActivity(intent);
                        break;
                    } case 19: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "swipeRefreshLayout");
                        startActivity(intent);
                        break;
                    } case 20: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "implicitintent");
                        startActivity(intent);
                        break;
                    } case 21: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "scrollview");
                        startActivity(intent);
                        break;
                    }case 22: {
                        Intent intent = new Intent(Basic.this, BaseScreen.class);
                        intent.putExtra("title", "curveedge");
                        startActivity(intent);
                        break;
                    }
                }
            }
        });

    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_CheckBox_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <CheckBox\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:id=\"@+id/checkbox\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:onClick=\"onClick\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:text=\"Click\"/>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_qrscanner_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "\n" +
            "\n" +
            "    <Button\n" +
            "        android:id=\"@+id/btnScanBarcode\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_centerHorizontal=\"true\"\n" +
            "        android:text=\"scan_barcode\" />\n" +
            "</LinearLayout>\n";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;


import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_bottom_navigation_ref extends Fragment {
    TextView text,head;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_textview_ref, container, false);
        text=(TextView)view.findViewById(R.id.text);
        head=(TextView)view.findViewById(R.id.head);
        head.setText("Create Activity");

        text.setText("Click-->File-->New-->Activity-->BottomNavigationActivity");

        return view;
    }



}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_notification_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.app.Notification;\n" +
            "import android.app.NotificationChannel;\n" +
            "import android.app.NotificationManager;\n" +
            "import android.app.PendingIntent;\n" +
            "import android.app.TaskStackBuilder;\n" +
            "import android.content.Context;\n" +
            "import android.content.Intent;\n" +
            "import android.graphics.Bitmap;\n" +
            "import android.graphics.BitmapFactory;\n" +
            "import android.graphics.Color;\n" +
            "import android.os.Build;\n" +
            "import android.support.v4.app.NotificationCompat;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "Button simple,long_text,chat,image;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        simple=(Button)findViewById(R.id.simple);\n" +
            "        chat=(Button)findViewById(R.id.chat);\n" +
            "        long_text=(Button)findViewById(R.id.long_text);\n" +
            "        image=(Button)findViewById(R.id.image);\n" +
            "        simple.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                simple();\n" +
            "            }\n" +
            "        });\n" +
            "        chat.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "               chat();\n" +
            "            }\n" +
            "        });\n" +
            "        long_text.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                longText();\n" +
            "            }\n" +
            "        });\n" +
            "        image.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                Imagenotification();\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "    }\n" +
            "    public void simple(){\n" +
            "        int notifyid=001;\n" +
            "        NotificationManager manager=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);\n" +
            "        NotificationCompat.Builder builder=new NotificationCompat.Builder(this)\n" +
            "                .setSmallIcon(R.mipmap.ic_launcher_round)\n" +
            "                .setContentTitle(\"Android Learning\")\n" +
            "                .setAutoCancel(true)\n" +
            "                .setContentText(\"Hi, buddies click here to dismiss\");\n" +
            "        if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.O) {\n" +
            "            String channelId = \"1\";\n" +
            "            String channelName_1 = \"channel1\";\n" +
            "            NotificationChannel channel = new NotificationChannel(channelId, channelName_1, NotificationManager.IMPORTANCE_DEFAULT);\n" +
            "            channel.enableLights(true);\n" +
            "            channel.setLightColor(Color.RED);\n" +
            "            channel.enableVibration(true);\n" +
            "            channel.setShowBadge(true);\n" +
            "            builder.setChannelId(channelId);\n" +
            "            if (manager != null) {\n" +
            "                manager.createNotificationChannel(channel);\n" +
            "            }\n" +
            "        }\n" +
            "            else {\n" +
            "                builder.setDefaults(Notification.DEFAULT_SOUND|Notification.DEFAULT_LIGHTS|Notification.DEFAULT_VIBRATE);\n" +
            "            }\n" +
            "            Intent intent=getIntent();\n" +
            "            TaskStackBuilder stackBuilder=TaskStackBuilder.create(getApplicationContext());\n" +
            "            stackBuilder.addNextIntent(intent);\n" +
            "            PendingIntent pendingIntent=stackBuilder.getPendingIntent(001,PendingIntent.FLAG_UPDATE_CURRENT);\n" +
            "            if(manager!=null){\n" +
            "                manager.notify(notifyid,builder.build());\n" +
            "            }\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "    }\n" +
            "    public void chat(){\n" +
            "        int notifyid=002;\n" +
            "        NotificationCompat.Builder builder=new NotificationCompat.Builder(this)\n" +
            "                .setSmallIcon(R.mipmap.ic_launcher_round)\n" +
            "                .setContentTitle(\"Android Learning\")\n" +
            "                .setContentText(\"Message Arrived\")\n" +
            "                .setAutoCancel(true);\n" +
            "\n" +
            "        NotificationCompat.InboxStyle inboxStyle=new NotificationCompat.InboxStyle();\n" +
            "        inboxStyle.setBigContentTitle(\"Messages\");\n" +
            "        inboxStyle.addLine(\"Älpha\");\n" +
            "        inboxStyle.addLine(\"Beta\");\n" +
            "        inboxStyle.addLine(\"CupCake\");\n" +
            "        inboxStyle.addLine(\"Donut\");\n" +
            "        builder.setStyle(inboxStyle);\n" +
            "        Intent intent=getIntent();\n" +
            "        TaskStackBuilder stackBuilder=TaskStackBuilder.create(MainActivity.this);\n" +
            "        stackBuilder.addNextIntent(intent);\n" +
            "        PendingIntent pendingIntent=PendingIntent.getActivity(this,0,intent,PendingIntent.FLAG_UPDATE_CURRENT);\n" +
            "        builder.setContentIntent(pendingIntent);\n" +
            "        NotificationManager manager=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);\n" +
            "        if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.O) {\n" +
            "            String channelId2 = \"2\";\n" +
            "            String channelName_2 = \"channel2\";\n" +
            "            NotificationChannel channel = new NotificationChannel(channelId2, channelName_2, NotificationManager.IMPORTANCE_DEFAULT);\n" +
            "            channel.enableLights(true);\n" +
            "            channel.setLightColor(Color.RED);\n" +
            "            channel.enableVibration(true);\n" +
            "            channel.setShowBadge(true);\n" +
            "            builder.setChannelId(channelId2);\n" +
            "\n" +
            "\n" +
            "            if (manager != null) {\n" +
            "                manager.createNotificationChannel(channel);\n" +
            "            }\n" +
            "        }\n" +
            "            else {\n" +
            "                builder.setDefaults(Notification.DEFAULT_SOUND|Notification.DEFAULT_LIGHTS|Notification.DEFAULT_VIBRATE);\n" +
            "            }\n" +
            "\n" +
            "            if(manager!=null){\n" +
            "                manager.notify(notifyid,builder.build());\n" +
            "            }\n" +
            "\n" +
            "\n" +
            "\n" +
            "    }\n" +
            "    public void longText() {\n" +
            "        int notifyid = 003;\n" +
            "        Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher_round);\n" +
            "        NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\n" +
            "        NotificationCompat.BigTextStyle bigTextStyle = new NotificationCompat.BigTextStyle();\n" +
            "        bigTextStyle.bigText(\"Hii all welcome to Android Learning.All the best for your future with android delopment\");\n" +
            "        bigTextStyle.setSummaryText(\"Android Learning\");\n" +
            "        NotificationCompat.Builder builder = new NotificationCompat.Builder(this)\n" +
            "                .setSmallIcon(R.mipmap.ic_launcher_round)\n" +
            "                .setContentTitle(\"Android Learning\")\n" +
            "                .setStyle(bigTextStyle);\n" +
            "        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n" +
            "            String channelId = \"1\";\n" +
            "            String channelName_1 = \"channel1\";\n" +
            "            NotificationChannel channel = new NotificationChannel(channelId, channelName_1, NotificationManager.IMPORTANCE_DEFAULT);\n" +
            "            channel.enableLights(true);\n" +
            "            channel.setLightColor(Color.RED);\n" +
            "            channel.enableVibration(true);\n" +
            "            channel.setShowBadge(true);\n" +
            "            builder.setChannelId(channelId);\n" +
            "            if (manager != null) {\n" +
            "                manager.createNotificationChannel(channel);\n" +
            "            }\n" +
            "        }else {\n" +
            "                builder.setDefaults(Notification.DEFAULT_SOUND | Notification.DEFAULT_LIGHTS | Notification.DEFAULT_VIBRATE);\n" +
            "            }\n" +
            "            Intent intent = getIntent();\n" +
            "            TaskStackBuilder stackBuilder = TaskStackBuilder.create(getApplicationContext());\n" +
            "            stackBuilder.addNextIntent(intent);\n" +
            "            PendingIntent pendingIntent = stackBuilder.getPendingIntent(001, PendingIntent.FLAG_UPDATE_CURRENT);\n" +
            "            if (manager != null) {\n" +
            "                manager.notify(notifyid, builder.build());\n" +
            "            }\n" +
            "\n" +
            "\n" +
            "\n" +
            "    }\n" +
            "        public void Imagenotification() {\n" +
            "            int notifyid=004;\n" +
            "            NotificationCompat.BigPictureStyle bigPictureStyle=new NotificationCompat.BigPictureStyle();\n" +
            "            bigPictureStyle.bigPicture(BitmapFactory.decodeResource(getResources(),R.drawable.ic_launcher_background)).build();\n" +
            "            Intent intent=getIntent();\n" +
            "\n" +
            "            PendingIntent pendingIntent=PendingIntent.getActivity(MainActivity.this,0,intent,0);\n" +
            "            NotificationManager manager=(NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);\n" +
            "            NotificationCompat.Builder builder=new NotificationCompat.Builder(this)\n" +
            "                    .setSmallIcon(R.mipmap.ic_launcher_round)\n" +
            "                    .setContentTitle(\"Android Learning\")\n" +
            "                   .addAction(android.R.drawable.ic_menu_share,\"Share\",pendingIntent)\n" +
            "                    .setStyle(bigPictureStyle);\n" +
            "            builder.setContentIntent(pendingIntent);\n" +
            "            if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.O) {\n" +
            "                String channelId = \"1\";\n" +
            "                String channelName_1 = \"channel1\";\n" +
            "                NotificationChannel channel = new NotificationChannel(channelId, channelName_1, NotificationManager.IMPORTANCE_DEFAULT);\n" +
            "                channel.enableLights(true);\n" +
            "                channel.setLightColor(Color.RED);\n" +
            "                channel.enableVibration(true);\n" +
            "                channel.setShowBadge(true);\n" +
            "                builder.setChannelId(channelId);\n" +
            "                if (manager != null) {\n" +
            "                    manager.createNotificationChannel(channel);\n" +
            "                }\n" +
            "            }\n" +
            "                else {\n" +
            "                    builder.setDefaults(Notification.DEFAULT_SOUND|Notification.DEFAULT_LIGHTS|Notification.DEFAULT_VIBRATE);\n" +
            "                }\n" +
            "\n" +
            "                if(manager!=null){\n" +
            "                    manager.notify(notifyid,builder.build());\n" +
            "                }\n" +
            "\n" +
            "\n" +
            "            }\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "\n"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Toast;

public class Fragment_ImageView_demo extends Fragment {
    ImageView imageView;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_imageview_demo, container, false);
        imageView=(ImageView)view.findViewById(R.id.image_view);
        imageView.setImageResource(R.drawable.icon);
        imageView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(getActivity(), "ImageView Clicked", Toast.LENGTH_SHORT).show();
            }
        });
        return view;
    }
}

package com.Learning.com;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.Menu;
import android.view.MenuItem;

public class ExpandableRecyclerView extends AppCompatActivity {
    RecyclerView recycler;
    PeopleAdapter adapter;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_expandable_recycler_view);
        recycler = (RecyclerView) findViewById(R.id.main_recycler);

        adapter = new PeopleAdapter(this);
        adapter.setMode(ExpandableRecyclerAdapter.MODE_ACCORDION);
        recycler.setLayoutManager(new LinearLayoutManager(this));
        recycler.setAdapter(adapter);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        super.onCreateOptionsMenu(menu);

        getMenuInflater().inflate(R.menu.menu_main, menu);

        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case R.id.action_expand_all:
                adapter.expandAll();
                return true;
            case R.id.action_collapse_all:
                adapter.collapseAll();
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }
}


package com.Learning.com;

import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import java.util.ArrayList;

import butterknife.BindView;

public class Fragment_Recyclerview_inside_recyclerview extends Fragment {
    RecyclerView rvVertical;


    ArrayList<VerticalModel> mArrayList = new ArrayList<>();
    Context context;

    VerticalRecyclerViewAdapter mAdapter;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_recyclerview_inside_recyclerview, container, false);
        rvVertical=(RecyclerView)view.findViewById(R.id.rvVertical);
        rvVertical.setLayoutManager(new LinearLayoutManager(context, LinearLayoutManager.VERTICAL, false));

        mAdapter = new VerticalRecyclerViewAdapter(getActivity(), mArrayList);

        rvVertical.setAdapter(mAdapter);

        setDataOnVerticalRecyclerView();
        return view;
    }
    private void setDataOnVerticalRecyclerView() {
        for (int i = 1; i <= 5; i++) {

            VerticalModel mVerticalModel = new VerticalModel();

            mVerticalModel.setTitle("Title " + i);

            ArrayList<HorizontalModel> arrayList = new ArrayList<>();

            for (int j = 0; j <= 5; j++) {
                HorizontalModel mHorizontalModel = new HorizontalModel();
                mHorizontalModel.setDescription("Description : " + j);
                mHorizontalModel.setName("Name : " + j);
                arrayList.add(mHorizontalModel);
            }

            mVerticalModel.setArrayList(arrayList);

            mArrayList.add(mVerticalModel);

        }
        mAdapter.notifyDataSetChanged();
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_MulitiAutoCompleteTexview_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.widget.ArrayAdapter;\n" +
            "import android.widget.MultiAutoCompleteTextView;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "MultiAutoCompleteTextView multiAutoCompleteTextView;\n" +
            "String[] values={\"Alpha\",\"Beta\",\"Cupcake\",\"Eclair\"};\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        multiAutoCompleteTextView=(MultiAutoCompleteTextView)findViewById(R.id.mul_aut);\n" +
            "        ArrayAdapter<String>adapter=new ArrayAdapter<String>(this,android.R.layout.simple_list_item_1,values);\n" +
            "        multiAutoCompleteTextView.setThreshold(1);\n" +
            "        multiAutoCompleteTextView.setAdapter(adapter);\n" +
            "        multiAutoCompleteTextView.setTokenizer(new MultiAutoCompleteTextView.CommaTokenizer());\n" +
            "\n" +
            "\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_image_url_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.app.Activity;\n" +
            "import android.os.Bundle;\n" +
            "import android.widget.ImageView;\n" +
            "\n" +
            "import com.master.glideimageview.GlideImageView;\n" +
            "\n" +
            "public class MainActivity extends Activity {\n" +
            "    GlideImageView glideImageView;\n" +
            "    @Override\n" +
            "    public void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        glideImageView = (GlideImageView) findViewById(R.id.glide_image_view);\n" +
            "        glideImageView.loadImageUrl(\"https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Pizigani_1367_Chart_10MB.jpg/800px-Pizigani_1367_Chart_10MB.jpg\");\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "}\n"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_image_url_ref extends Fragment {
    TextView text,head,content,text_m,head_m,content_m;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text=(TextView)view.findViewById(R.id.text_implementation);
        head=(TextView)view.findViewById(R.id.head_implementation);
        content=(TextView)view.findViewById(R.id.content_implementation);
        text_m=(TextView)view.findViewById(R.id.text_manifest);
        head_m=(TextView)view.findViewById(R.id.head_manifest);
        content_m=(TextView)view.findViewById(R.id.content_manifest);
//        text_m.setVisibility(View.VISIBLE);
//        head_m.setVisibility(View.VISIBLE);
//        content_m.setVisibility(View.VISIBLE);



        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n"+
                "After Implementation sync now to implement the content");
        content.setText("implementation 'com.master.android:glideimageview:2.1'");



        return view;
    }



}






package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CompoundButton;
import android.widget.Toast;
import android.widget.ToggleButton;

public class Fragment_toggle_demo extends Fragment {
    ToggleButton toggleButton;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_toggle_demo, container, false);
        toggleButton=(ToggleButton)view.findViewById(R.id.togglebutton);
        toggleButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if(toggleButton.isChecked()) {
                    Toast.makeText(getActivity(), "Toggle is on", Toast.LENGTH_SHORT).show();
                }else {
                    Toast.makeText(getActivity(), "Toggle is off", Toast.LENGTH_SHORT).show();
                }
            }
        });
        return view;
    }



}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.TextView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class fragment_bundle_passing_java  extends Fragment {
    TextView Title2;
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.content.Intent;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.EditText;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "Button btn;\n" +
            "EditText et_text;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        et_text=(EditText)findViewById(R.id.et_text);\n" +
            "        btn=(Button)findViewById(R.id.submit);\n" +
            "        btn.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                String text=et_text.getText().toString();\n" +
            "                Intent intent=new Intent(Bundle_passing_demo.this,SecondActivity.class);\n" +
            "                intent.putExtra(\"text_sent\",text);\n" +
            "                startActivity(intent);\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "\n" +
            "    }\n"
            ;
    String code2="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "public class SecondActivity extends AppCompatActivity {\n" +
            "TextView text;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_second);\n" +
            "        text=(TextView)findViewById(R.id.text);\n" +
            "        try {\n" +
            "            String textt = getIntent().getStringExtra(\"text_sent\");\n" +
            "            text.setText(textt);\n" +
            "        }catch (NullPointerException e){\n" +
            "            e.printStackTrace();\n" +
            "        }catch (Exception e){\n" +
            "            e.printStackTrace();\n" +
            "        }\n" +
            "\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        WebView webview2 = (WebView)view.findViewById(R.id.webview2);
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Title2=(TextView)view.findViewById(R.id.title2);
        Title2.setText("SecondActivity.Java");
        Codeview.with(getActivity().getApplicationContext())
                .withCode(code2)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview2);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_okhttp_ref extends Fragment {
    TextView text,head,content,text_m,head_m,content_m;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text=(TextView)view.findViewById(R.id.text_implementation);
        head=(TextView)view.findViewById(R.id.head_implementation);
        content=(TextView)view.findViewById(R.id.content_implementation);
        text_m=(TextView)view.findViewById(R.id.text_manifest);
        head_m=(TextView)view.findViewById(R.id.head_manifest);
        content_m=(TextView)view.findViewById(R.id.content_manifest);
        text_m.setVisibility(View.VISIBLE);
        head_m.setVisibility(View.VISIBLE);
        content_m.setVisibility(View.VISIBLE);



        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n"+
                "After Implementation sync now to implement the content");
        content.setText("implementation 'com.squareup.okhttp3:okhttp:3.9.1'");


        head_m.setText("Manifest Guide");

        text_m.setText("Click-->app-->Manifest-->(add permission)\n"+
                "Add Permission before application tag:-(top of <application)");
        content_m.setText("<uses-permission android:name=\"android.permission.INTERNET\" />");

        return view;
    }



}




package com.Learning.com;

import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;

import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;

import android.widget.TextView;

public class TabbedActivity extends AppCompatActivity {

    /**
     * The {@link android.support.v4.view.PagerAdapter} that will provide
     * fragments for each of the sections. We use a
     * {@link FragmentPagerAdapter} derivative, which will keep every
     * loaded fragment in memory. If this becomes too memory intensive, it
     * may be best to switch to a
     * {@link android.support.v4.app.FragmentStatePagerAdapter}.
     */
    private SectionsPagerAdapter mSectionsPagerAdapter;

    /**
     * The {@link ViewPager} that will host the section contents.
     */
    private ViewPager mViewPager;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_tabbed);

        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        // Create the adapter that will return a fragment for each of the three
        // primary sections of the activity.
        mSectionsPagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager());

        // Set up the ViewPager with the sections adapter.
        mViewPager = (ViewPager) findViewById(R.id.container);
        mViewPager.setAdapter(mSectionsPagerAdapter);

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
            }
        });

    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_tabbed, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    /**
     * A placeholder fragment containing a simple view.
     */
    public static class PlaceholderFragment extends Fragment {
        /**
         * The fragment argument representing the section number for this
         * fragment.
         */
        private static final String ARG_SECTION_NUMBER = "section_number";

        public PlaceholderFragment() {
        }

        /**
         * Returns a new instance of this fragment for the given section
         * number.
         */
        public static PlaceholderFragment newInstance(int sectionNumber) {
            PlaceholderFragment fragment = new PlaceholderFragment();
            Bundle args = new Bundle();
            args.putInt(ARG_SECTION_NUMBER, sectionNumber);
            fragment.setArguments(args);
            return fragment;
        }

        @Override
        public View onCreateView(LayoutInflater inflater, ViewGroup container,
                                 Bundle savedInstanceState) {
            View rootView = inflater.inflate(R.layout.fragment_tabbed, container, false);
            TextView textView = (TextView) rootView.findViewById(R.id.section_label);
            textView.setText(getString(R.string.section_format, getArguments().getInt(ARG_SECTION_NUMBER)));
            return rootView;
        }
    }

    /**
     * A {@link FragmentPagerAdapter} that returns a fragment corresponding to
     * one of the sections/tabs/pages.
     */
    public class SectionsPagerAdapter extends FragmentPagerAdapter {

        public SectionsPagerAdapter(FragmentManager fm) {
            super(fm);
        }

        @Override
        public Fragment getItem(int position) {
            // getItem is called to instantiate the fragment for the given page.
            // Return a PlaceholderFragment (defined as a static inner class below).
            return PlaceholderFragment.newInstance(position + 1);
        }

        @Override
        public int getCount() {
            // Show 3 total pages.
            return 3;
        }
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Toast;

import pl.droidsonroids.gif.GifImageView;

public class Fragment_gifImageView_demo extends Fragment {
    GifImageView loading;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_gifimageview_demo, container, false);
        loading=(GifImageView)view.findViewById(R.id.loading);
        loading.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(getActivity(), "Gif ImageView", Toast.LENGTH_SHORT).show();
            }
        });
        return view;
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_Speech_text_ref extends Fragment {
    TextView text, head, content, text_m, head_m, content_m,textg,headg,content_g;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text = (TextView) view.findViewById(R.id.text_implementation);
        head = (TextView) view.findViewById(R.id.head_implementation);
        content = (TextView) view.findViewById(R.id.content_implementation);
        text_m = (TextView) view.findViewById(R.id.text_manifest);
        head_m = (TextView) view.findViewById(R.id.head_manifest);
        content_m = (TextView) view.findViewById(R.id.content_manifest);
        text_m.setVisibility(View.VISIBLE);
        head_m.setVisibility(View.VISIBLE);
        content_m.setVisibility(View.VISIBLE);
        head.setVisibility(View.GONE);
        text.setVisibility(View.GONE);
        content.setVisibility(View.GONE);
//        textg = (TextView) view.findViewById(R.id.text_gradle);
////        headg = (TextView) view.findViewById(R.id.head_gradle);
////        content_g = (TextView) view.findViewById(R.id.content_gradle);
////        textg.setVisibility(View.VISIBLE);
////        headg.setVisibility(View.VISIBLE);
////        content_g.setVisibility(View.VISIBLE);


        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n" +
                "After Implementation sync now to implement the content");
        content.setText("implementation 'com.github.blikoon:QRCodeScanner:0.1.2'");


        head_m.setText("Manifest Guide");

        text_m.setText("Click-->app-->Manifest-->(add permission)\n" +
                "Add Permission before application tag:-(top of <application)");
        content_m.setText("<uses-permission android:name=\"android.permission.RECORD_AUDIO\" />");


//        headg.setText("build.gradle(Project:(your app name)");
//
//        textg.setText("Click-->Gradle Scripts-->build.gradle(Project:(your app name)-->allprojects-->repositories\n" +
//                "After Implementation sync now to implement the content");
//        content_g.setText("  google()\n" +
//                "        jcenter()\n" +
//                "        maven {\n" +
//                "            url 'https://jitpack.io'\n" +
//                "        }\n" +
//                "        ");

        return view;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_Navigationdrawer_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.content.Intent;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "importimport android.os.Bundle;\n" +
            "import android.support.design.widget.FloatingActionButton;\n" +
            "import android.support.design.widget.Snackbar;\n" +
            "import android.view.View;\n" +
            "import android.support.design.widget.NavigationView;\n" +
            "import android.support.v4.view.GravityCompat;\n" +
            "import android.support.v4.widget.DrawerLayout;\n" +
            "import android.support.v7.app.ActionBarDrawerToggle;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.support.v7.widget.Toolbar;\n" +
            "import android.view.Menu;\n" +
            "import android.view.MenuItem;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity\n" +
            "        implements NavigationView.OnNavigationItemSelectedListener {\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n" +
            "        setSupportActionBar(toolbar);\n" +
            "\n" +
            "        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n" +
            "        fab.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View view) {\n" +
            "                Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\n" +
            "                        .setAction(\"Action\", null).show();\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);\n" +
            "        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(\n" +
            "                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\n" +
            "        drawer.addDrawerListener(toggle);\n" +
            "        toggle.syncState();\n" +
            "\n" +
            "        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);\n" +
            "        navigationView.setNavigationItemSelectedListener(this);\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onBackPressed() {\n" +
            "        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);\n" +
            "        if (drawer.isDrawerOpen(GravityCompat.START)) {\n" +
            "            drawer.closeDrawer(GravityCompat.START);\n" +
            "        } else {\n" +
            "            super.onBackPressed();\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public boolean onCreateOptionsMenu(Menu menu) {\n" +
            "        // Inflate the menu; this adds items to the action bar if it is present.\n" +
            "        getMenuInflater().inflate(R.menu.main, menu);\n" +
            "        return true;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public boolean onOptionsItemSelected(MenuItem item) {\n" +
            "        // Handle action bar item clicks here. The action bar will\n" +
            "        // automatically handle clicks on the Home/Up button, so long\n" +
            "        // as you specify a parent activity in AndroidManifest.xml.\n" +
            "        int id = item.getItemId();\n" +
            "\n" +
            "        //noinspection SimplifiableIfStatement\n" +
            "        if (id == R.id.action_settings) {\n" +
            "            return true;\n" +
            "        }\n" +
            "\n" +
            "        return super.onOptionsItemSelected(item);\n" +
            "    }\n" +
            "\n" +
            "    @SuppressWarnings(\"StatementWithEmptyBody\")\n" +
            "    @Override\n" +
            "    public boolean onNavigationItemSelected(MenuItem item) {\n" +
            "        // Handle navigation view item clicks here.\n" +
            "        int id = item.getItemId();\n" +
            "\n" +
            "        if (id == R.id.nav_camera) {\n" +
            "            // Handle the camera action\n" +
            "            Toast.makeText(this, \"Camera\", Toast.LENGTH_SHORT).show();\n" +
            "        } else if (id == R.id.nav_gallery) {\n" +
            "            Toast.makeText(this, \"nav_gallery\", Toast.LENGTH_SHORT).show();\n" +
            "        } else if (id == R.id.nav_slideshow) {\n" +
            "            Toast.makeText(this, \"nav_slideshow\", Toast.LENGTH_SHORT).show();\n" +
            "        } else if (id == R.id.nav_manage) {\n" +
            "            Toast.makeText(this, \"nav_manage\", Toast.LENGTH_SHORT).show();\n" +
            "        } else if (id == R.id.nav_share) {\n" +
            "            Toast.makeText(this, \"nav_share\", Toast.LENGTH_SHORT).show();\n" +
            "        } else if (id == R.id.nav_send) {\n" +
            "            Toast.makeText(this, \"nav_send\", Toast.LENGTH_SHORT).show();\n" +
            "        }\n" +
            "        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);\n" +
            "        drawer.closeDrawer(GravityCompat.START);\n" +
            "        return true;\n" +
            "    }\n" +
            "}\n"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.annotation.TargetApi;
import android.content.Context;
import android.content.pm.PackageManager;
import android.hardware.fingerprint.FingerprintManager;
import android.Manifest;
import android.os.Build;
import android.os.CancellationSignal;
import android.support.v4.app.ActivityCompat;
import android.widget.Toast;

@TargetApi(Build.VERSION_CODES.M)

public class FingerPrintHandler extends FingerprintManager.AuthenticationCallback {

    // You should use the CancellationSignal method whenever your app can no longer process user input, for example when your app goes
    // into the background. If you don’t use this method, then other apps will be unable to access the touch sensor, including the lockscreen!//

    private CancellationSignal cancellationSignal;
    private Context context;

    public FingerPrintHandler(Context mContext) {
        context = mContext;
    }

    //Implement the startAuth method, which is responsible for starting the fingerprint authentication process//

    public void startAuth(FingerprintManager manager, FingerprintManager.CryptoObject cryptoObject) {

        cancellationSignal = new CancellationSignal();
        if (ActivityCompat.checkSelfPermission(context, Manifest.permission.USE_FINGERPRINT) != PackageManager.PERMISSION_GRANTED) {
            return;
        }
        manager.authenticate(cryptoObject, cancellationSignal, 0, this, null);
    }

    @Override
    //onAuthenticationError is called when a fatal error has occurred. It provides the error code and error message as its parameters//

    public void onAuthenticationError(int errMsgId, CharSequence errString) {

        //I’m going to display the results of fingerprint authentication as a series of toasts.
        //Here, I’m creating the message that’ll be displayed if an error occurs//

        Toast.makeText(context, "Authentication error\n" + errString, Toast.LENGTH_LONG).show();
    }

    @Override

    //onAuthenticationFailed is called when the fingerprint doesn’t match with any of the fingerprints registered on the device//

    public void onAuthenticationFailed() {
        Toast.makeText(context, "Authentication failed", Toast.LENGTH_LONG).show();
    }

    @Override

    //onAuthenticationHelp is called when a non-fatal error has occurred. This method provides additional information about the error,
    //so to provide the user with as much feedback as possible I’m incorporating this information into my toast//
    public void onAuthenticationHelp(int helpMsgId, CharSequence helpString) {
        Toast.makeText(context, "Authentication help\n" + helpString, Toast.LENGTH_LONG).show();
    }@Override

    //onAuthenticationSucceeded is called when a fingerprint has been successfully matched to one of the fingerprints stored on the user’s device//
    public void onAuthenticationSucceeded(
            FingerprintManager.AuthenticationResult result) {

        Toast.makeText(context, "Success!", Toast.LENGTH_LONG).show();
    }

}




package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v4.widget.SwipeRefreshLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Toast;

public class Fragment_swipe_refresh_demo extends Fragment {
    SwipeRefreshLayout swipeRefreshLayout;
    int i=0;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_swipe_refresh_demo, container, false);
        swipeRefreshLayout=(SwipeRefreshLayout)view.findViewById(R.id.swipe);
        swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
            @Override
            public void onRefresh() {
                i=i+1;
                Toast.makeText(getActivity(), "Swipe count"+i, Toast.LENGTH_SHORT).show();
                swipeRefreshLayout.setRefreshing(false);

            }
        });
        return view;
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import id.pahlevikun.droidcrypt.DroidCrypt;
import id.pahlevikun.droidcrypt.model.Data;
import id.pahlevikun.droidcrypt.type.Algorithm;

public class Fragment_encryptanddecrypt_demo extends Fragment {
    TextView result;
    Button e_with,e_without,d_with,d_without;
    EditText e_text;
    String key="KEY_IN_STRING";
    Data encrypted=null,decrypted=null;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_encrypt_and_decrypt_demo, container, false);
        result=(TextView)view.findViewById(R.id.result);
        e_with=(Button)view.findViewById(R.id.e_with);
        e_without=(Button)view.findViewById(R.id.e_without);
        d_with=(Button)view.findViewById(R.id.d_with);
        d_without=(Button)view.findViewById(R.id.d_without);
        e_text=(EditText)view.findViewById(R.id.et_text);
        e_with.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                try {
                    DroidCrypt droidCrypt = new DroidCrypt(getActivity());
                    encrypted = droidCrypt.startEncryptWithBase64(key, Algorithm.MD5.getType(), e_text.getText().toString());
                    result.setText(encrypted.getTextInString());
                }catch (Exception e){
                    e.printStackTrace();
                }

            }
        });
        e_without.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                try {
                    DroidCrypt droidCrypt = new DroidCrypt(getActivity());
                    encrypted = droidCrypt.startEncryptWithoutBase64(key, Algorithm.MD5.getType(), e_text.getText().toString());
                    result.setText(encrypted.getTextInString());
                }catch (Exception e){
                    e.printStackTrace();
                }
            }
        });
        d_with.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                try {
                    DroidCrypt droidCrypt = new DroidCrypt(getActivity());
                    decrypted = droidCrypt.startDecryptWithBase64(key, Algorithm.MD5.getType(), encrypted);
                    result.setText(decrypted.getTextInString());
                }catch (Exception e){
                    e.printStackTrace();
                }
            }
        });

        d_without.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                try {
                    DroidCrypt droidCrypt = new DroidCrypt(getActivity());
                    decrypted = droidCrypt.startDecryptWithoutBase64(key, Algorithm.MD5.getType(), encrypted);
                    result.setText(decrypted.getTextInString());
                }catch (Exception e){
                    e.printStackTrace();
                }
            }
        });

        return view;
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_encryptanddecrypt_ref extends Fragment {
    TextView text,head,content,text_m,head_m,content_m;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text=(TextView)view.findViewById(R.id.text_implementation);
        head=(TextView)view.findViewById(R.id.head_implementation);
        content=(TextView)view.findViewById(R.id.content_implementation);
        text_m=(TextView)view.findViewById(R.id.text_manifest);
        head_m=(TextView)view.findViewById(R.id.head_manifest);
        content_m=(TextView)view.findViewById(R.id.content_manifest);
//        text_m.setVisibility(View.VISIBLE);
//        head_m.setVisibility(View.VISIBLE);
//        content_m.setVisibility(View.VISIBLE);



        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n"+
                "After Implementation sync now to implement the content");
        content.setText("implementation 'com.github.pahlevikun:droidcrypt:0.0.1'");



        return view;
    }



}





package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ExpandableListView;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class Fragment_Expandable_Listview_demo  extends Fragment {
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_expandable_listview_demo, container, false);
        ExpandableListView expandableListView;
        HashMap<String, List<String>> listChild;
        List<String>listHeader;
        ExpandableAdapter expandable_engg_adapter;
        expandableListView=(ExpandableListView)view.findViewById(R.id.expListView_phy);
        listChild=ExpandableListData.getData();
        listHeader=new ArrayList<String>(listChild.keySet());
        expandable_engg_adapter=new ExpandableAdapter(getActivity(),listHeader,listChild);
        expandableListView.setAdapter(expandable_engg_adapter);
        return view;
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.DatePicker;
import android.widget.Toast;

import java.util.Calendar;

public class Fragment_datepicker_demo extends Fragment {
    DatePicker datePicker;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_datepicker_demo, container, false);
        datePicker=(DatePicker)view.findViewById(R.id.date_picker);
        Calendar calendar=Calendar.getInstance();
        datePicker.init(calendar.get(Calendar.YEAR),calendar.get(Calendar.MONTH),calendar.get(Calendar.DAY_OF_MONTH),new DatePicker.OnDateChangedListener() {

            @Override
            public void onDateChanged(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
                String[] date = {""};
                date[0] =dayOfMonth+"-"+monthOfYear+"-"+year;
                String s_date=date[0];
                Toast.makeText(getActivity(), s_date, Toast.LENGTH_SHORT).show();
            }
        });
        return view;
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_scrollview_ref extends Fragment {
    TextView text,head;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_textview_ref, container, false);
        text=(TextView)view.findViewById(R.id.text);
        head=(TextView)view.findViewById(R.id.head);
        head.setText("Create Activity& Condition for scrollView");

        text.setText("Click-->File-->New-->Activity-->EmptyActivity\n" +
                "(ScrollView will not allow multiple child,Create parent layout under ScrollView is mandatory )");

        return view;
    }



}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_gifimageview_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "import pl.droidsonroids.gif.GifImageView;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    GifImageView loading;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        loading=(GifImageView)findViewById(R.id.loading);\n" +
            "        loading.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                Toast.makeText(MainActivity.this, \"Gif ImageView\", Toast.LENGTH_SHORT).show();\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}





package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.TextView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_expandable_listview_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    TextView title2,title3;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.widget.ExpandableListView;\n" +
            "\n" +
            "import java.util.ArrayList;\n" +
            "import java.util.HashMap;\n" +
            "import java.util.List;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        ExpandableListView expandableListView;\n" +
            "        HashMap<String, List<String>> listChild;\n" +
            "        List<String>listHeader;\n" +
            "        ExpandableAdapter expandable_engg_adapter;\n" +
            "        expandableListView=(ExpandableListView)findViewById(R.id.expListView_phy);\n" +
            "        listChild=ExpandableListData.getData();\n" +
            "        listHeader=new ArrayList<String>(listChild.keySet());\n" +
            "        expandable_engg_adapter=new ExpandableAdapter(this,listHeader,listChild);\n" +
            "        expandableListView.setAdapter(expandable_engg_adapter);\n" +
            "\n" +
            "    }\n" +
            "}\n";
    String Code2="import java.util.ArrayList;\n" +
            "import java.util.HashMap;\n" +
            "import java.util.List;\n" +
            "\n" +
            "public class ExpandableListData {\n" +
            "    public static HashMap<String , List<String>> getData(){\n" +
            "        HashMap<String,List<String>> expandableListDetail=new HashMap<String, List<String>>();\n" +
            "\n" +
            "        List<String> BikeList = new ArrayList<>();\n" +
            "        BikeList.add(\"\\u2022\\tYamaha\");\n" +
            "        BikeList.add(\"\\u2022\\tHonda\");\n" +
            "        BikeList.add(\"\\u2022\\tBajaj\");\n" +
            "        BikeList.add(\"\\u2022\\tKTM\");\n" +
            "        BikeList.add(\"\\u2022\\tKawasaki\");\n" +
            "        BikeList.add(\"\\u2022\\tDucati\");\n" +
            "        BikeList.add(\"\\u2022\\tRoyal Enfield\");\n" +
            "        BikeList.add(\"\\u2022\\tSuzuki\");\n" +
            "        BikeList.add(\"\\u2022\\tBeneli\");\n" +
            "\n" +
            "        List<String> CarList = new ArrayList<>();\n" +
            "        CarList.add(\"\\u2022\\tAudi\");\n" +
            "        CarList.add(\"\\u2022\\tTata\");\n" +
            "        CarList.add(\"\\u2022\\tDatsun \");\n" +
            "        CarList.add(\"\\u2022\\tMaruthi\");\n" +
            "        CarList.add(\"\\u2022\\tRenault \");\n" +
            "        CarList.add(\"\\u2022\\tFord\");\n" +
            "\n" +
            "\n" +
            "        expandableListDetail.put(\"Bike Products\",BikeList);\n" +
            "        expandableListDetail.put(\"Car Products\",CarList);\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "        return expandableListDetail;\n" +
            "    }\n" +
            "}\n" +
            "\n";
    String Code3="import android.content.Context;\n" +
            "import android.view.LayoutInflater;\n" +
            "import android.view.View;\n" +
            "import android.view.ViewGroup;\n" +
            "import android.widget.BaseExpandableListAdapter;\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "import java.util.HashMap;\n" +
            "import java.util.List;\n" +
            "\n" +
            "public class ExpandableAdapter extends BaseExpandableListAdapter {\n" +
            "    private Context context;\n" +
            "    private HashMap<String, List<String>> childtitles;\n" +
            "    List<String>headertitles;\n" +
            "    public ExpandableAdapter(Context context,List<String>headertitles,HashMap<String,List<String>>childtitles){\n" +
            "        this.context=context;\n" +
            "        this.childtitles=childtitles;\n" +
            "        this.headertitles=headertitles;\n" +
            "    }\n" +
            "    @Override\n" +
            "    public int getGroupCount() {\n" +
            "        return headertitles.size();\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public int getChildrenCount(int groupPosition) {\n" +
            "        return this.childtitles.get(this.headertitles.get(groupPosition)).size();\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public Object getGroup(int groupPosition) {\n" +
            "        return this.headertitles.get(groupPosition);\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public Object getChild(int groupPosition, int childPosition) {\n" +
            "        return this.childtitles.get(this.headertitles.get(groupPosition)).get(childPosition);\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public long getGroupId(int groupPosition) {\n" +
            "        return groupPosition;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public long getChildId(int groupPosition, int childPosition) {\n" +
            "        return childPosition;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public boolean hasStableIds() {\n" +
            "        return false;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {\n" +
            "        String listTitle=(String)getGroup(groupPosition);\n" +
            "        if(convertView==null) {\n" +
            "            LayoutInflater layoutInflater = (LayoutInflater) this.context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n" +
            "            convertView = layoutInflater.inflate(R.layout.exp_group_header, null);\n" +
            "        }\n" +
            "        TextView listTitleTextView=(TextView)convertView.findViewById(R.id.title);\n" +
            "        listTitleTextView.setText(listTitle);\n" +
            "\n" +
            "        return convertView;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent) {\n" +
            "        final String expandedListText=(String)getChild(groupPosition,childPosition);\n" +
            "        if(convertView==null) {\n" +
            "            LayoutInflater layoutInflater = (LayoutInflater) this.context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n" +
            "            convertView = layoutInflater.inflate(R.layout.exp_child_item, null);\n" +
            "        }\n" +
            "        TextView expandedListTextView=(TextView)convertView.findViewById(R.id.childitem);\n" +
            "        expandedListTextView.setText(expandedListText);\n" +
            "\n" +
            "        return convertView;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public boolean isChildSelectable(int groupPosition, int childPosition) {\n" +
            "        return true;\n" +
            "    }\n" +
            "\n" +
            "}\n" +
            "\n" +
            "\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.three_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        title2=(TextView)view.findViewById(R.id.title2);
        title3=(TextView)view.findViewById(R.id.title3);
        title2.setText("ExpandableListData.Java");
        title3.setText("ExpandableAdapter.Java");
        WebView webView2=(WebView)view.findViewById(R.id.webview2);
        WebView webView3=(WebView)view.findViewById(R.id.webview3);
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy3=(Button)view.findViewById(R.id.copy3);
        copy3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code3);
                clipboard.setPrimaryClip(clip);
            }
        });

        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code2)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webView2);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code3)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webView3);
        return view;
    }



}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_MultiAutoCompletTextview_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <MultiAutoCompleteTextView\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:id=\"@+id/mul_aut\"/>\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginTop=\"20dp\"\n" +
            "        android:text=\"Hint : Alpha,Beta,Cupcake,donut,eclair\"/>\n" +
            "\n" +
            "</LinearLayout>";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_encryptanddecrypt_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.EditText;\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "import id.pahlevikun.droidcrypt.DroidCrypt;\n" +
            "import id.pahlevikun.droidcrypt.model.Data;\n" +
            "import id.pahlevikun.droidcrypt.type.Algorithm;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "TextView result;\n" +
            "Button e_with,e_without,d_with,d_without;\n" +
            "EditText e_text;\n" +
            "String key=\"KEY_IN_STRING\";\n" +
            "Data encrypted=null,decrypted=null;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        result=(TextView)findViewById(R.id.result);\n" +
            "        e_with=(Button)findViewById(R.id.e_with);\n" +
            "        e_without=(Button)findViewById(R.id.e_without);\n" +
            "        d_with=(Button)findViewById(R.id.d_with);\n" +
            "        d_without=(Button)findViewById(R.id.d_without);\n" +
            "        e_text=(EditText)findViewById(R.id.et_text);\n" +
            "        e_with.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                try {\n" +
            "                    DroidCrypt droidCrypt = new DroidCrypt(MainActivity.this);\n" +
            "                    encrypted = droidCrypt.startEncryptWithBase64(key, Algorithm.MD5.getType(), e_text.getText().toString());\n" +
            "                    result.setText(encrypted.getTextInString());\n" +
            "                }catch (Exception e){\n" +
            "                    e.printStackTrace();\n" +
            "                }\n" +
            "\n" +
            "            }\n" +
            "        });\n" +
            "        e_without.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                try {\n" +
            "                    DroidCrypt droidCrypt = new DroidCrypt(MainActivity.this);\n" +
            "                    encrypted = droidCrypt.startEncryptWithoutBase64(key, Algorithm.MD5.getType(), e_text.getText().toString());\n" +
            "                    result.setText(encrypted.getTextInString());\n" +
            "                }catch (Exception e){\n" +
            "                    e.printStackTrace();\n" +
            "                }\n" +
            "            }\n" +
            "        });\n" +
            "        d_with.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                try {\n" +
            "                    DroidCrypt droidCrypt = new DroidCrypt(MainActivity.this);\n" +
            "                    decrypted = droidCrypt.startDecryptWithBase64(key, Algorithm.MD5.getType(), encrypted);\n" +
            "                    result.setText(decrypted.getTextInString());\n" +
            "                }catch (Exception e){\n" +
            "                    e.printStackTrace();\n" +
            "                }\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "        d_without.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                try {\n" +
            "                    DroidCrypt droidCrypt = new DroidCrypt(MainActivity.this);\n" +
            "                    decrypted = droidCrypt.startDecryptWithoutBase64(key, Algorithm.MD5.getType(), encrypted);\n" +
            "                    result.setText(decrypted.getTextInString());\n" +
            "                }catch (Exception e){\n" +
            "                    e.printStackTrace();\n" +
            "                }\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "    }\n" +
            "}\n"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.content.res.Resources;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.Toast;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;


public class Fragment_TextView_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "        xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"match_parent\"\n" +
            "        android:orientation=\"vertical\"\n" +
            "        tools:context=\".MainActivity\">\n" +
            "        <TextView\n" +
            "        android:id=\"@+id/et_text\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginTop=\"20dp\"\n" +
            "        android:layout_marginLeft=\"20dp\"\n" +
            "        android:textColor=\"@android:color/black\"\n" +
            "        android:textStyle=\"bold\"\n" +
            "        android:textIsSelectable=\"true\"\n" +
            "        android:textSize=\"20sp\"\n" +
            "        android:text=\"This is a TextView\"/>\n" +
            "        </LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}

package com.Learning.com;

import android.app.ProgressDialog;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.TextView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_AdvancedWebView_ref extends Fragment {
    TextView text, head, content, text_m, head_m, content_m,textg,headg,content_g;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text = (TextView) view.findViewById(R.id.text_implementation);
        head = (TextView) view.findViewById(R.id.head_implementation);
        content = (TextView) view.findViewById(R.id.content_implementation);
        text_m = (TextView) view.findViewById(R.id.text_manifest);
        head_m = (TextView) view.findViewById(R.id.head_manifest);
        content_m = (TextView) view.findViewById(R.id.content_manifest);
        text_m.setVisibility(View.VISIBLE);
        head_m.setVisibility(View.VISIBLE);
        content_m.setVisibility(View.VISIBLE);
        textg = (TextView) view.findViewById(R.id.text_gradle);
        headg = (TextView) view.findViewById(R.id.head_gradle);
        content_g = (TextView) view.findViewById(R.id.content_gradle);
        textg.setVisibility(View.VISIBLE);
        headg.setVisibility(View.VISIBLE);
        content_g.setVisibility(View.VISIBLE);


        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n" +
                "After Implementation sync now to implement the content");
        content.setText("implementation 'com.github.delight-im:Android-AdvancedWebView:v3.0.0'");


        head_m.setText("Manifest Guide");

        text_m.setText("Click-->app-->Manifest-->(add permission)\n" +
                "Add Permission before application tag:-(top of <application)");
        content_m.setText("<uses-permission android:name=\"android.permission.INTERNET\"/>");



        headg.setText("build.gradle(Project:(your app name)");

        textg.setText("Click-->Gradle Scripts-->build.gradle(Project:(your app name)-->allprojects-->repositories\n" +
                "After Implementation sync now to implement the content");
        content_g.setText("  google()\n" +
                "        jcenter()\n" +
                "        maven {\n" +
                "            url 'https://jitpack.io'\n" +
                "        }\n" +
                "        ");

        return view;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class fragment_custom_alert_dialog_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2;
    TextView title2;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"simple Toast\"\n" +
            "        android:id=\"@+id/s_toast\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"100dp\"/>\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Custom Toast\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"50dp\"\n" +
            "        android:id=\"@+id/c_toast\"/>\n" +
            "</LinearLayout>";
    String code2="<LinearLayout\n" +
            "    xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:id=\"@+id/cl\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "    <ImageView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:id=\"@+id/image\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"150dp\"\n" +
            "        android:src=\"@drawable/ic_launcher_background\"/>\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Customized Toast\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"20dp\"/>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("custom_layout_toast.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_button_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <Button\n" +
            "        android:id=\"@+id/btn\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Click Me!\"\n" +
            "        android:background=\"@android:color/holo_green_dark\"\n" +
            "        android:textStyle=\"bold\"\n" +
            "        android:textColor=\"@android:color/white\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"100dp\" />\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

import com.google.android.gms.ads.AdListener;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.InterstitialAd;
import com.google.android.gms.ads.MobileAds;

public class Advance extends AppCompatActivity {
    InterstitialAd mInterstitialAd;
    int i=1;
    String[] items={"ViewFliper","Animations","ListView","Custom ListView","Expandable ListView","GridView","WebView","SearchView","TabLayout","Bottom Navigation","Navigation Drawer","RecyclerView and CardView","Notification","RecyclerView Inside Recycler View","FingerPrint Recognization","ImageVIew From URL","SharedPreference","SqliteDatabase","Services(BackGround Tasks)"};
    ListView listView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_advance);
        MobileAds.initialize(this,"ca-app-pub-5555883160769534~2999857530");
        mInterstitialAd = new InterstitialAd(this);
        mInterstitialAd.setAdUnitId("ca-app-pub-5555883160769534/6116975464");



        listView=(ListView)findViewById(R.id.listview);
        ArrayAdapter<String> adapter=new ArrayAdapter<String>(this,android.R.layout.simple_list_item_1,android.R.id.text1,items);
        listView.setAdapter(adapter);
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                mInterstitialAd.loadAd(new AdRequest.Builder().build());
                i=i+1;
                Log.i("num of clicks",""+i);
                if(i>1) {
                    if (i % 2 == 0) {

                        if (mInterstitialAd != null && mInterstitialAd.isLoaded()) {
                            mInterstitialAd.show();
                        } else {
                        }

                        if (mInterstitialAd.isLoaded()) {
                            mInterstitialAd.show();
                        } else {
                            Log.d("TAG", "The interstitial wasn't loaded yet.");

                        }

                        mInterstitialAd.setAdListener(new AdListener() {
                            @Override
                            public void onAdLoaded() {
                                // Code to be executed when an ad finishes loading.
                            }

                            @Override
                            public void onAdFailedToLoad(int errorCode) {
                                // Code to be executed when an ad request fails.
                            }

                            @Override
                            public void onAdOpened() {
                                // Code to be executed when the ad is displayed.
                            }

                            @Override
                            public void onAdClicked() {
                                // Code to be executed when the user clicks on an ad.
                            }

                            @Override
                            public void onAdLeftApplication() {
                                // Code to be executed when the user has left the app.
                            }

                            @Override
                            public void onAdClosed() {
                                // Code to be executed when the interstitial ad is closed.
                            }
                        });
                    }
                }
                switch (position){

                    case 0: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "viewflipper");
                        startActivity(intent);
                        break;

                    } case 1: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "Animation");
                        startActivity(intent);
                        break;
                    } case 2: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "listview");
                        startActivity(intent);
                        break;
                    } case 3: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "Customlistview");
                        startActivity(intent);
                        break;
                    } case 4: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "expandablelistview");
                        startActivity(intent);
                        break;
                    } case 5: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "gridview");
                        startActivity(intent);
                        break;
                    } case 6: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "webview");
                        startActivity(intent);
                        break;
                    } case 7: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "searchview");
                        startActivity(intent);
                        break;
                    } case 8: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "tablayout");
                        startActivity(intent);
                        break;

                    } case 9: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "BottomNavigation");
                        startActivity(intent);
                        break;
                    } case 10: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "NavigationDrawer");
                        startActivity(intent);
                        break;
                    } case 11: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "Recyclerandcardview");
                        startActivity(intent);
                        break;
                    } case 12: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "Notification");
                        startActivity(intent);
                        break;
                    } case 13: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "Recyclerviewinsiderecyclerview");
                        startActivity(intent);
                        break;
                    } case 14: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "fingerprintrecognization");
                        startActivity(intent);
                        break;
                    } case 15: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "Imageviewfromurl");
                        startActivity(intent);
                        break;
                    } case 16: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "SharedPref");
                        startActivity(intent);
                        break;
                    } case 17: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "sql");
                        startActivity(intent);
                        break;
                    } case 18: {
                        Intent intent = new Intent(Advance.this, BaseScreen.class);
                        intent.putExtra("title", "services");
                        startActivity(intent);
                        break;
                    }
                }
            }
        });

    }
}

package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_notification_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "   <Button\n" +
            "       android:layout_width=\"wrap_content\"\n" +
            "       android:layout_height=\"wrap_content\"\n" +
            "       android:text=\"Simple\"\n" +
            "       android:id=\"@+id/simple\"\n" +
            "       android:layout_gravity=\"center\"\n" +
            "       android:layout_marginTop=\"100dp\"/>\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Long text\"\n" +
            "        android:id=\"@+id/long_text\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"20dp\"/>\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Chat\"\n" +
            "        android:id=\"@+id/chat\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"20dp\"/>\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Image\"\n" +
            "        android:id=\"@+id/image\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"20dp\"/>\n" +
            "\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;
import android.content.Context;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;


import com.Learning.com.R;

import java.util.ArrayList;

import butterknife.BindView;
import butterknife.ButterKnife;

/**
 * Created by malik on 2/12/17.
 */

public class VerticalRecyclerViewAdapter extends
        RecyclerView.Adapter<VerticalRecyclerViewAdapter.VerticalRecyclerViewHolder> {

    private Context mContext;
    private ArrayList<VerticalModel> mArrayList = new ArrayList<>();

    public VerticalRecyclerViewAdapter(Context mContext, ArrayList<VerticalModel> mArrayList) {
        this.mContext = mContext;
        this.mArrayList = mArrayList;
    }

    @Override
    public VerticalRecyclerViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_vertical, parent, false);
        return new VerticalRecyclerViewHolder(view);
    }

    public void setList(ArrayList<VerticalModel> mArrayList){
        this.mArrayList.addAll(mArrayList);
        notifyDataSetChanged();
    }

    @Override
    public void onBindViewHolder(VerticalRecyclerViewHolder holder, int position) {

        final VerticalModel current = mArrayList.get(position);

        final String strTitle = current.getTitle();

        ArrayList<HorizontalModel> singleSectionItems = current.getArrayList();

        holder.tvTitle.setText(strTitle);

        HorizontalRecyclerViewAdapter itemListDataAdapter =
                new HorizontalRecyclerViewAdapter(mContext, singleSectionItems);

        holder.rvHorizontal.setHasFixedSize(true);
        holder.rvHorizontal.setLayoutManager(new LinearLayoutManager(mContext,
                LinearLayoutManager.VERTICAL, false));
        holder.rvHorizontal.setAdapter(itemListDataAdapter);

        holder.rvHorizontal.setNestedScrollingEnabled(false);

        holder.btnMore.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(mContext, current.getTitle(), Toast.LENGTH_SHORT).show();
            }
        });

    }

    @Override
    public int getItemCount() {
        return mArrayList.size();
    }

    class VerticalRecyclerViewHolder extends RecyclerView.ViewHolder {
        @BindView(R.id.tvTitle)
        TextView tvTitle;

        @BindView(R.id.rvHorizontal)
        RecyclerView rvHorizontal;

        @BindView(R.id.btnMore)
        Button btnMore;

        public VerticalRecyclerViewHolder(View itemView) {
            super(itemView);
            ButterKnife.bind(this, itemView);
        }
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.MultiAutoCompleteTextView;

public class Fragment_MultiAutoCompleteTextView_demo extends Fragment {
    MultiAutoCompleteTextView multiAutoCompleteTextView;
    String[] values={"Alpha","Beta","Cupcake","Eclair"};
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_multi_autocomplete_textview, container, false);
        multiAutoCompleteTextView=(MultiAutoCompleteTextView)view.findViewById(R.id.mul_aut);
        ArrayAdapter<String> adapter=new ArrayAdapter<String>(getActivity(),android.R.layout.simple_list_item_1,values);
        multiAutoCompleteTextView.setThreshold(1);
        multiAutoCompleteTextView.setAdapter(adapter);
        multiAutoCompleteTextView.setTokenizer(new MultiAutoCompleteTextView.CommaTokenizer());
        return view;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_AutoCompleteTextView_xml  extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "   <AutoCompleteTextView\n" +
            "       android:layout_width=\"match_parent\"\n" +
            "       android:layout_height=\"wrap_content\"\n" +
            "       android:id=\"@+id/a_textview\"\n" +
            "       android:layout_marginTop=\"100dp\"/>\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginTop=\"20dp\"\n" +
            "        android:id=\"@+id/text_hint\"/>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_ImageView_Java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code= "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.ImageView;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "ImageView imageView;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        imageView=(ImageView)findViewById(R.id.image_view);\n" +
            "        imageView.setImageResource(R.drawable.ic_launcher_foreground);\n" +
            "        imageView.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                Toast.makeText(MainActivity.this, \"ImageView Clicked\", Toast.LENGTH_SHORT).show();\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }

}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_progressbar_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.os.Handler;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.ProgressBar;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    ProgressBar circle,horizontal;\n" +
            "    Button start,stop;\n" +
            "    int progressbarstatus=0;\n" +
            "    boolean value=false;\n" +
            "    boolean runningbefore=false;\n" +
            "    Handler progressbarHandler;\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(final Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        start=(Button)findViewById(R.id.start);\n" +
            "        stop=(Button)findViewById(R.id.stop);\n" +
            "        circle=(ProgressBar)findViewById(R.id.pb_circle);\n" +
            "        horizontal=(ProgressBar)findViewById(R.id.pb_hr);\n" +
            "        horizontal.setMax(100);\n" +
            "        start.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                value=false;\n" +
            "                if(!runningbefore){\n" +
            "                    progressOperation();\n" +
            "                }else {\n" +
            "                    Toast.makeText(MainActivity.this, \"Already Running...\", Toast.LENGTH_SHORT).show();\n" +
            "                }\n" +
            "            }\n" +
            "        });\n" +
            "        stop.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                value=true;\n" +
            "                runningbefore=false;\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "    }\n" +
            "    private void progressOperation(){\n" +
            "        progressbarHandler=new Handler();\n" +
            "        new Thread(new Runnable() {\n" +
            "            @Override\n" +
            "            public void run() {\n" +
            "                while (progressbarstatus < 100 && !value) {\n" +
            "                    runningbefore = true;\n" +
            "                    progressbarstatus=progressbarstatus+1;\n" +
            "                    try {\n" +
            "                        Thread.sleep(150);\n" +
            "\n" +
            "                    } catch (InterruptedException e) {\n" +
            "                        e.printStackTrace();\n" +
            "                    }\n" +
            "\n" +
            "                    progressbarHandler.post(new Runnable() {\n" +
            "                        @Override\n" +
            "                        public void run() {\n" +
            "                            horizontal.setProgress(progressbarstatus);\n" +
            "                        }\n" +
            "                    });\n" +
            "                }\n" +
            "                if(progressbarstatus==100){\n" +
            "                    try {\n" +
            "                        Thread.sleep(1000);\n" +
            "\n" +
            "                    }catch (InterruptedException e){\n" +
            "                        e.printStackTrace();\n" +
            "                    }\n" +
            "                    horizontal.setProgress(0);\n" +
            "                    progressbarstatus=0;\n" +
            "                }\n" +
            "                runningbefore=false;\n" +
            "            }\n" +
            "\n" +
            "\n" +
            "        }).start();\n" +
            "    }\n" +
            "\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.master.glideimageview.GlideImageView;

public class Fragment_Image_url_demo extends Fragment {
    GlideImageView glideImageView;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_image_url_demo, container, false);
        glideImageView = (GlideImageView) view.findViewById(R.id.glide_image_view);
        glideImageView.loadImageUrl("https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Pizigani_1367_Chart_10MB.jpg/800px-Pizigani_1367_Chart_10MB.jpg");
        return view;
    }
}

package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

public class Fragment_dummy extends Fragment {
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_dummy, container, false);
        return view;
    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_simple_intent_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2;
    TextView title2;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".SimpleIntent_demo\">\n" +
            "\n" +
            "    <Button\n" +
            "        android:id=\"@+id/click\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Click Me!\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        />\n" +
            "\n" +
            "</LinearLayout>";
    String code2="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".SecondActivity\">\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:id=\"@+id/text\"\n" +
            "        android:text=\"This is the Second Activity\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:layout_gravity=\"center\"/>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("activity_second.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_AutoComplete_TextView_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.widget.ArrayAdapter;\n" +
            "import android.widget.AutoCompleteTextView;\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "AutoCompleteTextView autoCompleteTextView;\n" +
            "TextView textView;\n" +
            "String[] values={\"Alpha\",\"Beta\",\"Cupcake\",\"Donut\",\"Eclair\"};\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        autoCompleteTextView=(AutoCompleteTextView)findViewById(R.id.a_textview);\n" +
            "        textView=(TextView)findViewById(R.id.text_hint);\n" +
            "        textView.setText(\"Hints: Alpha,Beta,Cupcake,Donut,Eclair\");\n" +
            "        ArrayAdapter<String>adapter=new ArrayAdapter<String>(this,android.R.layout.simple_list_item_1,values);\n" +
            "        autoCompleteTextView.setAdapter(adapter);\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_fingerprint_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:id=\"@+id/activity_main\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    tools:context=\".MainActivity\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    >\n" +
            "\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Fingerprint\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:textAppearance=\"@style/TextAppearance.AppCompat.Large\"\n" +
            "        android:layout_centerHorizontal=\"true\"/>\n" +
            "\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_centerInParent=\"true\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:id=\"@+id/textview\"/>\n" +
            "\n" +
            "    <ImageView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        app:srcCompat=\"@mipmap/ic_launcher_round\"\n" +
            "        android:id=\"@+id/imageView\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_below=\"@+id/textView\"\n" +
            "        android:layout_centerHorizontal=\"true\"\n" +
            "        android:layout_marginTop=\"36dp\" />\n" +
            "\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:id=\"@+id/textView2\"\n" +
            "        android:text=\"instruction\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_below=\"@+id/imageView\"\n" +
            "        android:layout_alignParentStart=\"true\"\n" +
            "        android:layout_marginTop=\"27dp\" />\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_qrscanner_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.Manifest;\n" +
            "import android.app.Activity;\n" +
            "import android.content.DialogInterface;\n" +
            "import android.content.Intent;\n" +
            "import android.content.pm.PackageManager;\n" +
            "import android.support.annotation.NonNull;\n" +
            "import android.support.v4.app.ActivityCompat;\n" +
            "import android.support.v4.content.ContextCompat;\n" +
            "import android.support.v7.app.AlertDialog;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.util.Log;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "import com.blikoon.qrcodescanner.QrCodeActivity;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity{\n" +
            "\n" +
            "    Button  btnScanBarcode;\n" +
            "    int CAMERA_PERMISSION_CODE=24;\n" +
            "    private static final int REQUEST_CODE_QR_SCAN=101;\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        btnScanBarcode=(Button)findViewById(R.id.btnScanBarcode);\n" +
            "        btnScanBarcode.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                if(canOpenCamera()){\n" +
            "                    openCamera();\n" +
            "                }else {\n" +
            "                    requestCameraPermission();\n" +
            "                }\n" +
            "\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "    }\n" +
            "    private void openCamera(){\n" +
            "        Intent intent=new Intent(MainActivity.this, QrCodeActivity.class);\n" +
            "        startActivityForResult(intent,REQUEST_CODE_QR_SCAN);\n" +
            "    }\n" +
            "    private boolean canOpenCamera(){\n" +
            "        int result= ContextCompat.checkSelfPermission(this,Manifest.permission.CAMERA);\n" +
            "        if(result==PackageManager.PERMISSION_GRANTED){\n" +
            "            return true;\n" +
            "        }\n" +
            "        return false;\n" +
            "    }\n" +
            "    private void requestCameraPermission(){\n" +
            "        if(ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.CAMERA)){\n" +
            "            Toast.makeText(this, \"Accept Permission to open camera\", Toast.LENGTH_SHORT).show();\n" +
            "        }\n" +
            "        ActivityCompat.requestPermissions(this,new String[]{Manifest.permission.CAMERA},CAMERA_PERMISSION_CODE);\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n" +
            "        if(requestCode==CAMERA_PERMISSION_CODE){\n" +
            "            if(grantResults.length>0&&grantResults[0]== PackageManager.PERMISSION_GRANTED){\n" +
            "                openCamera();\n" +
            "            }else {\n" +
            "                Toast.makeText(this, \"User Denied Permisssion\", Toast.LENGTH_SHORT).show();\n" +
            "            }\n" +
            "        }\n" +
            "\n" +
            "    }\n" +
            "    protected void onActivityResult(int req_code,int resultcode,Intent data){\n" +
            "        if(resultcode!= Activity.RESULT_OK){\n" +
            "            if(data==null){\n" +
            "                return;\n" +
            "            }\n" +
            "            String result=data.getStringExtra(\"com.blikoon.qrcodescanner.error_decoding_image\");\n" +
            "            if(result!=null){\n" +
            "                AlertDialog alertDialog=new AlertDialog.Builder(MainActivity.this).create();\n" +
            "                alertDialog.setTitle(\"Scan Error\");;\n" +
            "                alertDialog.setMessage(\"QR couldn't able to scan\");\n" +
            "                alertDialog.setButton(AlertDialog.BUTTON_POSITIVE, \"OK\",\n" +
            "                        new DialogInterface.OnClickListener() {\n" +
            "                            @Override\n" +
            "                            public void onClick(DialogInterface dialog, int which) {\n" +
            "                                dialog.dismiss();\n" +
            "                            }\n" +
            "                        });\n" +
            "                alertDialog.show();\n" +
            "            }\n" +
            "            return;\n" +
            "        }\n" +
            "        if(req_code==REQUEST_CODE_QR_SCAN){\n" +
            "            if(data==null)\n" +
            "                return;\n" +
            "            String result=data.getStringExtra(\"com.blikoon.qrcodescanner.got_qr_scan_relult\");\n" +
            "\n" +
            "                AlertDialog alertDialog = new AlertDialog.Builder(MainActivity.this).create();\n" +
            "                alertDialog.setTitle(\"Scan Result\");\n" +
            "                alertDialog.setMessage(result);\n" +
            "                alertDialog.setButton(AlertDialog.BUTTON_POSITIVE, \"OK\",\n" +
            "                        new DialogInterface.OnClickListener() {\n" +
            "                            @Override\n" +
            "                            public void onClick(DialogInterface dialog, int which) {\n" +
            "                                dialog.dismiss();\n" +
            "                            }\n" +
            "                        });\n" +
            "                alertDialog.show();\n" +
            "        }\n" +
            "    }\n" +
            "}";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}





package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_custom_listView_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.content.Context;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.LayoutInflater;\n" +
            "import android.view.View;\n" +
            "import android.view.ViewGroup;\n" +
            "import android.widget.AdapterView;\n" +
            "import android.widget.ArrayAdapter;\n" +
            "import android.widget.ImageView;\n" +
            "import android.widget.ListView;\n" +
            "import android.widget.TextView;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "ListView listView;\n" +
            "String[]names={\"Alpha\",\"Beta\",\"CupCake\",\"Donut\",\"Eclair\",\"Fryso\",\"Ginger Bread\",\"HoneyComb\",\"Icecream Sandwich\",\"Jelly Bean\",\"Kitkat\",\"Lolipop\",\"Marshmellow\",\"Noughat\",\"Oreo\",\"Pie\"};\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        listView=(ListView)findViewById(R.id.listview);\n" +
            "        CustomAdapter customAdapter=new CustomAdapter(MainActivity.this,names);\n" +
            "        listView.setAdapter(customAdapter);\n" +
            "        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n" +
            "            @Override\n" +
            "            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n" +
            "                Toast.makeText(MainActivity.this, (String)listView.getItemAtPosition(position), Toast.LENGTH_SHORT).show();\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "    }\n" +
            "}\n" +
            "class CustomAdapter extends ArrayAdapter<String>{\n" +
            "public final Context context;\n" +
            "private final String[] names;\n" +
            "    public CustomAdapter(Context context,String[] names) {\n" +
            "        super(context,R.layout.custom_listview_layout, names);\n" +
            "        this.context=context;\n" +
            "        this.names=names;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public View getView(int position, View convertView,  ViewGroup parent) {\n" +
            "\n" +
            "        LayoutInflater inflater=(LayoutInflater)getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n" +
            "        View view=inflater.inflate(R.layout.custom_listview_layout,null,true);\n" +
            "        TextView name=(TextView)view.findViewById(R.id.text);\n" +
            "        ImageView imageView=(ImageView)view.findViewById(R.id.image);\n" +
            "        name.setText(names[position]);\n" +
            "        imageView.setImageResource(R.drawable.user);\n" +
            "        return view;\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}

package com.Learning.com;

import android.app.KeyguardManager;
import android.content.pm.PackageManager;
import android.hardware.fingerprint.FingerprintManager;
import android.Manifest;
import android.os.Build;
import android.os.Bundle;
import android.security.keystore.KeyGenParameterSpec;
import android.security.keystore.KeyPermanentlyInvalidatedException;
import android.security.keystore.KeyProperties;
import android.support.annotation.Nullable;
import android.support.annotation.RequiresApi;
import android.support.v4.app.Fragment;
import android.support.v7.app.AppCompatActivity;
import android.support.v4.app.ActivityCompat;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import java.io.IOException;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.security.UnrecoverableKeyException;
import java.security.cert.CertificateException;
import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;

import static android.content.Context.FINGERPRINT_SERVICE;
import static android.content.Context.KEYGUARD_SERVICE;

public class Fragment_fingerprint_demo  extends Fragment {
    private static final String KEY_NAME = "yourKey";
    private Cipher cipher;
    private KeyStore keyStore;
    private KeyGenerator keyGenerator;
    private TextView textView;
    private FingerprintManager.CryptoObject cryptoObject;
    private FingerprintManager fingerprintManager;
    private KeyguardManager keyguardManager;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_fingerprint_demo, container, false);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            //Get an instance of KeyguardManager and FingerprintManager//
            keyguardManager =
                    (KeyguardManager) getActivity().getSystemService(KEYGUARD_SERVICE);
            fingerprintManager =
                    (FingerprintManager) getActivity().getSystemService(FINGERPRINT_SERVICE);

            textView = (TextView) view.findViewById(R.id.textview);

            //Check whether the device has a fingerprint sensor//
            if (!fingerprintManager.isHardwareDetected()) {
                // If a fingerprint sensor isn’t available, then inform the user that they’ll be unable to use your app’s fingerprint functionality//
                textView.setText("Your device doesn't support fingerprint authentication");
            }
            //Check whether the user has granted your app the USE_FINGERPRINT permission//
            if (ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.USE_FINGERPRINT) != PackageManager.PERMISSION_GRANTED) {
                // If your app doesn't have this permission, then display the following text//
                textView.setText("Please enable the fingerprint permission");
            }

            //Check that the user has registered at least one fingerprint//
            if (!fingerprintManager.hasEnrolledFingerprints()) {
                // If the user hasn’t configured any fingerprints, then display the following message//
                textView.setText("No fingerprint configured. Please register at least one fingerprint in your device's Settings");
            }

            //Check that the lockscreen is secured//
            if (!keyguardManager.isKeyguardSecure()) {
                // If the user hasn’t secured their lockscreen with a PIN password or pattern, then display the following text//
                textView.setText("Please enable lockscreen security in your device's Settings");
            } else {
                try {

                    generateKey();
                } catch (FingerprintException e) {
                    e.printStackTrace();
                }

                if (initCipher()) {
                    //If the cipher is initialized successfully, then create a CryptoObject instance//
                    cryptoObject = new FingerprintManager.CryptoObject(cipher);

                    // Here, I’m referencing the FingerprintHandler class that we’ll create in the next section. This class will be responsible
                    // for starting the authentication process (via the startAuth method) and processing the authentication process events//
                    FingerPrintHandler helper = new FingerPrintHandler(getContext());
                    helper.startAuth(fingerprintManager, cryptoObject);
                }
            }
        }
        return view;
    }
        private void generateKey() throws FingerprintException {
            try {
                // Obtain a reference to the Keystore using the standard Android keystore container identifier (“AndroidKeystore”)//
                keyStore = KeyStore.getInstance("AndroidKeyStore");

                //Generate the key//
                keyGenerator = KeyGenerator.getInstance(KeyProperties.KEY_ALGORITHM_AES, "AndroidKeyStore");

                //Initialize an empty KeyStore//
                keyStore.load(null);

                //Initialize the KeyGenerator//
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                    keyGenerator.init(new

                            //Specify the operation(s) this key can be used for//
                            KeyGenParameterSpec.Builder(KEY_NAME,
                            KeyProperties.PURPOSE_ENCRYPT |
                                    KeyProperties.PURPOSE_DECRYPT)
                            .setBlockModes(KeyProperties.BLOCK_MODE_CBC)

                            //Configure this key so that the user has to confirm their identity with a fingerprint each time they want to use it//
                            .setUserAuthenticationRequired(true)
                            .setEncryptionPaddings(
                                    KeyProperties.ENCRYPTION_PADDING_PKCS7)
                            .build());
                }

                //Generate the key//
                keyGenerator.generateKey();

            } catch (KeyStoreException
                    | NoSuchAlgorithmException
                    | NoSuchProviderException
                    | InvalidAlgorithmParameterException
                    | CertificateException
                    | IOException exc) {
                exc.printStackTrace();
                throw new FingerprintException(exc);
            }
        }

        //Create a new method that we’ll use to initialize our cipher//
        @RequiresApi(api = Build.VERSION_CODES.M)
        public boolean initCipher() {
            try {
                //Obtain a cipher instance and configure it with the properties required for fingerprint authentication//
                cipher = Cipher.getInstance(
                        KeyProperties.KEY_ALGORITHM_AES + "/"
                                + KeyProperties.BLOCK_MODE_CBC + "/"
                                + KeyProperties.ENCRYPTION_PADDING_PKCS7);
            } catch (NoSuchAlgorithmException |
                    NoSuchPaddingException e) {
                throw new RuntimeException("Failed to get Cipher", e);
            }

            try {
                keyStore.load(null);
                SecretKey key = (SecretKey) keyStore.getKey(KEY_NAME,
                        null);
                cipher.init(Cipher.ENCRYPT_MODE, key);
                //Return true if the cipher has been initialized successfully//
                return true;
            } catch (KeyPermanentlyInvalidatedException e) {

                //Return false if cipher initialization failed//
                return false;
            } catch (KeyStoreException | CertificateException
                    | UnrecoverableKeyException | IOException
                    | NoSuchAlgorithmException | InvalidKeyException e) {
                throw new RuntimeException("Failed to init Cipher", e);
            }
        }

        private class FingerprintException extends Exception {
            public FingerprintException(Exception e) {
                super(e);
            }
        }
    }



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_Alertdialog_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <TextView\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Please Press Below Button!... \" />\n" +
            "    <Button\n" +
            "        android:id=\"@+id/click_alert\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginTop=\"20dp\"\n" +
            "        android:text=\"click for alert\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        />\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_swiperefreshlayout_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v4.widget.SwipeRefreshLayout;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "SwipeRefreshLayout swipeRefreshLayout;\n" +
            "int i=0;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        swipeRefreshLayout=(SwipeRefreshLayout)findViewById(R.id.swipe);\n" +
            "        swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\n" +
            "            @Override\n" +
            "            public void onRefresh() {\n" +
            "                i=i+1;\n" +
            "                Toast.makeText(MainActivity.this, \"Swipe count\"+i, Toast.LENGTH_SHORT).show();\n" +
            "                swipeRefreshLayout.setRefreshing(false);\n" +
            "\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}





package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_pdf_creator_ref extends Fragment {
    TextView text, head, content, text_m, head_m, content_m;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text = (TextView) view.findViewById(R.id.text_implementation);
        head = (TextView) view.findViewById(R.id.head_implementation);
        content = (TextView) view.findViewById(R.id.content_implementation);
        text_m = (TextView) view.findViewById(R.id.text_manifest);
        head_m = (TextView) view.findViewById(R.id.head_manifest);
        content_m = (TextView) view.findViewById(R.id.content_manifest);
        text_m.setVisibility(View.VISIBLE);
        head_m.setVisibility(View.VISIBLE);
        content_m.setVisibility(View.VISIBLE);


        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n" +
                "After Implementation sync now to implement the content");
        content.setText("implementation 'com.itextpdf:itextg:5.5.10'");


        head_m.setText("Manifest Guide");

        text_m.setText("Click-->app-->Manifest-->(add permission)\n" +
                "Add Permission before application tag:-(top of <application)");
        content_m.setText("<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"/>\n" +
                "    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>");

        return view;
    }
}



package com.Learning.com;

import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;

public class Fragment_demo extends AppCompatActivity {
Fragment fragment=null;
Button b1,b2;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_fragment_demo);
        b1=(Button)findViewById(R.id.f1);
        b2=(Button)findViewById(R.id.f2);
        b1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                fragment=new Fragment_one_demo();
                loadFragment(fragment);
            }
        });
        b2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                fragment=new Fragment_two_demo();
                loadFragment(fragment);
            }
        });
    }
    private void loadFragment(Fragment fragment){
        FragmentManager fragmentManager=getSupportFragmentManager();
        FragmentTransaction transaction=fragmentManager.beginTransaction();
        transaction.replace(R.id.fragment,fragment);
        transaction.commit();
    }
}


package com.Learning.com;

import android.content.DialogInterface;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v7.app.AlertDialog;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Toast;

public class Fragment_alert_dialog_demo extends Fragment {
    Button click_alert;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_alertdialog_demo, container, false);
        click_alert=(Button)view.findViewById(R.id.click_alert);
        click_alert.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                final AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
                builder.setCancelable(false);
                builder.setTitle("Exit");
                builder.setMessage("Are you want to Logout?");
                builder.setPositiveButton("YES", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {

                        Toast.makeText(getActivity(), "Alert yes clicked", Toast.LENGTH_SHORT).show();
                    }
                });
                builder.setNegativeButton("NO", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        dialog.dismiss();
                    }
                });
                builder.create().show();
            }
        });
        return view;
    }

}

package com.Learning.com;

import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.widget.ListView;
import android.widget.SearchView;

import java.util.ArrayList;

public class SearchView_demo extends AppCompatActivity implements SearchView.OnQueryTextListener {
    ListView list;
    ListViewAdapter adapter;
    SearchView editsearch;
    String[] versionNameList;
    ArrayList<VersionNames> arraylist = new ArrayList<VersionNames>();
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_search_view_demo);
        versionNameList = new String[]{"Alpha", "Beta", "CupCake",
                "Donut", "Eclair", "Fryso", "GingerBread", "HoneyCombs",
                "IceCreamSandwich","JellyBean","Kitkat","Lollipop","MarshMellow","Noughat","Oreo","Pie"};

        // Locate the ListView in listview_main.xml
        list = (ListView) findViewById(R.id.listview);

        for (int i = 0; i < versionNameList.length; i++) {
            VersionNames versionNames = new VersionNames(versionNameList[i]);
            // Binds all strings into an array
            arraylist.add(versionNames);
        }

        // Pass results to ListViewAdapter Class
        adapter = new ListViewAdapter(this, arraylist);

        // Binds the Adapter to the ListView
        list.setAdapter(adapter);

        // Locate the EditText in listview_main.xml
        editsearch = (SearchView) findViewById(R.id.search);
        editsearch.setOnQueryTextListener(this);


    }

    @Override
    public boolean onQueryTextSubmit(String query) {

        return false;
    }

    @Override
    public boolean onQueryTextChange(String newText) {
        String text = newText;
        adapter.filter(text);
        return false;
    }
}
class VersionNames {
    private String versionNames;

    public VersionNames(String versionNames) {
        this.versionNames = versionNames;
    }

    public String getVersionNames() {
        return this.versionNames;
    }


}

package com.Learning.com;

public class HorizontalModel {

    private String name, description;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_RecycclerView_ref extends Fragment {
    TextView text,head,content,text_m,head_m,content_m;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text=(TextView)view.findViewById(R.id.text_implementation);
        head=(TextView)view.findViewById(R.id.head_implementation);
        content=(TextView)view.findViewById(R.id.content_implementation);
        text_m=(TextView)view.findViewById(R.id.text_manifest);
        head_m=(TextView)view.findViewById(R.id.head_manifest);
        content_m=(TextView)view.findViewById(R.id.content_manifest);
//        text_m.setVisibility(View.VISIBLE);
//        head_m.setVisibility(View.VISIBLE);
//        content_m.setVisibility(View.VISIBLE);



        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n"+
                "After Implementation sync now to implement the content ");
        content.setText("    implementation 'com.android.support:recyclerview-v7:27.0.0'\n" +
                "    implementation 'com.android.support:cardview-v7:28.0.0'");


//        head_m.setText("Manifest Guide");
//
//        text_m.setText("Click-->app-->Manifest-->(add permission)\n"+
//                "Add Permission before application tag:-(top of <application)");
//        content_m.setText("<uses-permission android:name=\"android.permission.INTERNET\" />");

        return view;
    }



}





package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_gifimageview_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    tools:context=\".MainActivity\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "    <pl.droidsonroids.gif.GifImageView\n" +
            "        android:id=\"@+id/loading\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"364dp\"\n" +
            "        android:layout_marginBottom=\"8dp\"\n" +
            "        android:src=\"@drawable/android_gif\" />\n" +
            "\n" +
            "\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}





package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_expandable_re_view_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2,mcodeview3;
    TextView title2,title3;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <android.support.v7.widget.RecyclerView\n" +
            "        android:id=\"@+id/main_recycler\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"match_parent\" />\n" +
            "</LinearLayout>";
    String code2="<RelativeLayout   xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"wrap_content\"\n" +
            "    android:orientation=\"horizontal\">\n" +
            "\n" +
            "    <LinearLayout\n" +
            "        android:id=\"@+id/lnr_1\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_centerHorizontal=\"true\">\n" +
            "\n" +
            "        <TextView\n" +
            "            android:id=\"@+id/txt_header_address\"\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:gravity=\"center\"\n" +
            "            android:text=\"Click Menu\"\n" +
            "            android:textStyle=\"bold\" />\n" +
            "\n" +
            "    </LinearLayout>\n" +
            "\n" +
            "    <ImageView\n" +
            "        android:id=\"@+id/img_arrow\"\n" +
            "        android:layout_width=\"50dp\"\n" +
            "        android:layout_height=\"50dp\"\n" +
            "        android:layout_alignParentRight=\"true\"\n" +
            "        android:src=\"@drawable/downarrow\" />\n" +
            "\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/txt_header_name\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_alignParentLeft=\"true\"\n" +
            "        android:layout_alignParentStart=\"true\"\n" +
            "        android:layout_centerVertical=\"true\"\n" +
            "        android:text=\"Hii\"\n" +
            "        android:textStyle=\"bold\" />\n" +
            "</RelativeLayout>";
    String code3="<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"wrap_content\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "\n" +
            "    <RelativeLayout\n" +
            "        android:id=\"@+id/rcl_header_btn\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:orientation=\"horizontal\">\n" +
            "\n" +
            "        <Button\n" +
            "            style=\"?android:attr/borderlessButtonStyle\"\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:text=\"Cancel\" />\n" +
            "\n" +
            "        <Button\n" +
            "            style=\"?android:attr/borderlessButtonStyle\"\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:layout_alignParentRight=\"true\"\n" +
            "            android:text=\"Save\" />\n" +
            "\n" +
            "    </RelativeLayout>\n" +
            "\n" +
            "    <LinearLayout\n" +
            "        android:id=\"@+id/lnr_parent\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_below=\"@+id/rcl_header_btn\"\n" +
            "        android:gravity=\"center_vertical\"\n" +
            "        android:orientation=\"vertical\">\n" +
            "\n" +
            "        <EditText\n" +
            "            android:id=\"@+id/edt_description\"\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:hint=\"Name\" />\n" +
            "\n" +
            "        <EditText\n" +
            "            android:id=\"@+id/edt_address\"\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:hint=\"Address\" />\n" +
            "\n" +
            "        <LinearLayout\n" +
            "            android:id=\"@+id/lnr_child_1\"\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"wrap_content\">\n" +
            "\n" +
            "            <EditText\n" +
            "                android:id=\"@+id/edt_city\"\n" +
            "                android:layout_width=\"match_parent\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:layout_weight=\"1\"\n" +
            "                android:hint=\"City\" />\n" +
            "\n" +
            "            <EditText\n" +
            "                android:id=\"@+id/edt_state\"\n" +
            "                android:layout_width=\"match_parent\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:layout_weight=\"1\"\n" +
            "                android:hint=\"State\" />\n" +
            "\n" +
            "        </LinearLayout>\n" +
            "\n" +
            "        <LinearLayout\n" +
            "            android:id=\"@+id/lnr_child_2\"\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"wrap_content\">\n" +
            "\n" +
            "            <EditText\n" +
            "                android:id=\"@+id/edt_zipcode\"\n" +
            "                android:layout_width=\"match_parent\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:layout_weight=\"1\"\n" +
            "                android:hint=\"Contact\" />\n" +
            "\n" +
            "            <EditText\n" +
            "                android:id=\"@+id/edt_country\"\n" +
            "                android:layout_width=\"match_parent\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:layout_weight=\"1\"\n" +
            "                android:hint=\"Country\" />\n" +
            "\n" +
            "        </LinearLayout>\n" +
            "    </LinearLayout>\n" +
            "\n" +
            "    <RelativeLayout\n" +
            "        android:id=\"@+id/rcl_bottom\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_below=\"@+id/lnr_parent\">\n" +
            "\n" +
            "        <CheckBox\n" +
            "            android:id=\"@+id/chk_marked\"\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:layout_alignBaseline=\"@+id/txt_type\" />\n" +
            "\n" +
            "        <TextView\n" +
            "            android:id=\"@+id/txt_type\"\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:layout_alignBaseline=\"@+id/btn_delete\"\n" +
            "            android:layout_toRightOf=\"@+id/chk_marked\"\n" +
            "            android:gravity=\"center\"\n" +
            "            android:text=\"SET AS DEFAULT\" />\n" +
            "\n" +
            "        <Button\n" +
            "            android:id=\"@+id/btn_delete\"\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:layout_alignParentRight=\"true\"\n" +
            "            android:text=\"DELETE\" />\n" +
            "\n" +
            "    </RelativeLayout>\n" +
            "</RelativeLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.three_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        mcodeview3 = (CodeView)view.findViewById(R.id.codeView3);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("item_header.xml");
        title3=(TextView)view.findViewById(R.id.title3);
        title3.setText("item_content.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy3=(Button)view.findViewById(R.id.copy3);
        copy3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code3);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview3.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code3)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

public class Fragment_scrollview_demo extends Fragment {
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_scrollview_demo, container, false);
        return view;
    }
}


package com.Learning.com;

import android.app.Service;
import android.content.Intent;
import android.media.MediaPlayer;
import android.os.IBinder;
import android.provider.Settings;
import android.widget.Toast;

public class BackgroundServices  extends Service {
    private MediaPlayer mediaPlayer;
    public BackgroundServices() {
    }

    @Override
    public IBinder onBind(Intent intent) {
        // TODO: Return the communication channel to the service.
        throw new UnsupportedOperationException("Not yet implemented");
    }
    @Override
    public void onCreate() {
        Toast.makeText(this, "Invoke background service onCreate method.", Toast.LENGTH_LONG).show();
        super.onCreate();
    }


    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        mediaPlayer=MediaPlayer.create(this, Settings.System.DEFAULT_RINGTONE_URI);
        mediaPlayer.setLooping(true);
        mediaPlayer.start();
        Toast.makeText(this, "Invoke background service onStartCommand method.", Toast.LENGTH_LONG).show();
        return START_STICKY;
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        Toast.makeText(this, "Invoke background service onDestroy method.", Toast.LENGTH_LONG).show();
        mediaPlayer.stop();
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class fragment_image_server_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2;
    TextView title2;
    String Code=" <RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "android:layout_width=\"match_parent\"\n" +
            "android:layout_height=\"match_parent\"\n" +
            "android:background=\"#FFF9C4\"\n" +
            "tools:context=\".MainActivity\">\n" +
            "\n" +
            "<Button\n" +
            "    android:layout_width=\"fill_parent\"\n" +
            "    android:layout_height=\"wrap_content\"\n" +
            "    android:text=\"CLICK HERE TO SELECT IMAGE FROM GALLERY\"\n" +
            "    android:id=\"@+id/button\"\n" +
            "    android:layout_alignParentTop=\"true\"\n" +
            "    android:layout_alignParentLeft=\"true\"\n" +
            "    android:layout_alignParentStart=\"true\" />\n" +
            "\n" +
            "<Button\n" +
            "    android:layout_width=\"fill_parent\"\n" +
            "    android:layout_height=\"wrap_content\"\n" +
            "    android:text=\"CLICK HERE TO UPLOAD SELECTED IMAGE ON SERVER \"\n" +
            "    android:id=\"@+id/button2\"\n" +
            "    android:layout_alignParentBottom=\"true\"\n" +
            "    android:layout_alignParentLeft=\"true\"\n" +
            "    android:layout_alignParentStart=\"true\" />\n" +
            "\n" +
            "<EditText\n" +
            "    android:layout_width=\"fill_parent\"\n" +
            "    android:layout_height=\"wrap_content\"\n" +
            "    android:id=\"@+id/editText\"\n" +
            "    android:layout_above=\"@+id/button2\"\n" +
            "    android:layout_centerHorizontal=\"true\"\n" +
            "    android:hint=\"Enter Image Name Here\"\n" +
            "    android:gravity=\"center\"\n" +
            "    />\n" +
            "\n" +
            "<ImageView\n" +
            "    android:layout_width=\"fill_parent\"\n" +
            "    android:layout_height=\"270dp\"\n" +
            "    android:id=\"@+id/imageView\"\n" +
            "    android:layout_below=\"@+id/button\"\n" +
            "    android:layout_alignParentLeft=\"true\"\n" +
            "    android:layout_alignParentStart=\"true\"\n" +
            "    android:layout_above=\"@+id/editText\" />\n" +
            "\n" +
            "</RelativeLayout>";
    String code2="<LinearLayout\n" +
            "    xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    xmlns:card_view=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "    <android.support.v7.widget.CardView\n" +
            "    android:layout_height=\"wrap_content\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:elevation=\"6dp\"\n" +
            "    android:layout_marginLeft=\"5dp\"\n" +
            "    android:layout_marginTop=\"15dp\"\n" +
            "    android:layout_marginBottom=\"1dp\"\n" +
            "    android:layout_marginRight=\"1dp\"\n" +
            "    card_view:cardCornerRadius=\"3dp\">\n" +
            "        <LinearLayout\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"match_parent\"\n" +
            "            android:orientation=\"vertical\">\n" +
            "            <LinearLayout\n" +
            "                android:layout_width=\"match_parent\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:orientation=\"horizontal\"\n" +
            "                android:weightSum=\"2\">\n" +
            "                <TextView\n" +
            "                    android:layout_width=\"match_parent\"\n" +
            "                    android:layout_height=\"wrap_content\"\n" +
            "                    android:id=\"@+id/date\"\n" +
            "                    android:layout_weight=\"1\"\n" +
            "                    android:text=\"Date:23/09/19\"\n" +
            "                    android:layout_marginLeft=\"10dp\"\n" +
            "                    android:background=\"@android:color/white\"\n" +
            "                    android:textColor=\"@android:color/black\"/>\n" +
            "                <TextView\n" +
            "                    android:layout_width=\"match_parent\"\n" +
            "                    android:layout_height=\"wrap_content\"\n" +
            "                    android:layout_weight=\"1\"\n" +
            "                    android:id=\"@+id/mode\"\n" +
            "                    android:text=\"Mode:Cash Payment\"\n" +
            "                    android:textAlignment=\"textEnd\"\n" +
            "                    android:background=\"@android:color/white\"\n" +
            "                    android:layout_marginRight=\"10dp\"\n" +
            "                    android:textColor=\"@android:color/black\"/>\n" +
            "            </LinearLayout>\n" +
            "            <LinearLayout\n" +
            "                android:layout_width=\"match_parent\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:orientation=\"horizontal\"\n" +
            "                android:weightSum=\"2\">\n" +
            "                <TextView\n" +
            "                    android:layout_width=\"match_parent\"\n" +
            "                    android:layout_height=\"wrap_content\"\n" +
            "                    android:id=\"@+id/ref\"\n" +
            "                    android:layout_weight=\"1\"\n" +
            "                    android:text=\"Reference:RCT 154\"\n" +
            "                    android:layout_marginLeft=\"10dp\"\n" +
            "                    android:background=\"@android:color/white\"\n" +
            "                    android:textColor=\"@android:color/black\"/>\n" +
            "                <TextView\n" +
            "                    android:layout_width=\"match_parent\"\n" +
            "                    android:layout_height=\"wrap_content\"\n" +
            "                    android:layout_weight=\"1\"\n" +
            "                    android:id=\"@+id/value\"\n" +
            "                    android:text=\"Value:15000\"\n" +
            "                    android:textAlignment=\"textEnd\"\n" +
            "                    android:background=\"@android:color/white\"\n" +
            "                    android:layout_marginRight=\"10dp\"\n" +
            "                    android:textColor=\"@android:color/black\"/>\n" +
            "            </LinearLayout>\n" +
            "            <LinearLayout\n" +
            "                android:layout_width=\"match_parent\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:orientation=\"horizontal\"\n" +
            "                android:weightSum=\"2\">\n" +
            "\n" +
            "                <TextView\n" +
            "                    android:layout_width=\"match_parent\"\n" +
            "                    android:layout_height=\"wrap_content\"\n" +
            "                    android:layout_weight=\"1\"\n" +
            "                    android:id=\"@+id/status\"\n" +
            "                    android:text=\"Status:Active\"\n" +
            "\n" +
            "                    android:background=\"@android:color/white\"\n" +
            "                    android:layout_marginRight=\"10dp\"\n" +
            "                    android:textColor=\"@android:color/black\"/>\n" +
            "                <TextView\n" +
            "                    android:layout_width=\"match_parent\"\n" +
            "                    android:layout_height=\"wrap_content\"\n" +
            "                    android:id=\"@+id/view\"\n" +
            "                    android:layout_weight=\"1\"\n" +
            "                    android:drawableTop=\"@drawable/eye\"\n" +
            "                    android:text=\"View Image\"\n" +
            "                    android:textAlignment=\"center\"\n" +
            "                    android:layout_gravity=\"right\"\n" +
            "                    android:layout_marginLeft=\"10dp\"\n" +
            "                    android:background=\"@android:color/white\"\n" +
            "                    android:textColor=\"@android:color/holo_blue_dark\"/>\n" +
            "            </LinearLayout>\n" +
            "            <TextView\n" +
            "                android:layout_width=\"match_parent\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Remarks:A1800277\"\n" +
            "\n" +
            "                android:layout_marginLeft=\"10dp\"\n" +
            "                android:textColor=\"@android:color/black\"\n" +
            "                android:id=\"@+id/remarks\"/>\n" +
            "        </LinearLayout>\n" +
            "    </android.support.v7.widget.CardView>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("activity_second.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });

        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_floatingmenu_ref extends Fragment {
    TextView text, head, content, text_m, head_m, content_m,textg,headg,content_g;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text = (TextView) view.findViewById(R.id.text_implementation);
        head = (TextView) view.findViewById(R.id.head_implementation);
        content = (TextView) view.findViewById(R.id.content_implementation);
        text_m = (TextView) view.findViewById(R.id.text_manifest);
        head_m = (TextView) view.findViewById(R.id.head_manifest);
        content_m = (TextView) view.findViewById(R.id.content_manifest);
        text_m.setVisibility(View.VISIBLE);
        head_m.setVisibility(View.VISIBLE);
        content_m.setVisibility(View.VISIBLE);
        textg = (TextView) view.findViewById(R.id.text_gradle);
        headg = (TextView) view.findViewById(R.id.head_gradle);
        content_g = (TextView) view.findViewById(R.id.content_gradle);
        textg.setVisibility(View.VISIBLE);
        headg.setVisibility(View.VISIBLE);
        content_g.setVisibility(View.VISIBLE);


        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n" +
                "After Implementation sync now to implement the content");
        content.setText("implementation 'com.github.clans:fab:1.6.4'");


        head_m.setText("Manifest Guide");

        text_m.setText("Click-->app-->Manifest-->(add permission)\n" +
                "Add Permission before application tag:-(top of <application)");
        content_m.setText("<uses-permission android:name=\"android.permission.VIBRATE\" />");


        headg.setText("build.gradle(Project:(your app name)");

        textg.setText("Click-->Gradle Scripts-->build.gradle(Project:(your app name)-->allprojects-->repositories\n" +
                "After Implementation sync now to implement the content");
        content_g.setText("  google()\n" +
                "        jcenter()\n" +
                "        maven {\n" +
                "            url 'https://jitpack.io'\n" +
                "        }\n" +
                "        ");

        return view;
    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_Checkbox_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.CheckBox;\n" +
            "import android.widget.CompoundButton;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "CheckBox checkBox;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        checkBox=(CheckBox)findViewById(R.id.checkbox);\n" +
            "\n" +
            "    }\n" +
            "    public void onClick(View view){\n" +
            "        if(checkBox.isChecked()==true){\n" +
            "            Toast.makeText(this, \"Check Box is Checked\", Toast.LENGTH_SHORT).show();\n" +
            "        }\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}




package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Toast;

public class Fragment_curve_edge_demo extends Fragment {
    Button curve;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_curve_edge_demo, container, false);
        curve=(Button)view.findViewById(R.id.curve);
        curve.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(getActivity(), "This is a Curve Edge Button", Toast.LENGTH_SHORT).show();
            }
        });
        return view;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_patternlockview_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.graphics.RadialGradient;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.widget.RadioButton;\n" +
            "import android.widget.RadioGroup;\n" +
            "import android.widget.TextView;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "import com.andrognito.patternlockview.PatternLockView;\n" +
            "import com.andrognito.patternlockview.listener.PatternLockViewListener;\n" +
            "import com.andrognito.patternlockview.utils.PatternLockUtils;\n" +
            "\n" +
            "import java.util.List;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "PatternLockView patternLockView;\n" +
            "RadioGroup radioGroup;\n" +
            "String savedpattern=\"\";\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        radioGroup=(RadioGroup)findViewById(R.id.radiogroup);\n" +
            "        patternLockView=(PatternLockView)findViewById(R.id.lockview);\n" +
            "        patternLockView.addPatternLockListener(new PatternLockViewListener() {\n" +
            "            @Override\n" +
            "            public void onStarted() {\n" +
            "\n" +
            "            }\n" +
            "\n" +
            "            @Override\n" +
            "            public void onProgress(List<PatternLockView.Dot> progressPattern) {\n" +
            "\n" +
            "            }\n" +
            "\n" +
            "            @Override\n" +
            "            public void onComplete(List<PatternLockView.Dot> pattern) {\n" +
            "                if(radioGroup.getCheckedRadioButtonId()==R.id.set){\n" +
            "                    savedpattern= PatternLockUtils.patternToString(patternLockView,pattern);\n" +
            "                    Toast.makeText(MainActivity.this, \"patten saved\", Toast.LENGTH_SHORT).show();\n" +
            "                }else {\n" +
            "                    if (PatternLockUtils.patternToString(patternLockView, pattern).equals(savedpattern))\n" +
            "                    {\n" +
            "                        Toast.makeText(MainActivity.this, \"correct pattern\", Toast.LENGTH_SHORT).show();\n" +
            "                    }else {\n" +
            "                        Toast.makeText(MainActivity.this, \"Incorrect pattern\", Toast.LENGTH_SHORT).show();\n" +
            "                    }\n" +
            "                }\n" +
            "            }\n" +
            "\n" +
            "            @Override\n" +
            "            public void onCleared() {\n" +
            "\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}





package com.Learning.com;

import android.content.Context;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;



import java.util.ArrayList;

import butterknife.BindView;
import butterknife.ButterKnife;

/**
 * Created by malik on 2/12/17.
 */

public class HorizontalRecyclerViewAdapter extends
        RecyclerView.Adapter<HorizontalRecyclerViewAdapter.HorizontalViewHolder> {

    private Context mContext;
    private ArrayList<HorizontalModel> mArrayList;

    public HorizontalRecyclerViewAdapter(Context mContext,
                                         ArrayList<HorizontalModel> mArrayList) {
        this.mContext = mContext;
        this.mArrayList = mArrayList;
    }

    @Override
    public HorizontalViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext())
                .inflate(R.layout.item_horizontal, parent, false);
        return new HorizontalViewHolder(view);
    }

    @Override
    public void onBindViewHolder(HorizontalViewHolder holder, int position) {
        final HorizontalModel current = mArrayList.get(position);
        holder.txtTitle.setText(current.getName());

        holder.itemView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(mContext, current.getName(), Toast.LENGTH_SHORT).show();
            }
        });
    }

    @Override
    public int getItemCount() {
        return mArrayList.size();
    }

    class HorizontalViewHolder extends RecyclerView.ViewHolder {
        @BindView(R.id.txtTitle)
        TextView txtTitle;


        public HorizontalViewHolder(View itemView) {
            super(itemView);
            ButterKnife.bind(this,itemView);
        }
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;

public class Fragment_two_demo extends Fragment {
    LinearLayout ll;
    TextView text;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_textview_demo, container, false);
        ll=(LinearLayout)view.findViewById(R.id.ll);
        ll.setBackgroundResource(R.color.colorAccent);
        text=(TextView)view.findViewById(R.id.text);
        text.setText("Fragment Two");
        return view;
    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_sp_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:card_view=\"http://schemas.android.com/tools\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "\n" +
            "\n" +
            "                <EditText\n" +
            "                    android:id=\"@+id/et_userid\"\n" +
            "                    android:layout_width=\"match_parent\"\n" +
            "                    android:layout_height=\"wrap_content\"\n" +
            "                    android:layout_marginTop=\"100dp\"\n" +
            "                    android:hint=\"  Enter User Id\"\n" +
            "                    android:inputType=\"text\"\n" +
            "                    android:textAlignment=\"center\"\n" +
            "                    android:focusable=\"true\"\n" +
            "                    android:backgroundTint=\"@android:color/darker_gray\"\n" +
            "                    android:focusableInTouchMode=\"true\" />\n" +
            "\n" +
            "\n" +
            "                <EditText\n" +
            "                    android:id=\"@+id/et_password\"\n" +
            "                    android:layout_width=\"match_parent\"\n" +
            "                    android:layout_height=\"wrap_content\"\n" +
            "                    android:layout_marginTop=\"15dp\"\n" +
            "                    android:backgroundTint=\"@android:color/darker_gray\"\n" +
            "                    android:focusable=\"true\"\n" +
            "                    android:focusableInTouchMode=\"true\"\n" +
            "                    android:hint=\"  Enter Password\"\n" +
            "                    android:inputType=\"textPassword\"\n" +
            "                    android:textAlignment=\"center\" />\n" +
            "            <LinearLayout\n" +
            "                android:layout_width=\"match_parent\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:orientation=\"horizontal\"\n" +
            "                android:weightSum=\"2\">\n" +
            "                <CheckBox\n" +
            "                    android:layout_width=\"match_parent\"\n" +
            "                    android:layout_height=\"wrap_content\"\n" +
            "                    android:text=\"Remember id and password\"\n" +
            "                    android:layout_weight=\"1\"\n" +
            "                    android:id=\"@+id/check\"/>\n" +
            "            </LinearLayout>\n" +
            "\n" +
            "                <Button\n" +
            "                    android:id=\"@+id/btn_submit\"\n" +
            "                    android:layout_width=\"wrap_content\"\n" +
            "                    android:layout_height=\"wrap_content\"\n" +
            "                    android:padding=\"10dp\"\n" +
            "                    android:layout_marginBottom=\"10dp\"\n" +
            "                    android:text=\"Submit\"\n" +
            "                    android:layout_marginLeft=\"5dp\"\n" +
            "                    android:layout_marginTop=\"20dp\"\n" +
            "                    android:layout_gravity=\"center\"/>\n" +
            "\n" +
            "        </LinearLayout>\n" +
            "\n";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_spinner_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.AdapterView;\n" +
            "import android.widget.ArrayAdapter;\n" +
            "import android.widget.Spinner;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "Spinner spinner;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        spinner=(Spinner)findViewById(R.id.spinner);\n" +
            "        String[]dept={\"Alpha\",\"Beta\",\"Cupcake\",\"Donut\",\"Eclair\"};\n" +
            "        ArrayAdapter<String> adapter=new ArrayAdapter<String>(this,android.R.layout.simple_spinner_dropdown_item,dept);\n" +
            "        spinner.setAdapter(adapter);\n" +
            "        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n" +
            "            @Override\n" +
            "            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\n" +
            "                switch (position){\n" +
            "                    case 0:\n" +
            "                        Toast.makeText(MainActivity.this, \"Alpha\", Toast.LENGTH_SHORT).show();\n" +
            "                        break;\n" +
            "                    case 1:\n" +
            "                        Toast.makeText(MainActivity.this, \"Beta\", Toast.LENGTH_SHORT).show();\n" +
            "\n" +
            "                        break;\n" +
            "                    case 2:\n" +
            "                        Toast.makeText(MainActivity.this, \"Cupcake\", Toast.LENGTH_SHORT).show();\n" +
            "                        break;\n" +
            "                    case 3:\n" +
            "                        Toast.makeText(MainActivity.this, \"Donut\", Toast.LENGTH_SHORT).show();\n" +
            "                        break;\n" +
            "                    case 4:\n" +
            "                        Toast.makeText(MainActivity.this, \"Eclair\", Toast.LENGTH_SHORT).show();\n" +
            "                        break;\n" +
            "\n" +
            "                }\n" +
            "            }\n" +
            "\n" +
            "            @Override\n" +
            "            public void onNothingSelected(AdapterView<?> parent) {\n" +
            "\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}





package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.TextView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_Recycler_view_Java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    TextView title2;
    String Code="import android.content.Context;\n" +
            "import android.os.Bundle;;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.support.v7.widget.LinearLayoutManager;\n" +
            "import android.support.v7.widget.RecyclerView;\n" +
            "\n" +
            "\n" +
            "import java.util.ArrayList;\n" +
            "import java.util.List;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    RecyclerView recyclerView;\n" +
            "    Context context;\n" +
            "    private List<Ver> vers;\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        recyclerView=(RecyclerView)findViewById(R.id.recyclerview);\n" +
            "        recyclerView.setHasFixedSize(true);\n" +
            "        LinearLayoutManager layoutManager=new LinearLayoutManager(context);\n" +
            "        recyclerView.setLayoutManager(layoutManager);\n" +
            "        data();\n" +
            "        adapter();\n" +
            "\n" +
            "    }\n" +
            "    private void data(){\n" +
            "        vers=new ArrayList<>();\n" +
            "        for(int i=0;i<=5;i++){\n" +
            "            vers.add(new Ver(\"Android\",R.drawable.ic_launcher_background));\n" +
            "        }\n" +
            "\n" +
            "    }\n" +
            "    private void adapter(){\n" +
            "        RecyclerViewAdapter recyclerViewAdapter=new RecyclerViewAdapter(vers);\n" +
            "        recyclerView.setAdapter(recyclerViewAdapter);\n" +
            "    }\n" +
            "}\n" +
            "class Ver{\n" +
            "    String name;\n" +
            "    int logo;\n" +
            "    Ver(String name,int logo){\n" +
            "        this.name=name;\n" +
            "        this.logo=logo;\n" +
            "    }\n" +
            "}\n";
    String Code2="import android.support.v7.widget.CardView;\n" +
            "import android.support.v7.widget.RecyclerView;\n" +
            "import android.view.LayoutInflater;\n" +
            "import android.view.View;\n" +
            "import android.view.ViewGroup;\n" +
            "import android.widget.ImageView;\n" +
            "import android.widget.TextView;\n" +
            "import java.util.List;\n" +
            "\n" +
            "public class RecyclerViewAdapter extends RecyclerView.Adapter<RecyclerViewAdapter.Viewholder> {\n" +
            "    List<Ver> vers;\n" +
            "    RecyclerViewAdapter(List<Ver>vers) {\n" +
            "\n" +
            "        this.vers = vers;\n" +
            "    }\n" +
            "    public static class Viewholder extends RecyclerView.ViewHolder{\n" +
            "        CardView cardView;\n" +
            "        TextView textView;\n" +
            "        ImageView imageView;\n" +
            "        Viewholder(View itemView){\n" +
            "            super(itemView);\n" +
            "            cardView=(CardView)itemView.findViewById(R.id.cardview_odd);\n" +
            "            textView=(TextView)itemView.findViewById(R.id.name);\n" +
            "            imageView=(ImageView)itemView.findViewById(R.id.user);\n" +
            "\n" +
            "\n" +
            "        }\n" +
            "    }\n" +
            "    @Override\n" +
            "    public RecyclerViewAdapter.Viewholder onCreateViewHolder(ViewGroup parent, int viewType) {\n" +
            "        View view= LayoutInflater.from(parent.getContext()).inflate(R.layout.custom_layout_recycler_view,parent,false);\n" +
            "        Viewholder viewholder=new Viewholder(view);\n" +
            "        return viewholder;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onBindViewHolder(RecyclerViewAdapter.Viewholder holder, int position) {\n" +
            "        holder.textView.setText(vers.get(position).name);\n" +
            "        holder.imageView.setImageResource(vers.get(position).logo);\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public int getItemCount() {\n" +
            "        return vers.size();\n" +
            "    }\n" +
            "}\n" +
            "\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("RecyclerViewAdapter.Java");
        WebView webView2=(WebView)view.findViewById(R.id.webview2);
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code2)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webView2);
        return view;
    }



}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_ImageView_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    tools:context=\".MainActivity\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "\n" +
            "    <ImageView\n" +
            "        android:id=\"@+id/image_view\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:src=\"@drawable/ic_launcher_background\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"100dp\"/>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_gridview_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <GridView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "        android:id=\"@+id/grid_view\"\n" +
            "        android:layout_width=\"fill_parent\"\n" +
            "        android:layout_height=\"fill_parent\"\n" +
            "        android:numColumns=\"auto_fit\"\n" +
            "        android:columnWidth=\"90dp\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:horizontalSpacing=\"10dp\"\n" +
            "        android:verticalSpacing=\"10dp\"\n" +
            "        android:gravity=\"center\"\n" +
            "        android:stretchMode=\"columnWidth\" >\n" +
            "\n" +
            "    </GridView>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_scroll_view_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "//code Whatever user needs...\n"+
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}





package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.TextView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_fragment_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    TextView title2,title3;
    String Code="import android.support.v4.app.Fragment;\n" +
            "import android.support.v4.app.FragmentManager;\n" +
            "import android.support.v4.app.FragmentTransaction;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    Fragment fragment=null;\n" +
            "    Button b1,b2;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        b1=(Button)findViewById(R.id.f1);\n" +
            "        b2=(Button)findViewById(R.id.f2);\n" +
            "        b1.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                fragment=new fragment_one_demo();\n" +
            "                loadFragment(fragment);\n" +
            "            }\n" +
            "        });\n" +
            "        b2.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                fragment=new fragment_two_demo();\n" +
            "                loadFragment(fragment);\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "    public void loadFragment(Fragment fragment){\n" +
            "        FragmentManager manager=getSupportFragmentManager();\n" +
            "        FragmentTransaction transaction=manager.beginTransaction();\n" +
            "        transaction.replace(R.id.fragment,fragment);\n" +
            "        transaction.commit();\n" +
            "    }\n" +
            "}\n";
    String Code2="import android.os.Bundle;\n" +
            "import android.support.annotation.Nullable;\n" +
            "import android.support.v4.app.Fragment;\n" +
            "import android.view.LayoutInflater;\n" +
            "import android.view.View;\n" +
            "import android.view.ViewGroup;\n" +
            "import android.widget.LinearLayout;\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "public class Fragment_one_demo extends Fragment {\n" +
            "    TextView text;\n" +
            "    LinearLayout ll;\n" +
            "    @Override\n" +
            "    @Nullable\n" +
            "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {\n" +
            "        View view = inflater.inflate(R.layout.fragment_textview_demo, container, false);\n" +
            "        ll=(LinearLayout)view.findViewById(R.id.ll);\n" +
            "        ll.setBackgroundResource(R.color.colorPrimaryDark);\n" +
            "        text=(TextView)view.findViewById(R.id.text);\n" +
            "        text.setText(\"Fragment One\");\n" +
            "        return view;\n" +
            "    }\n" +
            "}\n";
    String Code3="import android.os.Bundle;\n" +
            "import android.support.annotation.Nullable;\n" +
            "import android.support.v4.app.Fragment;\n" +
            "import android.view.LayoutInflater;\n" +
            "import android.view.View;\n" +
            "import android.view.ViewGroup;\n" +
            "import android.widget.LinearLayout;\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "public class Fragment_two_demo extends Fragment {\n" +
            "    LinearLayout ll;\n" +
            "    TextView text;\n" +
            "    @Override\n" +
            "    @Nullable\n" +
            "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {\n" +
            "        View view = inflater.inflate(R.layout.fragment_textview_demo, container, false);\n" +
            "        ll=(LinearLayout)view.findViewById(R.id.ll);\n" +
            "        ll.setBackgroundResource(R.color.colorAccent);\n" +
            "        text=(TextView)view.findViewById(R.id.text);\n" +
            "        text.setText(\"Fragment Two\");\n" +
            "        return view;\n" +
            "    }\n" +
            "}\n" +
            "\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.three_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        title2=(TextView)view.findViewById(R.id.title2);
        title3=(TextView)view.findViewById(R.id.title3);
        title2.setText("Fragment_one_demo.Java");
        title3.setText("Fragment_two_demo.Java");
        WebView webView2=(WebView)view.findViewById(R.id.webview2);
        WebView webView3=(WebView)view.findViewById(R.id.webview3);
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy3=(Button)view.findViewById(R.id.copy3);
        copy3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code3);
                clipboard.setPrimaryClip(clip);
            }
        });


        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code2)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webView2);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code3)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webView3);
        return view;
    }



}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_clock_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "   <TimePicker\n" +
            "       android:layout_width=\"wrap_content\"\n" +
            "       android:layout_height=\"wrap_content\"\n" +
            "       android:layout_gravity=\"center\"\n" +
            "       android:layout_marginTop=\"100dp\"\n" +
            "       android:id=\"@+id/time\"/>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_custom_listView_xml extends Fragment implements CodeView.OnHighlightListener {
private ProgressDialog mProgressDialog;
private int themePos = 0;
        CodeView mCodeView,mcodeview2;
        TextView title2;
        String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
                "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
                "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
                "    android:layout_width=\"match_parent\"\n" +
                "    android:layout_height=\"match_parent\"\n" +
                "    android:orientation=\"vertical\"\n" +
                "    tools:context=\".MainActivity\">\n" +
                "\n" +
                "   <ListView\n" +
                "       android:layout_width=\"match_parent\"\n" +
                "       android:layout_height=\"match_parent\"\n" +
                "       android:id=\"@+id/listview\"></ListView>\n" +
                "\n" +
                "</LinearLayout>";
        String code2="<LinearLayout\n" +
                "    xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\n" +
                "    android:layout_height=\"wrap_content\"\n" +
                "    android:orientation=\"horizontal\">\n" +
                "\n" +
                "    <ImageView\n" +
                "        android:id=\"@+id/image\"\n" +
                "        android:layout_width=\"wrap_content\"\n" +
                "        android:layout_height=\"wrap_content\"\n" +
                "        android:layout_marginLeft=\"10dp\"\n" +
                "        android:src=\"@drawable/user\"/>\n" +
                "    <TextView\n" +
                "        android:layout_width=\"match_parent\"\n" +
                "        android:layout_height=\"wrap_content\"\n" +
                "        android:id=\"@+id/text\"\n" +
                "        android:textAlignment=\"center\"\n" +
                "        android:textColor=\"@android:color/black\"\n" +
                "        android:layout_gravity=\"center\"\n" +
                "        android:text=\"name\"/>\n" +
                "\n" +
                "</LinearLayout>";

@Override
@Nullable
public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("custom_listview_layout.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                        ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                        ClipData clip = ClipData.newPlainText("clip", Code);
                        clipboard.setPrimaryClip(clip);
                }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                        ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                        ClipData clip = ClipData.newPlainText("clip", code2);
                        clipboard.setPrimaryClip(clip);
                }
        });
        mCodeView.setOnHighlightListener(this)
        .setOnHighlightListener(this)
        .setTheme(Theme.DARCULA)
        .setCode(Code)
        .setLanguage(Language.XML)
        .setWrapLine(true)
        .setFontSize(12)
        .setZoomEnabled(false)
        .setShowLineNumber(false)
        .apply();
        mcodeview2.setOnHighlightListener(this)
        .setOnHighlightListener(this)
        .setTheme(Theme.DARCULA)
        .setCode(code2)
        .setLanguage(Language.XML)
        .setWrapLine(true)
        .setFontSize(12)
        .setZoomEnabled(false)
        .setShowLineNumber(false)
        .apply();
        return view;
        }


@Override
public void onStartCodeHighlight() {

        }

@Override
public void onFinishCodeHighlight() {

        }

@Override
public void onLanguageDetected(Language language, int i) {

        }

@Override
public void onFontSizeChanged(int i) {

        }

@Override
public void onLineClicked(int i, String s) {

        }
        }



package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_webview_ref extends Fragment {
    TextView text,head;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_textview_ref, container, false);
        text=(TextView)view.findViewById(R.id.text);
        head=(TextView)view.findViewById(R.id.head);
        head.setText("Manifest Guide");

        text.setText("Click-->app-->Manifest-->(add permission)\n" +
                "Add Permission before application tag:-(top of <application)"+
       " <uses-permission android:name=\"android.permission.INTERNET\" />\n");

        return view;
    }


}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_viewflipper_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2;
    TextView title2;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n" +
            "\n" +
            "    <AdapterViewFlipper\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"400dp\"\n" +
            "        android:id=\"@+id/adapterViewFlipper_phy\"\n" +
            "        />\n" +
            "</LinearLayout>";
    String code2="<LinearLayout\n" +
            "    xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"wrap_content\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "    <ImageView\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"150dp\"\n" +
            "        android:id=\"@+id/image\"/>\n" +
            "\n" +
            "    <TextView\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:lineSpacingExtra=\"5dp\"\n" +
            "        android:layout_gravity=\"center_horizontal|end\"\n" +
            "        android:justificationMode=\"inter_word\"\n" +
            "        android:id=\"@+id/text_slider\"/>\n" +
            "\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("custom_layout_alertdialog.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip1", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Vibrator;
import android.support.annotation.NonNull;
import android.support.design.widget.BottomNavigationView;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.util.Log;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import com.github.clans.fab.FloatingActionButton;
import com.github.clans.fab.FloatingActionMenu;
import com.google.android.gms.ads.AdListener;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.InterstitialAd;
import com.google.android.gms.ads.MobileAds;


public class BaseScreen extends AppCompatActivity {

    private TextView mTextMessage;
    Fragment fragment=null;
String position;

    TextView title;

    Bundle bundle = new Bundle();
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_base_screen);

        title=(TextView)findViewById(R.id.text_title);
        FloatingActionMenu menu;
        FloatingActionButton b2,b3,b4,b5,b6;



        mTextMessage = (TextView) findViewById(R.id.message);

        position=getIntent().getStringExtra("title");
//+++++++++++++++++++++++++++++++++++Basic+++++++++++++++++++++++++++++++++++++++++
        if(position.equals("textview")) {
            title.setText("Textview Reference");

            fragment = new Fragment_Textview_ref();

            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("edittext")) {
            title.setText("EditText Reference");
            fragment = new Fragment_Textview_ref();
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("imageview")) {
            title.setText("Imageview Reference");
            fragment = new Fragment_Textview_ref();
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("button")) {
            title.setText("Button Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "button");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("AutoCompleteTextView")) {
            title.setText("AutoCompleteTextView Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "AutoCompleteTextView");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("MultiAutoCompleteTextView")) {
            title.setText("MultiAutoCompleteTextView Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "MultiAutoCompleteTextView");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("Radiobutton_and_Radiogroup")) {
            title.setText("Radiobutton and Radiogroup Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "Radiobutton_and_Radiogroup");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("Checkbox")) {
            title.setText("Checkbox Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "Checkbox");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("toogle")) {
            title.setText("Toogle Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "toogle");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("progressbar")) {
            title.setText("Progressbar Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "progressbar");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("clock")) {
            title.setText("Clock Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "clock");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("datepicker")) {
            title.setText("Datepicker Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "datepicker");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("simpleandcustomtoast")) {
            title.setText("simpleandcustomtoast Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "simpleandcustomtoast");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("Alertdialog")) {
            title.setText("Alertdialog Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("customalertdialog")) {
            title.setText("customalertdialog Reference");
            fragment = new Fragment_custom_xml();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("simpleintent")) {
            title.setText("Simple Intent Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("bundlepassing")) {
            title.setText("BundlePassing Intent Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("fragment")) {
            title.setText("Fragment Reference");
            fragment = new Fragment_custom_xml_java();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("spinner")) {
            title.setText("Spinner Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("swipeRefreshLayout")) {
            title.setText("swipeRefreshLayout Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("implicitintent")) {
            title.setText("Dialer Intent Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("scrollview")) {
            title.setText("scrollview Reference");
            fragment = new Fragment_scrollview_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("curveedge")) {
            title.setText("Curve Edge Buttons Reference");
            fragment = new Fragment_curve_edge_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }




        //+++++++++++++++++++++++++++++++++++Advance+++++++++++++++++++++++++++++++++++++++++

        if(position.equals("imageandtextswitcher")) {
            title.setText("Image And TextSwitcher Reference");
            fragment = new Fragment_curve_edge_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("viewflipper")) {
            title.setText("ViewFlipper Reference");
            fragment = new Fragment_custom_xml_java();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("Animation")) {
            title.setText("Animation Reference");
            fragment = new Fragment_animation_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("listview")) {
            title.setText("ListView Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("Customlistview")) {
            title.setText("CustomListView Reference");
            fragment = new Fragment_custom_xml_java();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("expandablelistview")) {
            title.setText("ExpandableListView Reference");
            fragment = new Fragment_custom_xml_java();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("gridview")) {
            title.setText("GridView Reference");
            fragment = new Fragment_custom_xml_java();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("webview")) {
            title.setText("WebView Reference");
            fragment = new Fragment_webview_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("searchview")) {
            title.setText("SearchView Reference");
            fragment = new Fragment_custom_xml_java();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("tablayout")) {
            title.setText("TabLayout Reference");
            fragment = new Fragment_tabbed_activity_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("viewpager")) {
            title.setText("ViewPager Reference");
            fragment = new Fragment_curve_edge_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("BottomNavigation")) {
            title.setText("Bottom Navigation Reference");
            fragment = new Fragment_bottom_navigation_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("NavigationDrawer")) {
            title.setText("Navigation Drawer Reference");
            fragment = new Fragment_Navigationdrawer_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("Recyclerandcardview")) {
            title.setText("RecyclerView and CardView Reference");
            fragment = new Fragment_RecycclerView_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("Notification")) {
            title.setText("Notification Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("Recyclerviewinsiderecyclerview")) {
            title.setText("RecyclerView Inside RecyclerView Reference");
            fragment = new Fragment_Recyclerview_inside_recyclerview();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("Arraylistinsidearraylist")) {
            title.setText("ArrayList Inside ArrayList Reference");
            fragment = new Fragment_curve_edge_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("fingerprintrecognization")) {
            title.setText("Fingerprint Recognization Reference");
            fragment = new Fragment_fingerprint_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("Imageviewfromurl")) {
            title.setText("ImageView From URL Reference");
            fragment = new Fragment_image_url_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("SharedPref")) {
            title.setText("Shared Preferences Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("sql")) {
            title.setText("SQLite Database Reference");
            fragment = new Fragment_custom_xml_java();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        if(position.equals("services")) {
            title.setText("Background Services Reference");
            fragment = new Fragment_custom_xml_java();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }








        //+++++++++++++++++++++++++++++++++++Library+++++++++++++++++++++++++++++++++++++++++


        if(position.equals("Volley")) {
            title.setText("Volley Reference");
            fragment = new Fragment_json_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }


        if(position.equals("OKHTTP")) {
            title.setText("OKHTTP Reference");
            fragment = new Fragment_okhttp_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("sendImageToServer")) {
            title.setText("sendImageToServer Reference");
            fragment = new Fragment_expandable_re_view_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("ex_recycler")) {
            title.setText("Expandable RecyclerView Reference");
            fragment = new Fragment_image_server_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("encrypt")) {
            title.setText("Encrypt and Decrypt Reference");
            fragment = new Fragment_encryptanddecrypt_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("patternlockview")) {
            title.setText("Pattern Lockview Reference");
            fragment = new Fragment_pattern_lock_view_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("advancedwebview")) {
            title.setText("Advanced Webview Reference");
            fragment = new Fragment_AdvancedWebView_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("Qrcode")) {
            title.setText("Qr Code Scanner Reference");
            fragment = new Fragment_qrscanner_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("pdf")) {
            title.setText("Pdf Creator Reference");
            fragment = new Fragment_pdf_creator_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("floatingmenu")) {
            title.setText("Floating Menu Reference");
            fragment = new Fragment_floatingmenu_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("text_speech")) {
            title.setText("Text To Speech Reference");
            fragment = new Fragment_Textview_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("speech_text")) {
            title.setText("Speech To Text Reference");
            fragment = new Fragment_Speech_text_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("Image_text")) {
            title.setText("Image To Text Reference");
            fragment = new Fragment_Image_text_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("mapview")) {
            title.setText("MapView with Current Location Reference");
            fragment = new Fragment_image_server_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }
        if(position.equals("gifimage")) {
            title.setText("Gif ImageView  Reference");
            fragment = new Fragment_gifimageview_ref();
            bundle.putString("params", "Alertdialog");
            fragment.setArguments(bundle);
            loadFragment(fragment);
        }

        menu=(FloatingActionMenu)findViewById(R.id.menu);
        menu.setClosedOnTouchOutside(true);
        menu.setOnMenuToggleListener(new FloatingActionMenu.OnMenuToggleListener() {
            @Override
            public void onMenuToggle(boolean opened) {
                Vibrator vibrator=(Vibrator)getSystemService(Context.VIBRATOR_SERVICE);
                if(opened){
                    if(vibrator!=null){
                        vibrator.vibrate(50);
                    }
                }else {
                    if(vibrator!=null){
                        vibrator.vibrate(50);
                    }
                }
            }
        });

        b2=(FloatingActionButton)findViewById(R.id.b2);
        b3=(FloatingActionButton)findViewById(R.id.b3);
        b4=(FloatingActionButton)findViewById(R.id.b4);
        b5=(FloatingActionButton)findViewById(R.id.b5);

//*************************************************b5**********************************

        b5.setOnClickListener(new View.OnClickListener() {
                                  @Override
                                  public void onClick(View v) {

//+++++++++++++++++++++++++++++++++++Basic+++++++++++++++++++++++++++++++++++++++++
                                      if (position.equals("textview")) {
                                          title.setText("Textview Reference");

                                          fragment = new Fragment_Textview_ref();

                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("edittext")) {
                                          title.setText("EditText Reference");
                                          fragment = new Fragment_Textview_ref();
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("imageview")) {
                                          title.setText("Imageview Reference");
                                          fragment = new Fragment_Textview_ref();
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("button")) {
                                          title.setText("Button Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "button");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("AutoCompleteTextView")) {
                                          title.setText("AutoCompleteTextView Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "AutoCompleteTextView");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("MultiAutoCompleteTextView")) {
                                          title.setText("MultiAutoCompleteTextView Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "MultiAutoCompleteTextView");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("Radiobutton_and_Radiogroup")) {
                                          title.setText("Radiobutton and Radiogroup Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "Radiobutton_and_Radiogroup");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("Checkbox")) {
                                          title.setText("Checkbox Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "Checkbox");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("toogle")) {
                                          title.setText("Toogle Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "toogle");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("progressbar")) {
                                          title.setText("Progressbar Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "progressbar");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("clock")) {
                                          title.setText("Clock Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "clock");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("datepicker")) {
                                          title.setText("Datepicker Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "datepicker");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("simpleandcustomtoast")) {
                                          title.setText("simpleandcustomtoast Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "simpleandcustomtoast");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("Alertdialog")) {
                                          title.setText("Alertdialog Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("customalertdialog")) {
                                          title.setText("customalertdialog Reference");
                                          fragment = new Fragment_custom_xml();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("simpleintent")) {
                                          title.setText("Simple Intent Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("bundlepassing")) {
                                          title.setText("BundlePassing Intent Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("fragment")) {
                                          title.setText("Fragment Reference");
                                          fragment = new Fragment_custom_xml_java();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("spinner")) {
                                          title.setText("Spinner Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("swipeRefreshLayout")) {
                                          title.setText("swipeRefreshLayout Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("implicitintent")) {
                                          title.setText("Dialer Intent Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("scrollview")) {
                                          title.setText("scrollview Reference");
                                          fragment = new Fragment_scrollview_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("curveedge")) {
                                          title.setText("Curve Edge Buttons Reference");
                                          fragment = new Fragment_curve_edge_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }


                                      //+++++++++++++++++++++++++++++++++++Advance+++++++++++++++++++++++++++++++++++++++++

                                      if (position.equals("imageandtextswitcher")) {
                                          title.setText("Image And TextSwitcher Reference");
                                          fragment = new Fragment_curve_edge_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("viewflipper")) {
                                          title.setText("ViewFlipper Reference");
                                          fragment = new Fragment_custom_xml_java();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("Animation")) {
                                          title.setText("Animation Reference");
                                          fragment = new Fragment_animation_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("listview")) {
                                          title.setText("ListView Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("Customlistview")) {
                                          title.setText("CustomListView Reference");
                                          fragment = new Fragment_custom_xml_java();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("expandablelistview")) {
                                          title.setText("ExpandableListView Reference");
                                          fragment = new Fragment_custom_xml_java();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("gridview")) {
                                          title.setText("GridView Reference");
                                          fragment = new Fragment_custom_xml_java();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("webview")) {
                                          title.setText("WebView Reference");
                                          fragment = new Fragment_webview_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("searchview")) {
                                          title.setText("SearchView Reference");
                                          fragment = new Fragment_custom_xml_java();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("tablayout")) {
                                          title.setText("TabLayout Reference");
                                          fragment = new Fragment_tabbed_activity_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("viewpager")) {
                                          title.setText("ViewPager Reference");
                                          fragment = new Fragment_curve_edge_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("BottomNavigation")) {
                                          title.setText("Bottom Navigation Reference");
                                          fragment = new Fragment_bottom_navigation_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("NavigationDrawer")) {
                                          title.setText("Navigation Drawer Reference");
                                          fragment = new Fragment_Navigationdrawer_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("Recyclerandcardview")) {
                                          title.setText("RecyclerView and CardView Reference");
                                          fragment = new Fragment_RecycclerView_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("Notification")) {
                                          title.setText("Notification Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("Recyclerviewinsiderecyclerview")) {
                                          title.setText("RecyclerView Inside RecyclerView Reference");
                                          fragment = new Fragment_Recyclerview_inside_recyclerview();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("Arraylistinsidearraylist")) {
                                          title.setText("ArrayList Inside ArrayList Reference");
                                          fragment = new Fragment_curve_edge_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("fingerprintrecognization")) {
                                          title.setText("Fingerprint Recognization Reference");
                                          fragment = new Fragment_fingerprint_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("Imageviewfromurl")) {
                                          title.setText("ImageView From URL Reference");
                                          fragment = new Fragment_image_url_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("SharedPref")) {
                                          title.setText("Shared Preferences Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("sql")) {
                                          title.setText("SQLite Database Reference");
                                          fragment = new Fragment_custom_xml_java();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }

                                      if (position.equals("services")) {
                                          title.setText("Background Services Reference");
                                          fragment = new Fragment_custom_xml_java();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }


                                      //+++++++++++++++++++++++++++++++++++Library+++++++++++++++++++++++++++++++++++++++++


                                      if (position.equals("Volley")) {
                                          title.setText("Volley Reference");
                                          fragment = new Fragment_json_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }


                                      if (position.equals("OKHTTP")) {
                                          title.setText("OKHTTP Reference");
                                          fragment = new Fragment_okhttp_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("sendImageToServer")) {
                                          title.setText("sendImageToServer Reference");
                                          fragment = new Fragment_expandable_re_view_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("ex_recycler")) {
                                          title.setText("Expandable RecyclerView Reference");
                                          fragment = new Fragment_image_server_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("encrypt")) {
                                          title.setText("Encrypt and Decrypt Reference");
                                          fragment = new Fragment_encryptanddecrypt_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("patternlockview")) {
                                          title.setText("Pattern Lockview Reference");
                                          fragment = new Fragment_pattern_lock_view_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("advancedwebview")) {
                                          title.setText("Advanced Webview Reference");
                                          fragment = new Fragment_AdvancedWebView_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("Qrcode")) {
                                          title.setText("Qr Code Scanner Reference");
                                          fragment = new Fragment_qrscanner_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("pdf")) {
                                          title.setText("Pdf Creator Reference");
                                          fragment = new Fragment_pdf_creator_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("floatingmenu")) {
                                          title.setText("Floating Menu Reference");
                                          fragment = new Fragment_floatingmenu_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("text_speech")) {
                                          title.setText("Text To Speech Reference");
                                          fragment = new Fragment_Textview_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("speech_text")) {
                                          title.setText("Speech To Text Reference");
                                          fragment = new Fragment_Speech_text_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("Image_text")) {
                                          title.setText("Image To Text Reference");
                                          fragment = new Fragment_Image_text_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("mapview")) {
                                          title.setText("MapView with Current Location Reference");
                                          fragment = new Fragment_image_server_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                      if (position.equals("gifimage")) {
                                          title.setText("Gif ImageView  Reference");
                                          fragment = new Fragment_gifimageview_ref();
                                          bundle.putString("params", "Alertdialog");
                                          fragment.setArguments(bundle);
                                          loadFragment(fragment);
                                      }
                                  }
                              });

                menu = (FloatingActionMenu) findViewById(R.id.menu);
                menu.setClosedOnTouchOutside(true);
                menu.setOnMenuToggleListener(new FloatingActionMenu.OnMenuToggleListener() {
                    @Override
                    public void onMenuToggle(boolean opened) {
                        Vibrator vibrator = (Vibrator) getSystemService(Context.VIBRATOR_SERVICE);
                        if (opened) {
                            if (vibrator != null) {
                                vibrator.vibrate(50);
                            }
                        } else {
                            if (vibrator != null) {
                                vibrator.vibrate(50);
                            }
                        }

                    }
                });


                //***************************************b4************************


                b4.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {


                        //+++++++++++++++++++++++++++++++++++Basic+++++++++++++++++++++++++++++++++++++++++


                        if (position.equals("textview")) {
                            title.setText("Textview XML");

                            fragment = new Fragment_TextView_xml();

                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("edittext")) {
                            title.setText("Edittext XML");
                            fragment = new Fragment_EditText_xml();
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("imageview")) {
                            title.setText("Imageview XML");
                            fragment = new Fragment_ImageView_xml();
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("button")) {
                            title.setText("Button XML");
                            fragment = new Fragment_button_xml();
                            bundle.putString("params", "button");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("AutoCompleteTextView")) {
                            title.setText("AutoCompleteTextView XML");
                            fragment = new Fragment_AutoCompleteTextView_xml();
                            bundle.putString("params", "AutoCompleteTextView");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("MultiAutoCompleteTextView")) {
                            title.setText("MultiAutoCompleteTextView XML");
                            fragment = new Fragment_MultiAutoCompletTextview_xml();
                            bundle.putString("params", "MultiAutoCompleteTextView");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Radiobutton_and_Radiogroup")) {
                            title.setText("Radiobutton and Radiogroup XML");
                            fragment = new Fragment_RadioButton_and_Radiogroup_xml();
                            bundle.putString("params", "Radiobutton_and_Radiogroup");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Checkbox")) {
                            title.setText("Checkbox XML");
                            fragment = new Fragment_CheckBox_xml();
                            bundle.putString("params", "Checkbox");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("toogle")) {
                            title.setText("Toogle XML");
                            fragment = new Fragment_toogle_xml();
                            bundle.putString("params", "toogle");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("progressbar")) {
                            title.setText("Progressbar XML");
                            fragment = new Fragment_progressbar_xml();
                            bundle.putString("params", "progressbar");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("clock")) {
                            title.setText("Clock XML");
                            fragment = new Fragment_clock_xml();
                            bundle.putString("params", "clock");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("datepicker")) {
                            title.setText("Datepicker XML");
                            fragment = new Fragment_DatePicker_xml();
                            bundle.putString("params", "datepicker");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("simpleandcustomtoast")) {
                            title.setText("simpleandcustomtoast XML");
                            fragment = new Fragment_simple_and_custom_toast_xml();
                            bundle.putString("params", "simpleandcustomtoast");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Alertdialog")) {
                            title.setText("Alertdialog XML");
                            fragment = new Fragment_Alertdialog_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("customalertdialog")) {
                            title.setText("customalertdialog XML");
                            fragment = new fragment_custom_alert_dialog_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("simpleintent")) {
                            title.setText("Simple Intent XML");
                            fragment = new Fragment_simple_intent_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("bundlepassing")) {
                            title.setText("BundlePassing Intent XML");
                            fragment = new fragment_bundle_passing_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("fragment")) {
                            title.setText("Fragment XML");
                            fragment = new Fragment_fragment_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("spinner")) {
                            title.setText("Spinner XML");
                            fragment = new Fragment_spinner_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("swipeRefreshLayout")) {
                            title.setText("swipeRefreshLayout XML");
                            fragment = new Fragment_swiperefreshlayout_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("implicitintent")) {
                            title.setText("Dialer Intent XML");
                            fragment = new Fragment_dialer_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("scrollview")) {
                            title.setText("scrollview XML");
                            fragment = new Fragment_scrollview_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("curveedge")) {
                            title.setText("Curve Edge Buttons XML");
                            fragment = new Fragment_curve_edge_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }


                        //+++++++++++++++++++++++++++++++++++Advance+++++++++++++++++++++++++++++++++++++++++
                        //+++++++++++++++++++++++++++++++++++Advance+++++++++++++++++++++++++++++++++++++++++

                        if (position.equals("imageandtextswitcher")) {
                            title.setText("Image And TextSwitcher XML");
                            fragment = new Fragment_curve_edge_ref();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("viewflipper")) {
                            title.setText("ViewFlipper XML");
                            fragment = new Fragment_curve_edge_ref();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Animation")) {
                            title.setText("Animation XML");
                            fragment = new Fragment_viewflipper_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("listview")) {
                            title.setText("ListView XML");
                            fragment = new Fragment_list_view_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Customlistview")) {
                            title.setText("CustomListView XML");
                            fragment = new Fragment_custom_listView_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("expandablelistview")) {
                            title.setText("ExpandableListView XML");
                            fragment = new Fragment_expandable_listview_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("gridview")) {
                            title.setText("GridView XML");
                            fragment = new Fragment_gridview_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("webview")) {
                            title.setText("WebView XML");
                            fragment = new Fragment_webview_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("searchview")) {
                            title.setText("SearchView XML");
                            fragment = new Fragment_SearchView_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("tablayout")) {
                            title.setText("TabLayout XML");
                            fragment = new Fragment_tabbed_activity_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("viewpager")) {
                            title.setText("ViewPager XML");
                            fragment = new Fragment_curve_edge_ref();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("BottomNavigation")) {
                            title.setText("Bottom Navigation XML");
                            fragment = new Fragment_bottom_navigation_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("NavigationDrawer")) {
                            title.setText("Navigation Drawer XML");
                            fragment = new Fragment_Navigationdrawer_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Recyclerandcardview")) {
                            title.setText("RecyclerView and CardView XML");
                            fragment = new Fragment_recyclerView_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Notification")) {
                            title.setText("Notification XML");
                            fragment = new Fragment_notification_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Recyclerviewinsiderecyclerview")) {
                            title.setText("RecyclerView Inside RecyclerView XML");
                            fragment = new Fragment_Recyclerview_inside_recyclerview();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Arraylistinsidearraylist")) {
                            title.setText("ArrayList Inside ArrayList XML");
                            fragment = new Fragment_curve_edge_ref();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("fingerprintrecognization")) {
                            title.setText("Fingerprint Recognization XML");
                            fragment = new Fragment_fingerprint_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Imageviewfromurl")) {
                            title.setText("ImageView From URL XML");
                            fragment = new Fragment_image_url_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("SharedPref")) {
                            title.setText("Shared Preferences XML");
                            fragment = new Fragment_sp_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("sql")) {
                            title.setText("SQLite Database XML");
                            fragment = new Fragment_sql_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("services")) {
                            title.setText("Background Services XML");
                            fragment = new Fragment_Backgroundservices_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }


                        //+++++++++++++++++++++++++++++++++++Library+++++++++++++++++++++++++++++++++++++++++


                        if (position.equals("Volley")) {
                            title.setText("Volley XML");
                            fragment = new Fragment_json_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("OKHTTP")) {
                            title.setText("OKHTTP XML");
                            fragment = new Fragment_okhttp_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("sendImageToServer")) {
                            title.setText("sendImageToServer XML");
                            fragment = new fragment_image_server_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("ex_recycler")) {
                            title.setText("Expandable RecyclerView XML");
                            fragment = new Fragment_expandable_re_view_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("encrypt")) {
                            title.setText("Encrypt and Decrypt XML");
                            fragment = new Fragment_encryptanddecrypt_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("patternlockview")) {
                            title.setText("Pattern Lockview XML");
                            fragment = new Fragment_pattern_lockview_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("advancedwebview")) {
                            title.setText("Advanced Webview XML");
                            fragment = new Fragment_AdvancedWebView_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Qrcode")) {
                            title.setText("Qr Code Scanner XML");
                            fragment = new Fragment_qrscanner_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("pdf")) {
                            title.setText("Pdf Creator XML");
                            fragment = new Fragment_pdf_creator_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("floatingmenu")) {
                            title.setText("Floating Menu XML");
                            fragment = new Fragment_floatingmenu_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("text_speech")) {
                            title.setText("Text To Speech XML");
                            fragment = new Fragment_text_speech_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("speech_text")) {
                            title.setText("Speech To Text XML");
                            fragment = new Fragment_speech_text_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Image_text")) {
                            title.setText("Image To Text XML");
                            fragment = new Fragment_Image_text_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("mapview")) {
                            title.setText("MapView with Current Location XML");
                            fragment = new Fragment_image_server_ref();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("gifimage")) {
                            title.setText("Gif ImageView  XML");
                            fragment = new Fragment_gifimageview_xml();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                    }
                });


                //******************************b3****************************


                b3.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {


                        //+++++++++++++++++++++++++++++++++++Basic+++++++++++++++++++++++++++++++++++++++++


                        if (position.equals("textview")) {
                            title.setText("Textview Java");

                            fragment = new Fragment_TextView_java();

                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("edittext")) {
                            title.setText("Edittext Java");
                            fragment = new Fragment_edittext_java();
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("imageview")) {
                            title.setText("Imageview java");
                            fragment = new Fragment_ImageView_Java();
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("button")) {
                            title.setText("Button Java");
                            fragment = new Fragment_button_java();
                            bundle.putString("params", "button");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("AutoCompleteTextView")) {
                            title.setText("AutoCompleteTextView Java");
                            fragment = new Fragment_AutoComplete_TextView_java();
                            bundle.putString("params", "AutoCompleteTextView");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("MultiAutoCompleteTextView")) {
                            title.setText("MultiAutoCompleteTextView Java");
                            fragment = new Fragment_MulitiAutoCompleteTexview_java();
                            bundle.putString("params", "MultiAutoCompleteTextView");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Radiobutton_and_Radiogroup")) {
                            title.setText("Radiobutton and Radiogroup Java");
                            fragment = new Fragment_RadioGroup_java();
                            bundle.putString("params", "Radiobutton_and_Radiogroup");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Checkbox")) {
                            title.setText("Checkbox Java");
                            fragment = new Fragment_Checkbox_java();
                            bundle.putString("params", "Checkbox");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("toogle")) {
                            title.setText("Toogle Java");
                            fragment = new Fragment_toogle_java();
                            bundle.putString("params", "toogle");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("progressbar")) {
                            title.setText("Progressbar Java");
                            fragment = new Fragment_progressbar_java();
                            bundle.putString("params", "progressbar");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("clock")) {
                            title.setText("Clock Java");
                            fragment = new Fragment_clock_java();
                            bundle.putString("params", "clock");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("datepicker")) {
                            title.setText("Datepicker Java");
                            fragment = new Fragment_Date_picker_java();
                            bundle.putString("params", "datepicker");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("simpleandcustomtoast")) {
                            title.setText("simpleandcustomtoast Java");
                            fragment = new Fragment_simple_and_custom_toast_java();
                            bundle.putString("params", "simpleandcustomtoast");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Alertdialog")) {
                            title.setText("Alertdialog Java");
                            fragment = new Fragment_Alert_dialog_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("customalertdialog")) {
                            title.setText("customalertdialog Java");
                            fragment = new Fragment_custom_alert_dialog_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("simpleintent")) {
                            title.setText("Simple Intent Java");
                            fragment = new Fragment_simple_intent_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("bundlepassing")) {
                            title.setText("BundlePassing Intent Java");
                            fragment = new fragment_bundle_passing_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("fragment")) {
                            title.setText("Fragment Java");
                            fragment = new Fragment_fragment_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("spinner")) {
                            title.setText("Spinner Java");
                            fragment = new Fragment_spinner_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("swipeRefreshLayout")) {
                            title.setText("swipeRefreshLayout Java");
                            fragment = new Fragment_swiperefreshlayout_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("implicitintent")) {
                            title.setText("Dialer Intent Java");
                            fragment = new Fragment_dialer_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("scrollview")) {
                            title.setText("scrollview Java");
                            fragment = new Fragment_scroll_view_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("curveedge")) {
                            title.setText("Curve Edge Buttons Java");
                            fragment = new Fragment_curve_edge_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }


                        //+++++++++++++++++++++++++++++++++++Advance+++++++++++++++++++++++++++++++++++++++++

                        //+++++++++++++++++++++++++++++++++++Advance+++++++++++++++++++++++++++++++++++++++++

                        if (position.equals("imageandtextswitcher")) {
                            title.setText("Image And TextSwitcher Java");
                            fragment = new Fragment_curve_edge_ref();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("viewflipper")) {
                            title.setText("ViewFlipper Java");
                            fragment = new Fragment_view_flipper_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Animation")) {
                            title.setText("Animation Java");
                            fragment = new Fragment_animation_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("listview")) {
                            title.setText("ListView Java");
                            fragment = new Fragment_list_view_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Customlistview")) {
                            title.setText("CustomListView Java");
                            fragment = new Fragment_custom_listView_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("expandablelistview")) {
                            title.setText("ExpandableListView Java");
                            fragment = new Fragment_expandable_listview_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("gridview")) {
                            title.setText("GridView Java");
                            fragment = new Fragment_gridview_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("webview")) {
                            title.setText("WebView Java");
                            fragment = new Fragment_webview_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("searchview")) {
                            title.setText("SearchView Java");
                            fragment = new Fragment_SearchView_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("tablayout")) {
                            title.setText("TabLayout Java");
                            fragment = new Fragment_tabbedactivity_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("viewpager")) {
                            title.setText("ViewPager Java");
                            fragment = new Fragment_curve_edge_ref();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("BottomNavigation")) {
                            title.setText("Bottom Navigation Java");
                            fragment = new Fragment_bottomNavigation_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("NavigationDrawer")) {
                            title.setText("Navigation Drawer Java");
                            fragment = new Fragment_Navigationdrawer_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Recyclerandcardview")) {
                            title.setText("RecyclerView and CardView Java");
                            fragment = new Fragment_Recycler_view_Java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Notification")) {
                            title.setText("Notification Demo");
                            fragment = new Fragment_notification_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Recyclerviewinsiderecyclerview")) {
                            title.setText("RecyclerView Inside RecyclerView Java");
                            fragment = new Fragment_Recyclerview_inside_recyclerview();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Arraylistinsidearraylist")) {
                            title.setText("ArrayList Inside ArrayList Java");
                            fragment = new Fragment_curve_edge_ref();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("fingerprintrecognization")) {
                            title.setText("Fingerprint Recognization Java");
                            fragment = new Fragment_fingerprint_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Imageviewfromurl")) {
                            title.setText("ImageView From URL Java");
                            fragment = new Fragment_image_url_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("SharedPref")) {
                            title.setText("Shared Preferences Java");
                            fragment = new Fragment_sp_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("sql")) {
                            title.setText("SQLite Database Java");
                            fragment = new Fragment_sql_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("services")) {
                            title.setText("Background Services Java");
                            fragment = new Fragment_Backgroundservices_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }


                        //+++++++++++++++++++++++++++++++++++Library+++++++++++++++++++++++++++++++++++++++++


                        if (position.equals("Volley")) {
                            title.setText("Volley Java");
                            fragment = new Fragment_json_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("OKHTTP")) {
                            title.setText("OKHTTP Java");
                            fragment = new Fragment_okhttp_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("sendImageToServer")) {
                            title.setText("sendImageToServer Java");
                            fragment = new Fragment_image_server_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("ex_recycler")) {
                            title.setText("Expandable RecyclerView Java");
                            fragment = new Fragment_expandable_re_view_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("encrypt")) {
                            title.setText("Encrypt and Decrypt Java");
                            fragment = new Fragment_encryptanddecrypt_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("patternlockview")) {
                            title.setText("Pattern Lockview Java");
                            fragment = new Fragment_patternlockview_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("advancedwebview")) {
                            title.setText("Advanced Webview Java");
                            fragment = new Fragment_AdvancedWebView_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Qrcode")) {
                            title.setText("Qr Code Scanner Java");
                            fragment = new Fragment_qrscanner_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("pdf")) {
                            title.setText("Pdf Creator Java");
                            fragment = new Fragment_pdfcreator_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("floatingmenu")) {
                            title.setText("Floating Menu Java");
                            fragment = new Fragment_floatingmenu_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("text_speech")) {
                            title.setText("Text To Speech Java");
                            fragment = new Fragment_text_speech_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("speech_text")) {
                            title.setText("Speech To Text Java");
                            fragment = new Fragment_speech_text_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Image_text")) {
                            title.setText("Image To Text Java");
                            fragment = new Fragment_Image_text_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("mapview")) {
                            title.setText("MapView with Current Location Java");
                            fragment = new Fragment_image_server_ref();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("gifimage")) {
                            title.setText("Gif ImageView  Java");
                            fragment = new Fragment_gifimageview_java();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                    }
                });

                //******************************b2****************************


                b2.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {


                        //+++++++++++++++++++++++++++++++++++Basic+++++++++++++++++++++++++++++++++++++++++


                        if (position.equals("textview")) {
                            title.setText("TextView Demo");
                            fragment = new Fragment_textview_demo();
                            bundle.putString("params", "textview");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("edittext")) {
                            title.setText("EditText Demo");
                            fragment = new Fragment_edittext_demo();
                            bundle.putString("params", "edittext");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("imageview")) {
                            title.setText("ImageView Demo");
                            fragment = new Fragment_ImageView_demo();
                            bundle.putString("params", "imageview");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("button")) {
                            title.setText("Button Demo");
                            fragment = new Fragment_button_demo();
                            bundle.putString("params", "button");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("AutoCompleteTextView")) {
                            title.setText("AutoCompleteTextView Demo");
                            fragment = new Fragment_AutoCompleteTextView_demo();
                            bundle.putString("params", "AutoCompleteTextView");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("MultiAutoCompleteTextView")) {
                            title.setText("MultiAutoCompleteTextView");
                            fragment = new Fragment_MultiAutoCompleteTextView_demo();
                            bundle.putString("params", "MultiAutoCompleteTextView");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Radiobutton_and_Radiogroup")) {
                            title.setText("RadioButton And RadioGroup Demo");
                            fragment = new Fragment_RadioGroup_demo();
                            bundle.putString("params", "Radiobutton_and_Radiogroup");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Checkbox")) {
                            title.setText("CheckBox Demo");
                            fragment = new Fragment_checkbox_demo();
                            bundle.putString("params", "Checkbox");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("toogle")) {
                            title.setText("Toogle Demo");
                            fragment = new Fragment_toggle_demo();
                            bundle.putString("params", "toogle");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("progressbar")) {
                            title.setText("ProgressBar Demo");
                            fragment = new Fragment_ProgrssBar_demo();
                            bundle.putString("params", "progressbar");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("clock")) {
                            title.setText("Clock Demo");
                            fragment = new Fragment_clock_demo();
                            bundle.putString("params", "clock");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("datepicker")) {
                            title.setText("DatePicker Demo");
                            fragment = new Fragment_datepicker_demo();
                            bundle.putString("params", "datepicker");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("simpleandcustomtoast")) {
                            title.setText("Simple And Custom Toast");
                            fragment = new Fragment_simple_and_custom_toast_demo();
                            bundle.putString("params", "simpleandcustomtoast");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Alertdialog")) {
                            title.setText("Alert Dialog Demo");
                            fragment = new Fragment_alert_dialog_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("customalertdialog")) {
                            title.setText("customalertdialog Demo");
                            fragment = new Fragment_custom_alertdialog_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("simpleintent")) {
                            Intent intent = new Intent(BaseScreen.this, SimpleIntent_demo.class);
                            startActivity(intent);
                        }
                        if (position.equals("bundlepassing")) {
                            Intent intent = new Intent(BaseScreen.this, Bundle_passing_demo.class);
                            startActivity(intent);
                        }
                        if (position.equals("fragment")) {
                            Intent intent = new Intent(BaseScreen.this, Fragment_demo.class);
                            startActivity(intent);
                        }
                        if (position.equals("spinner")) {
                            title.setText("Spinner Demo");
                            fragment = new Fragment_spinner_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("swipeRefreshLayout")) {
                            title.setText("swipeRefreshLayout Demo");
                            fragment = new Fragment_swipe_refresh_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("implicitintent")) {
                            Intent intent = new Intent(BaseScreen.this, Dialer_demo.class);
                            startActivity(intent);
                        }
                        if (position.equals("scrollview")) {
                            title.setText("scrollview Demo");
                            fragment = new Fragment_scrollview_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("curveedge")) {
                            title.setText("Curve Edge Buttons Demo");
                            fragment = new Fragment_curve_edge_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }


                        //+++++++++++++++++++++++++++++++++++Advance+++++++++++++++++++++++++++++++++++++++++

                        if (position.equals("imageandtextswitcher")) {
                            title.setText("Image And TextSwitcher Demo");
                            fragment = new Fragment_curve_edge_ref();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("viewflipper")) {
                            title.setText("ViewFlipper Demo");
                            fragment = new Fragment_viewflipper_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Animation")) {
                            title.setText("Animation Demo");
                            fragment = new Fragment_animation_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("listview")) {
                            title.setText("ListView Demo");
                            fragment = new Fragment_list_view_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Customlistview")) {
                            title.setText("CustomListView Demo");
                            fragment = new Fragment_custom_listview_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("expandablelistview")) {
                            title.setText("ExpandableListView Demo");
                            fragment = new Fragment_Expandable_Listview_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("gridview")) {
                            title.setText("GridView Demo");
                            fragment = new Fragment_gridview_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("webview")) {
                            title.setText("WebView Demo");
                            fragment = new Fragment_webview_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("searchview")) {
                            Intent intent = new Intent(BaseScreen.this, SearchView_demo.class);
                            startActivity(intent);
                        }

                        if (position.equals("tablayout")) {
                            Intent intent = new Intent(BaseScreen.this, TabbedActivity.class);
                            startActivity(intent);
                        }

                        if (position.equals("viewpager")) {
                            title.setText("ViewPager Demo");
                            fragment = new Fragment_curve_edge_ref();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("BottomNavigation")) {
                            Intent intent = new Intent(BaseScreen.this, BottomNavigation.class);
                            startActivity(intent);
                        }

                        if (position.equals("NavigationDrawer")) {
                            Intent intent = new Intent(BaseScreen.this, NavigationDrawer.class);
                            startActivity(intent);
                        }

                        if (position.equals("Recyclerandcardview")) {
                            title.setText("RecyclerView and CardView Demo");
                            fragment = new Fragment_Recyclerview_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Notification")) {
                            title.setText("Notification Demo");
                            fragment = new Fragment_notifications_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Recyclerviewinsiderecyclerview")) {
                            title.setText("RecyclerView Inside RecyclerView Demo");
                            fragment = new Fragment_Recyclerview_inside_recyclerview();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Arraylistinsidearraylist")) {
                            title.setText("ArrayList Inside ArrayList Demo");
                            fragment = new Fragment_curve_edge_ref();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("fingerprintrecognization")) {
                            title.setText("Fingerprint Recognization Demo");
                            fragment = new Fragment_fingerprint_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("Imageviewfromurl")) {
                            title.setText("ImageView From URL Demo");
                            fragment = new Fragment_Image_url_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("SharedPref")) {
                            title.setText("Shared Preferences Demo");
                            fragment = new Fragment_sp_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("sql")) {
                            title.setText("SQLite Database Demo");
                            fragment = new Fragment_sql_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                        if (position.equals("services")) {
                            title.setText("Background Services Demo");
                            fragment = new Fragment_Background_services_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }


                        //+++++++++++++++++++++++++++++++++++Library+++++++++++++++++++++++++++++++++++++++++


                        if (position.equals("Volley")) {
                            title.setText("Volley Demo");
                            fragment = new Fragment_json_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("OKHTTP")) {
                            title.setText("OKHTTP Demo");
                            fragment = new Fragment_okhttp_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("sendImageToServer")) {
                            title.setText("Image To SErver Demo");
                            fragment = new Fragment_image_server_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("spinner")) {
                            title.setText("Spinner Demo");
                            fragment = new Fragment_spinner_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("customalertdialog")) {
                            title.setText("Custom ALertDIalog Demo");
                            fragment = new Fragment_custom_alertdialog_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("swipeRefreshLayout")) {
                            title.setText("SwipeRefreshLayout Demo");
                            fragment = new Fragment_swipe_refresh_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("scrollview")) {
                            title.setText("ScrollView Demo");
                            fragment = new Fragment_scrollview_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("ex_recycler")) {
                            Intent intent = new Intent(BaseScreen.this, ExpandableRecyclerView.class);
                            startActivity(intent);
                        }
                        if (position.equals("encrypt")) {
                            title.setText("Encrypt and Decrypt Demo");
                            fragment = new Fragment_encryptanddecrypt_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("patternlockview")) {
                            title.setText("Pattern Lockview Demo");
                            fragment = new Fragment_patternLockView_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("advancedwebview")) {
                            title.setText("Advanced Webview Demo");
                            fragment = new Fragment_AdvancedWebView_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Qrcode")) {
                            title.setText("Qr Code Scanner Demo");
                            fragment = new Fragment_qrscanner_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("pdf")) {
                            title.setText("Pdf Creator Demo");
                            fragment = new Fragment_pdfcreator_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("floatingmenu")) {
                            title.setText("Floating Menu Demo");
                            fragment = new Fragment_floatingmenu_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("text_speech")) {
                            title.setText("Text To Speech Demo");
                            fragment = new Fragment_text_speech_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("speech_text")) {
                            title.setText("Speech To Text Demo");
                            fragment = new Fragment_speech_text_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("Image_text")) {
                            Intent intent = new Intent(BaseScreen.this, Image_text_demo.class);
                            startActivity(intent);
                        }
                        if (position.equals("mapview")) {
                            title.setText("MapView with Current Location Demo");
                            fragment = new Fragment_image_server_ref();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }
                        if (position.equals("gifimage")) {
                            title.setText("Gif ImageView  Demo");
                            fragment = new Fragment_gifImageView_demo();
                            bundle.putString("params", "Alertdialog");
                            fragment.setArguments(bundle);
                            loadFragment(fragment);
                        }

                    }
                });


            }

            private void loadFragment(Fragment fragment) {
                FragmentManager fragmentManager = getSupportFragmentManager();
                FragmentTransaction transaction = fragmentManager.beginTransaction();
                transaction.replace(R.id.fragment, fragment);
                transaction.commit();
            }
        }


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_dialer_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "    <EditText\n" +
            "        android:id=\"@+id/et_text\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:inputType=\"number\"\n" +
            "        android:maxLength=\"10\"\n" +
            "        android:hint=\"Enter any text\"/>\n" +
            "    <Button\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:id=\"@+id/submit\"\n" +
            "        android:layout_marginTop=\"20dp\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Submit!\" />\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class fragment_bundle_passing_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2;
    TextView title2;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".Bundle_passing_demo\">\n" +
            "    <EditText\n" +
            "        android:id=\"@+id/et_text\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:hint=\"Enter any text\"/>\n" +
            "    <Button\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:id=\"@+id/submit\"\n" +
            "        android:layout_marginTop=\"20dp\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Submit!\" />\n" +
            "\n" +
            "</LinearLayout>";
    String code2="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".SecondActivity\">\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:id=\"@+id/text\"\n" +
            "        android:text=\"This is the Second Activity\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:layout_gravity=\"center\"/>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("activity_second.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.content.Intent;
import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.Toast;

import com.google.android.gms.ads.AdListener;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.AdSize;
import com.google.android.gms.ads.AdView;

import com.google.android.gms.ads.MobileAds;



public class MainActivity extends AppCompatActivity {
ImageView basic,library,advance,contactus,intro;
AdView mAdView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        intro=(ImageView)findViewById(R.id.intro) ;
        MobileAds.initialize(this, "ca-app-pub-5555883160769534~8402070138");
        AdView adView = new AdView(this);
        adView.setAdSize(AdSize.BANNER);
        adView.setAdUnitId("ca-app-pub-5555883160769534");
        mAdView = findViewById(R.id.adView);
        AdRequest adRequest = new AdRequest.Builder().build();
        mAdView.loadAd(adRequest);
        mAdView.setAdListener(new AdListener() {
            @Override
            public void onAdLoaded() {
                // Code to be executed when an ad finishes loading.
            }

            @Override
            public void onAdFailedToLoad(int errorCode) {
                // Code to be executed when an ad request fails.
            }

            @Override
            public void onAdOpened() {
                // Code to be executed when an ad opens an overlay that
                // covers the screen.
            }

            @Override
            public void onAdClicked() {
                // Code to be executed when the user clicks on an ad.
            }

            @Override
            public void onAdLeftApplication() {
                // Code to be executed when the user has left the app.
            }

            @Override
            public void onAdClosed() {
                // Code to be executed when the user is about to return
                // to the app after tapping on an ad.
            }
        });



        basic=(ImageView)findViewById(R.id.basic);
        library=(ImageView)findViewById(R.id.img_imp);
        advance=(ImageView)findViewById(R.id.advance);
        contactus=(ImageView)findViewById(R.id.contactus);
        basic.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent=new Intent(MainActivity.this,Basic.class);
                startActivity(intent);
            }
            });
        library.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent=new Intent(MainActivity.this,Library.class);
                startActivity(intent);
            }
        });
        advance.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent=new Intent(MainActivity.this,Advance.class);
                startActivity(intent);
            }
        });
        contactus.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent=new Intent(MainActivity.this,ContactUs.class);
                startActivity(intent);
            }
        });
        intro.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent=new Intent(MainActivity.this,Introduction.class);
                startActivity(intent);
            }
        });

    }

}


package com.Learning.com;

import android.Manifest;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Environment;
import android.provider.MediaStore;
import android.support.annotation.NonNull;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.FileProvider;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.util.SparseArray;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.vision.Frame;
import com.google.android.gms.vision.text.Text;
import com.google.android.gms.vision.text.TextBlock;
import com.google.android.gms.vision.text.TextRecognizer;

import java.io.File;
import java.io.FileNotFoundException;

public class Image_text_demo extends AppCompatActivity {
    private static final String LOG_TAG = "Text API";
    private static final int PHOTO_REQUEST = 10;
    private TextView scanResults;
    private Uri imageUri;
    private TextRecognizer detector;
    private static final int REQUEST_WRITE_PERMISSION = 20;
    private static final String SAVED_INSTANCE_URI = "uri";
    private static final String SAVED_INSTANCE_RESULT = "result";


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_image_text_demo);
        Button button = (Button) findViewById(R.id.button);
        scanResults = (TextView) findViewById(R.id.results);

        if (savedInstanceState != null) {
            imageUri = Uri.parse(savedInstanceState.getString(SAVED_INSTANCE_URI));
            scanResults.setText(savedInstanceState.getString(SAVED_INSTANCE_RESULT));
        }
        detector = new TextRecognizer.Builder(getApplicationContext()).build();
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ActivityCompat.requestPermissions(Image_text_demo.this, new
                        String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, REQUEST_WRITE_PERMISSION);
            }
        });
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        switch (requestCode) {
            case REQUEST_WRITE_PERMISSION:
                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                    takePicture();
                } else {
                    Toast.makeText(Image_text_demo.this, "Permission Denied!", Toast.LENGTH_SHORT).show();
                }
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == PHOTO_REQUEST && resultCode == RESULT_OK) {
            launchMediaScanIntent();
            try {
                Bitmap bitmap = decodeBitmapUri(this, imageUri);
                if (detector.isOperational() && bitmap != null) {
                    Frame frame = new Frame.Builder().setBitmap(bitmap).build();
                    SparseArray<TextBlock> textBlocks = detector.detect(frame);
                    String blocks = "";
                    String lines = "";
                    String words = "";
                    for (int index = 0; index < textBlocks.size(); index++) {
                        //extract scanned text blocks here
                        TextBlock tBlock = textBlocks.valueAt(index);
                        blocks = blocks + tBlock.getValue() + "\n" + "\n";
                        for (Text line : tBlock.getComponents()) {
                            //extract scanned text lines here
                            lines = lines + line.getValue() + "\n";
                            for (Text element : line.getComponents()) {
                                //extract scanned text words here
                                words = words + element.getValue() + ", ";
                            }
                        }
                    }
                    if (textBlocks.size() == 0) {
                        scanResults.setText("Scan Failed: Found nothing to scan");
                    } else {

                        scanResults.setText(scanResults.getText() + "Words: " + "\n");
                        scanResults.setText(scanResults.getText() + words + "\n");

                    }
                } else {
                    scanResults.setText("Could not set up the detector!");
                }
            } catch (Exception e) {
                Toast.makeText(this, "Failed to load Image", Toast.LENGTH_SHORT)
                        .show();
                Log.e(LOG_TAG, e.toString());
            }
        }
    }

    private void takePicture() {
        try {
            scanResults.setText("");
            Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
            File photo = new File(Environment.getExternalStorageDirectory(), "picture.jpg");
            imageUri = FileProvider.getUriForFile(Image_text_demo.this,
                    BuildConfig.APPLICATION_ID + ".provider", photo);
            intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);
            startActivityForResult(intent, PHOTO_REQUEST);
        }catch (Exception e){
            e.printStackTrace();
            Toast.makeText(this, "Please Check the permission in setting", Toast.LENGTH_SHORT).show();
        }

    }

    @Override
    protected void onSaveInstanceState(Bundle outState) {
        if (imageUri != null) {
            outState.putString(SAVED_INSTANCE_URI, imageUri.toString());
            outState.putString(SAVED_INSTANCE_RESULT, scanResults.getText().toString());
        }
        super.onSaveInstanceState(outState);
    }

    private void launchMediaScanIntent() {
        Intent mediaScanIntent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);
        mediaScanIntent.setData(imageUri);
        this.sendBroadcast(mediaScanIntent);
    }

    private Bitmap decodeBitmapUri(Context ctx, Uri uri) throws FileNotFoundException {
        int targetW = 600;
        int targetH = 600;
        BitmapFactory.Options bmOptions = new BitmapFactory.Options();
        bmOptions.inJustDecodeBounds = true;
        BitmapFactory.decodeStream(ctx.getContentResolver().openInputStream(uri), null, bmOptions);
        int photoW = bmOptions.outWidth;
        int photoH = bmOptions.outHeight;

        int scaleFactor = Math.min(photoW / targetW, photoH / targetH);
        bmOptions.inJustDecodeBounds = false;
        bmOptions.inSampleSize = scaleFactor;

        return BitmapFactory.decodeStream(ctx.getContentResolver()
                .openInputStream(uri), null, bmOptions);
    }
}

package com.Learning.com;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

import com.google.android.gms.ads.AdListener;
import com.google.android.gms.ads.AdRequest;
import com.google.android.gms.ads.InterstitialAd;
import com.google.android.gms.ads.MobileAds;

public class Library extends AppCompatActivity {
    InterstitialAd mInterstitialAd;
    int i=1;
    String[] items={"Volley","OKHTTP","Send Image To Server","Expandable Recycler View","Encrypt and decrypt","PatternLockView","Advanced WebView","Qr Code Scanner","PDF Creater","Floating Menu","Text To Speech","Speech To Text","Image to Text","GifImageView"};
    ListView listView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_library);
        MobileAds.initialize(this,"ca-app-pub-5555883160769534~2999857530");
        mInterstitialAd = new InterstitialAd(this);
        mInterstitialAd.setAdUnitId("ca-app-pub-5555883160769534/6116975464");
        listView=(ListView)findViewById(R.id.listview_lib);
        ArrayAdapter<String> adapter=new ArrayAdapter<String>(this,android.R.layout.simple_list_item_1,android.R.id.text1,items);
        listView.setAdapter(adapter);
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {

            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                mInterstitialAd.loadAd(new AdRequest.Builder().build());
                i=i+1;
                Log.i("num of clicks",""+i);
                if(i>1) {
                    if (i % 2 == 0) {

                        if (mInterstitialAd != null && mInterstitialAd.isLoaded()) {
                            mInterstitialAd.show();
                        } else {

                        }

                        if (mInterstitialAd.isLoaded()) {
                            mInterstitialAd.show();
                        } else {
                            Log.d("TAG", "The interstitial wasn't loaded yet.");

                        }

                        mInterstitialAd.setAdListener(new AdListener() {
                            @Override
                            public void onAdLoaded() {
                                // Code to be executed when an ad finishes loading.
                            }

                            @Override
                            public void onAdFailedToLoad(int errorCode) {
                                // Code to be executed when an ad request fails.
                            }

                            @Override
                            public void onAdOpened() {
                                // Code to be executed when the ad is displayed.
                            }

                            @Override
                            public void onAdClicked() {
                                // Code to be executed when the user clicks on an ad.
                            }

                            @Override
                            public void onAdLeftApplication() {
                                // Code to be executed when the user has left the app.
                            }

                            @Override
                            public void onAdClosed() {
                                // Code to be executed when the interstitial ad is closed.
                            }
                        });
                    }
                }
                switch (position){
                    case 0: {
                        Intent intent = new Intent(Library.this, BaseScreen.class);
                        intent.putExtra("title", "Volley");
                        startActivity(intent);
                    }
                    break;
                    case 1: {
                        Intent intent = new Intent(Library.this, BaseScreen.class);
                        intent.putExtra("title", "OKHTTP");
                        startActivity(intent);
                    }
                    break;
                    case 2:
                    {
                        Intent intent = new Intent(Library.this, BaseScreen.class);
                        intent.putExtra("title", "sendImageToServer");
                        startActivity(intent);
                    }
                    break;
                    case 3:
                    {
                        Intent intent = new Intent(Library.this, BaseScreen.class);
                        intent.putExtra("title", "ex_recycler");
                        startActivity(intent);
                    }
                    break;
                    case 4:
                    {
                        Intent intent = new Intent(Library.this, BaseScreen.class);
                        intent.putExtra("title", "encrypt");
                        startActivity(intent);
                    }
                    break;
                    case 5:
                    {
                        Intent intent = new Intent(Library.this, BaseScreen.class);
                        intent.putExtra("title", "patternlockview");
                        startActivity(intent);
                    }
                    break;
                    case 6:
                    {
                        Intent intent = new Intent(Library.this, BaseScreen.class);
                        intent.putExtra("title", "advancedwebview");
                        startActivity(intent);
                    }
                    break;

                    case 7:
                    {
                        Intent intent = new Intent(Library.this, BaseScreen.class);
                        intent.putExtra("title", "Qrcode");
                        startActivity(intent);
                    }
                    break;
                    case 8:
                    {
                        Intent intent = new Intent(Library.this, BaseScreen.class);
                        intent.putExtra("title", "pdf");
                        startActivity(intent);
                    }
                    break;
                    case 9:
                    {
                        Intent intent = new Intent(Library.this, BaseScreen.class);
                        intent.putExtra("title", "floatingmenu");
                        startActivity(intent);
                    }
                    break;
                    case 10:
                    {
                        Intent intent = new Intent(Library.this, BaseScreen.class);
                        intent.putExtra("title", "text_speech");
                        startActivity(intent);
                    }
                    break;
                    case 11:
                    {
                        Intent intent = new Intent(Library.this, BaseScreen.class);
                        intent.putExtra("title", "speech_text");
                        startActivity(intent);
                    }
                    break;
                    case 12:
                    {
                        Intent intent = new Intent(Library.this, BaseScreen.class);
                        intent.putExtra("title", "Image_text");
                        startActivity(intent);
                    }
                    break;
                    case 13:
                    {
                        Intent intent = new Intent(Library.this, BaseScreen.class);
                        intent.putExtra("title", "gifimage");
                        startActivity(intent);
                    }
                    break;

                }
            }
        });

    }
}


package com.Learning.com;

import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterViewFlipper;
import android.widget.BaseAdapter;
import android.widget.CompoundButton;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.ToggleButton;

public class Fragment_viewflipper_demo extends Fragment {
    AdapterViewFlipper adapterViewFlipper;
    int[] images = {
            R.drawable.img1,
            R.drawable.img2,
            R.drawable.img1,
            R.drawable.img2,
            R.drawable.img1,

    };
    String[] text = {
            "ATOMIC ABSROPTION SPECTROSCOPY",
            "FT-IR SPECTROSCOPY",
            "GASS CHROMATOGRAPHY",
            "HIGH PERFORMANCE LIQUID CHROMATOGRAPHY-MASS SPECTROSCOPY",
            "UV-VIS SPECTROSCOPY",
    };
    ToggleButton toggleButton;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_viewflipper_demo, container, false);

        adapterViewFlipper = (AdapterViewFlipper) view.findViewById(R.id.adapterViewFlipper_phy);
        CusAdap cusAdap = new CusAdap(getActivity(), images, text);
        adapterViewFlipper.setAdapter(cusAdap);
        adapterViewFlipper.setFlipInterval(3000);
        adapterViewFlipper.setAutoStart(true);

        return view;
    }

    class CusAdap extends BaseAdapter {
        Context context;
        int[] images;
        String[] s_text;
        String[] s_head;
        LayoutInflater inflater;

        public CusAdap(Context applicationContext, int[] images, String[] s_text) {
            this.context = applicationContext;
            this.images = images;
            this.s_text = s_text;
            this.s_head = s_head;
            inflater = (LayoutInflater.from(applicationContext));
        }

        @Override
        public int getCount() {
            return images.length;
        }

        @Override
        public Object getItem(int position) {
            return null;
        }

        @Override
        public long getItemId(int position) {
            return 0;
        }

        @Override
        public View getView(int position, View view, ViewGroup parent) {
            view = inflater.inflate(R.layout.adapter_list_item, null);
            ImageView image = (ImageView) view.findViewById(R.id.image);
            TextView text = (TextView) view.findViewById(R.id.text_slider);

            text.setText(s_text[position]);
            image.setImageResource(images[position]);

            return view;
        }


    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_animation_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2,mcodeview3,mcodeview4,mcodeview5,mcodeview6,mcodeview7,mcodeview8,mcodeview9,mcodeview10,mcodeview11,mcodeview12,mcodeview13;
    TextView title2,title3,title4,title5,title6,title7,title8,title9,title10,title11,title12,title13;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"fragment1\"\n" +
            "        android:id=\"@+id/f1\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"80dp\"/>\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"fragment2\"\n" +
            "        android:id=\"@+id/f2\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"10dp\"/>\n" +
            "    <fragment\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"match_parent\"\n" +
            "        android:id=\"@+id/fragment\"\n" +
            "        tools:layout=\"@layout/fragment_one\"\n" +
            "        android:name=\"com.learning.fragment.fragment_one_demo\"/>\n" +
            "</LinearLayout>";
    String code2="<set xmlns:android=\"http://schemas.android.com/apk/res/android\">\n" +
            "    <alpha android:fromAlpha=\"0.0\"\n" +
            "        android:toAlpha=\"1.0\"\n" +
            "        android:interpolator=\"@android:anim/accelerate_interpolator\"\n" +
            "        android:duration=\"600\"\n" +
            "        android:repeatMode=\"reverse\"\n" +
            "        android:repeatCount=\"infinite\"/>\n" +
            "</set>";
    String code3="<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:fillAfter=\"true\"\n" +
            "    android:interpolator=\"@android:anim/bounce_interpolator\">\n" +
            "\n" +
            "    <scale\n" +
            "        android:duration=\"500\"\n" +
            "        android:fromXScale=\"1.0\"\n" +
            "        android:fromYScale=\"0.0\"\n" +
            "        android:toXScale=\"1.0\"\n" +
            "        android:toYScale=\"1.0\" />\n" +
            "\n" +
            "</set>";
    String code4="<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:fillAfter=\"true\" >\n" +
            "\n" +
            "    <alpha\n" +
            "        android:duration=\"1000\"\n" +
            "        android:fromAlpha=\"0.0\"\n" +
            "        android:interpolator=\"@android:anim/accelerate_interpolator\"\n" +
            "        android:toAlpha=\"1.0\" />\n" +
            "\n" +
            "</set>";
    String code5="<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:fillAfter=\"true\" >\n" +
            "\n" +
            "    <alpha\n" +
            "        android:duration=\"1000\"\n" +
            "        android:fromAlpha=\"1.0\"\n" +
            "        android:interpolator=\"@android:anim/accelerate_interpolator\"\n" +
            "        android:toAlpha=\"0.0\" />\n" +
            "\n" +
            "</set>";
    String code6="<set\n" +
            "    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:interpolator=\"@android:anim/linear_interpolator\"\n" +
            "    android:fillAfter=\"true\">\n" +
            "\n" +
            "    <translate\n" +
            "        android:fromXDelta=\"0%p\"\n" +
            "        android:toXDelta=\"75%p\"\n" +
            "        android:duration=\"800\" />\n" +
            "</set>";
    String code7="<set xmlns:android=\"http://schemas.android.com/apk/res/android\">\n" +
            "    <rotate android:fromDegrees=\"0\"\n" +
            "        android:toDegrees=\"360\"\n" +
            "        android:pivotX=\"50%\"\n" +
            "        android:pivotY=\"50%\"\n" +
            "        android:duration=\"600\"\n" +
            "        android:repeatMode=\"restart\"\n" +
            "        android:repeatCount=\"infinite\"\n" +
            "        android:interpolator=\"@android:anim/cycle_interpolator\"/>\n" +
            "\n" +
            "</set>";
    String code8="<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:fillAfter=\"true\"\n" +
            "    android:interpolator=\"@android:anim/linear_interpolator\" >\n" +
            "\n" +
            "\n" +
            "    <!-- Move -->\n" +
            "    <translate\n" +
            "        android:duration=\"800\"\n" +
            "        android:fillAfter=\"true\"\n" +
            "        android:fromXDelta=\"0%p\"\n" +
            "        android:startOffset=\"300\"\n" +
            "        android:toXDelta=\"75%p\" />\n" +
            "    <translate\n" +
            "        android:duration=\"800\"\n" +
            "        android:fillAfter=\"true\"\n" +
            "        android:fromYDelta=\"0%p\"\n" +
            "        android:startOffset=\"1100\"\n" +
            "        android:toYDelta=\"70%p\" />\n" +
            "    <translate\n" +
            "        android:duration=\"800\"\n" +
            "        android:fillAfter=\"true\"\n" +
            "        android:fromXDelta=\"0%p\"\n" +
            "        android:startOffset=\"1900\"\n" +
            "        android:toXDelta=\"-75%p\" />\n" +
            "    <translate\n" +
            "        android:duration=\"800\"\n" +
            "        android:fillAfter=\"true\"\n" +
            "        android:fromYDelta=\"0%p\"\n" +
            "        android:startOffset=\"2700\"\n" +
            "        android:toYDelta=\"-70%p\" />\n" +
            "\n" +
            "    <!-- Rotate 360 degrees -->\n" +
            "    <rotate\n" +
            "        android:duration=\"1000\"\n" +
            "        android:fromDegrees=\"0\"\n" +
            "        android:interpolator=\"@android:anim/cycle_interpolator\"\n" +
            "        android:pivotX=\"50%\"\n" +
            "        android:pivotY=\"50%\"\n" +
            "        android:startOffset=\"3800\"\n" +
            "        android:repeatCount=\"infinite\"\n" +
            "        android:repeatMode=\"restart\"\n" +
            "        android:toDegrees=\"360\" />\n" +
            "\n" +
            "</set>";
    String code9="<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:fillAfter=\"true\">\n" +
            "\n" +
            "    <scale\n" +
            "        android:duration=\"500\"\n" +
            "        android:fromXScale=\"1.0\"\n" +
            "        android:fromYScale=\"0.0\"\n" +
            "        android:toXScale=\"1.0\"\n" +
            "        android:toYScale=\"1.0\" />\n" +
            "\n" +
            "</set>";
    String code10="<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:fillAfter=\"true\" >\n" +
            "\n" +
            "    <scale\n" +
            "        android:duration=\"500\"\n" +
            "        android:fromXScale=\"1.0\"\n" +
            "        android:fromYScale=\"1.0\"\n" +
            "        android:interpolator=\"@android:anim/linear_interpolator\"\n" +
            "        android:toXScale=\"1.0\"\n" +
            "        android:toYScale=\"0.0\" />\n" +
            "\n" +
            "</set>";
    String code11="<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:fillAfter=\"true\"\n" +
            "    android:interpolator=\"@android:anim/linear_interpolator\" >\n" +
            "\n" +
            "\n" +
            "    <!-- Move -->\n" +
            "    <scale\n" +
            "        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "        android:duration=\"4000\"\n" +
            "        android:fromXScale=\"1\"\n" +
            "        android:fromYScale=\"1\"\n" +
            "        android:pivotX=\"50%\"\n" +
            "        android:pivotY=\"50%\"\n" +
            "        android:toXScale=\"4\"\n" +
            "        android:toYScale=\"4\" >\n" +
            "    </scale>\n" +
            "\n" +
            "    <!-- Rotate 180 degrees -->\n" +
            "    <rotate\n" +
            "        android:duration=\"500\"\n" +
            "        android:fromDegrees=\"0\"\n" +
            "        android:pivotX=\"50%\"\n" +
            "        android:pivotY=\"50%\"\n" +
            "        android:repeatCount=\"infinite\"\n" +
            "        android:repeatMode=\"restart\"\n" +
            "        android:toDegrees=\"360\" />\n" +
            "\n" +
            "</set>";
    String code12="<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:fillAfter=\"true\" >\n" +
            "\n" +
            "    <scale\n" +
            "        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "        android:duration=\"1000\"\n" +
            "        android:fromXScale=\"1\"\n" +
            "        android:fromYScale=\"1\"\n" +
            "        android:pivotX=\"50%\"\n" +
            "        android:pivotY=\"50%\"\n" +
            "        android:toXScale=\"3\"\n" +
            "        android:toYScale=\"3\" >\n" +
            "    </scale>\n" +
            "\n" +
            "</set>";
    String code13="<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:fillAfter=\"true\" >\n" +
            "\n" +
            "    <scale\n" +
            "        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "        android:duration=\"1000\"\n" +
            "        android:fromXScale=\"1.0\"\n" +
            "        android:fromYScale=\"1.0\"\n" +
            "        android:pivotX=\"50%\"\n" +
            "        android:pivotY=\"50%\"\n" +
            "        android:toXScale=\"0.5\"\n" +
            "        android:toYScale=\"0.5\" >\n" +
            "    </scale>\n" +
            "\n" +
            "</set>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.anim_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        mcodeview3 = (CodeView)view.findViewById(R.id.codeView3);
        mcodeview4 = (CodeView)view.findViewById(R.id.codeView4);
        mcodeview5 = (CodeView)view.findViewById(R.id.codeView5);
        mcodeview6 = (CodeView)view.findViewById(R.id.codeView6);
        mcodeview7 = (CodeView)view.findViewById(R.id.codeView7);
        mcodeview8 = (CodeView)view.findViewById(R.id.codeView8);
        mcodeview9 = (CodeView)view.findViewById(R.id.codeView9);
        mcodeview10 = (CodeView)view.findViewById(R.id.codeView10);
        mcodeview11 = (CodeView)view.findViewById(R.id.codeView11);
        mcodeview12 = (CodeView)view.findViewById(R.id.codeView12);
        mcodeview13 = (CodeView)view.findViewById(R.id.codeView13);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("anim/anim_blink.xml");
        title3=(TextView)view.findViewById(R.id.title3);
        title3.setText("anim/anim_bounce.xml");
        title4=(TextView)view.findViewById(R.id.title4);
        title4.setText("anim/anim_fade_in.xml");
        title5=(TextView)view.findViewById(R.id.title5);
        title5.setText("anim/anim_fade_out.xml");
        title6=(TextView)view.findViewById(R.id.title6);
        title6.setText("anim/anim_move.xml");
        title7=(TextView)view.findViewById(R.id.title7);
        title7.setText("anim/anim_rotate.xml");
        title8=(TextView)view.findViewById(R.id.title8);
        title8.setText("anim/anim_sequential.xml");
        title9=(TextView)view.findViewById(R.id.title9);
        title9.setText("anim/anim_slide_down.xml");
        title10=(TextView)view.findViewById(R.id.title10);
        title10.setText("anim/anim_slide_up.xml");
        title11=(TextView)view.findViewById(R.id.title11);
        title11.setText("anim/anim_together.xml");
        title12=(TextView)view.findViewById(R.id.title12);
        title12.setText("anim/zoom_in.xml");
        title13=(TextView)view.findViewById(R.id.title13);
        title13.setText("anim/zoom_out.xml");

        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview3.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code3)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview3.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code4)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview4.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code5)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview5.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code6)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview6.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code7)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview7.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code8)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview8.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code9)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview9.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code10)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview10.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code11)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview11.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code12)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview12.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code13)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview13.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code3)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();

        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Spinner;
import android.widget.Toast;

public class Fragment_spinner_demo extends Fragment {
    Spinner spinner;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_spinner_demo, container, false);
        spinner=(Spinner)view.findViewById(R.id.spinner);
        String[]dept={"Alpha","Beta","Cupcake","Donut","Eclair"};
        ArrayAdapter<String> adapter=new ArrayAdapter<String>(getActivity(),android.R.layout.simple_spinner_dropdown_item,dept);
        spinner.setAdapter(adapter);
        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                switch (position){
                    case 0:
                        Toast.makeText(getActivity(), "Alpha", Toast.LENGTH_SHORT).show();
                        break;
                    case 1:
                        Toast.makeText(getActivity(), "Beta", Toast.LENGTH_SHORT).show();

                        break;
                    case 2:
                        Toast.makeText(getActivity(), "Cupcake", Toast.LENGTH_SHORT).show();
                        break;
                    case 3:
                        Toast.makeText(getActivity(), "Donut", Toast.LENGTH_SHORT).show();
                        break;
                    case 4:
                        Toast.makeText(getActivity(), "Eclair", Toast.LENGTH_SHORT).show();
                        break;

                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {

            }
        });
        return view;
    }
}


package com.Learning.com;

import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

public class Fragment_Background_services_demo extends Fragment {
    Button start,stop;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_background_services_demo, container, false);
        start=(Button)view.findViewById(R.id.start);
        stop=(Button)view.findViewById(R.id.stop);
        start.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                getActivity().startService(new Intent(getActivity().getBaseContext(),BackgroundServices.class));

            }
        });
        stop.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                getActivity().stopService(new Intent(getActivity().getBaseContext(),BackgroundServices.class));
            }
        });
        return view;
    }
}


package com.Learning.com;

import android.support.v7.widget.CardView;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import java.util.List;

public class RecyclerViewAdapter extends RecyclerView.Adapter<RecyclerViewAdapter.Viewholder> {
    List<Ver>vers;
    RecyclerViewAdapter(List<Ver>vers) {

        this.vers = vers;
    }
    public static class Viewholder extends RecyclerView.ViewHolder{
        CardView cardView;
        TextView textView;
        ImageView imageView;
        Viewholder(View itemView){
            super(itemView);
            cardView=(CardView)itemView.findViewById(R.id.cardview_odd);
            textView=(TextView)itemView.findViewById(R.id.name);
            imageView=(ImageView)itemView.findViewById(R.id.user);


        }
    }
    @Override
    public RecyclerViewAdapter.Viewholder onCreateViewHolder(ViewGroup parent, int viewType) {
        View view= LayoutInflater.from(parent.getContext()).inflate(R.layout.custom_layout_recycler_view,parent,false);
        Viewholder viewholder=new Viewholder(view);
        return viewholder;
    }

    @Override
    public void onBindViewHolder(RecyclerViewAdapter.Viewholder holder, int position) {
        holder.textView.setText(vers.get(position).name);
        holder.imageView.setImageResource(vers.get(position).logo);
    }

    @Override
    public int getItemCount() {
        return vers.size();
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_Image_text_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <ImageView\n" +
            "        android:id=\"@+id/imageView\"\n" +
            "        android:layout_width=\"200dp\"\n" +
            "        android:layout_height=\"200dp\"\n" +
            "        android:layout_marginTop=\"16dp\"\n" +
            "        app:layout_constraintLeft_toLeftOf=\"parent\"\n" +
            "        app:layout_constraintRight_toRightOf=\"parent\"\n" +
            "        app:layout_constraintTop_toTopOf=\"parent\"\n" +
            "        app:srcCompat=\"@mipmap/ic_launcher\"\n" +
            "        tools:layout_constraintLeft_creator=\"1\"\n" +
            "        tools:layout_constraintRight_creator=\"1\"/>\n" +
            "\n" +
            "    <Button\n" +
            "        android:id=\"@+id/button\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginBottom=\"8dp\"\n" +
            "        android:text=\"Scan Text\"\n" +
            "        app:layout_constraintBottom_toBottomOf=\"parent\"\n" +
            "        app:layout_constraintLeft_toLeftOf=\"parent\"\n" +
            "        app:layout_constraintRight_toRightOf=\"parent\"\n" +
            "        tools:layout_constraintLeft_creator=\"1\"\n" +
            "        tools:layout_constraintRight_creator=\"1\"\n" +
            "        />\n" +
            "\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/textView\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginTop=\"40dp\"\n" +
            "        android:text=\"Scan Results:\"\n" +
            "        android:textAllCaps=\"false\"\n" +
            "        android:textStyle=\"normal|bold\"\n" +
            "        app:layout_constraintLeft_toLeftOf=\"parent\"\n" +
            "        app:layout_constraintRight_toRightOf=\"parent\"\n" +
            "        app:layout_constraintTop_toBottomOf=\"@+id/imageView\"\n" +
            "        tools:layout_constraintLeft_creator=\"1\"\n" +
            "        tools:layout_constraintRight_creator=\"1\"/>\n" +
            "\n" +
            "    <ScrollView\n" +
            "        android:layout_width=\"0dp\"\n" +
            "        android:layout_height=\"0dp\"\n" +
            "        android:layout_marginTop=\"8dp\"\n" +
            "        android:paddingLeft=\"5dp\"\n" +
            "        android:paddingRight=\"5dp\"\n" +
            "        app:layout_constraintBottom_toBottomOf=\"parent\"\n" +
            "        app:layout_constraintHorizontal_bias=\"1.0\"\n" +
            "        app:layout_constraintLeft_toLeftOf=\"parent\"\n" +
            "        app:layout_constraintRight_toRightOf=\"parent\"\n" +
            "        app:layout_constraintTop_toBottomOf=\"@+id/textView\"\n" +
            "        tools:layout_constraintTop_creator=\"1\"\n" +
            "        tools:layout_constraintRight_creator=\"1\"\n" +
            "        tools:layout_constraintBottom_creator=\"1\"\n" +
            "        tools:layout_constraintLeft_creator=\"1\">\n" +
            "\n" +
            "        <LinearLayout\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:orientation=\"vertical\">\n" +
            "\n" +
            "            <TextView\n" +
            "                android:id=\"@+id/results\"\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:layout_marginTop=\"8dp\"\n" +
            "                app:layout_constraintLeft_toLeftOf=\"parent\"\n" +
            "                app:layout_constraintRight_toRightOf=\"parent\"\n" +
            "                tools:layout_constraintLeft_creator=\"1\"\n" +
            "                tools:layout_constraintRight_creator=\"1\"\n" +
            "                tools:layout_constraintTop_creator=\"1\"/>\n" +
            "        </LinearLayout>\n" +
            "    </ScrollView>\n" +
            "\n" +
            "</android.support.constraint.ConstraintLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_tabbed_activity_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2;
    TextView title2;
    String Code=" <android.support.design.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:id=\"@+id/main_content\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:fitsSystemWindows=\"true\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <android.support.design.widget.AppBarLayout\n" +
            "        android:id=\"@+id/appbar\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:paddingTop=\"@dimen/appbar_padding_top\"\n" +
            "        android:theme=\"@style/AppTheme.AppBarOverlay\">\n" +
            "\n" +
            "        <android.support.v7.widget.Toolbar\n" +
            "            android:id=\"@+id/toolbar\"\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"?attr/actionBarSize\"\n" +
            "            android:layout_weight=\"1\"\n" +
            "            android:background=\"?attr/colorPrimary\"\n" +
            "            app:layout_scrollFlags=\"scroll|enterAlways\"\n" +
            "            app:popupTheme=\"@style/AppTheme.PopupOverlay\"\n" +
            "            app:title=\"@string/app_name\">\n" +
            "\n" +
            "        </android.support.v7.widget.Toolbar>\n" +
            "\n" +
            "    </android.support.design.widget.AppBarLayout>\n" +
            "\n" +
            "    <android.support.v4.view.ViewPager\n" +
            "        android:id=\"@+id/container\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"match_parent\"\n" +
            "        app:layout_behavior=\"@string/appbar_scrolling_view_behavior\" />\n" +
            "\n" +
            "    <android.support.design.widget.FloatingActionButton\n" +
            "        android:id=\"@+id/fab\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_gravity=\"end|bottom\"\n" +
            "        android:layout_margin=\"@dimen/fab_margin\"\n" +
            "        app:srcCompat=\"@android:drawable/ic_dialog_email\" />\n" +
            "\n" +
            "</android.support.design.widget.CoordinatorLayout>";
    String code2="<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:id=\"@+id/constraintLayout\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    tools:context=\".MainActivity$PlaceholderFragment\">\n" +
            "\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/section_label\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginStart=\"@dimen/activity_horizontal_margin\"\n" +
            "        android:layout_marginTop=\"@dimen/activity_vertical_margin\"\n" +
            "        android:layout_marginEnd=\"@dimen/activity_horizontal_margin\"\n" +
            "        android:layout_marginBottom=\"@dimen/activity_vertical_margin\"\n" +
            "        app:layout_constraintLeft_toLeftOf=\"parent\"\n" +
            "        app:layout_constraintTop_toTopOf=\"@+id/constraintLayout\"\n" +
            "        tools:layout_constraintLeft_creator=\"1\"\n" +
            "        tools:layout_constraintTop_creator=\"1\" />\n" +
            "\n" +
            "</android.support.constraint.ConstraintLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("fragment_main.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_Navigationdrawer_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2,mcodeview3,mcodeview4,mcodeview5,mcodeview6;
    TextView title2,title3,title4,title5,title6;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:background=\"@android:color/white\"\n" +
            "    android:padding=\"12dp\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "\n" +
            "    <EditText\n" +
            "        android:id=\"@+id/editText\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_centerVertical=\"true\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:hint=\"You will see input here\"\n" +
            "        android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Large\" />\n" +
            "\n" +
            "\n" +
            "    <ImageButton\n" +
            "        android:id=\"@+id/button\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"30dp\"\n" +
            "        android:background=\"@drawable/button_background\" />\n" +
            "\n" +
            "</LinearLayout>";
    String code2="<resources>\n" +
            "\n" +
            "    <color name=\"colorPrimary\">#5aa184</color>\n" +
            "    <color name=\"colorPrimaryDark\">#487b66</color>\n" +
            "    <color name=\"colorAccent\">#2b644c</color>\n" +
            "\n" +
            "    <color name=\"colorButton\">#3d5f51</color>\n" +
            "    <color name=\"colorButtonActive\">#1bea95</color>\n" +
            "</resources>\n";
    String code3="<resources>\n" +
            "    <string name=\"app_name\">SpeechToText</string>\n" +
            "    <string name=\"speech_prompt\">Say something&#8230;</string>\n" +
            "    <string name=\"speech_not_supported\">Sorry! Your device doesn\\'t support speech input</string>\n" +
            "    <string name=\"tap_on_mic\">Tap on mic to speak</string>\n" +
            "</resources>\n";
    String code4="<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n" +
            "\n" +
            "    <item>\n" +
            "        <shape android:shape=\"oval\">\n" +
            "            <solid android:color=\"@color/colorButtonActive\" />\n" +
            "        </shape>\n" +
            "    </item>\n" +
            "\n" +
            "    <item\n" +
            "        android:bottom=\"20dp\"\n" +
            "        android:drawable=\"@drawable/icon_record\"\n" +
            "        android:left=\"20dp\"\n" +
            "        android:right=\"20dp\"\n" +
            "        android:top=\"20dp\" />\n" +
            "\n" +
            "</layer-list>";
    String code5="<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    tools:showIn=\"navigation_view\">\n" +
            "\n" +
            "    <group android:checkableBehavior=\"single\">\n" +
            "        <item\n" +
            "            android:id=\"@+id/nav_camera\"\n" +
            "            android:icon=\"@drawable/ic_menu_camera\"\n" +
            "            android:title=\"Import\" />\n" +
            "        <item\n" +
            "            android:id=\"@+id/nav_gallery\"\n" +
            "            android:icon=\"@drawable/ic_menu_gallery\"\n" +
            "            android:title=\"Gallery\" />\n" +
            "        <item\n" +
            "            android:id=\"@+id/nav_slideshow\"\n" +
            "            android:icon=\"@drawable/ic_menu_slideshow\"\n" +
            "            android:title=\"Slideshow\" />\n" +
            "        <item\n" +
            "            android:id=\"@+id/nav_manage\"\n" +
            "            android:icon=\"@drawable/ic_menu_manage\"\n" +
            "            android:title=\"Tools\" />\n" +
            "    </group>\n" +
            "\n" +
            "    <item android:title=\"Communicate\">\n" +
            "        <menu>\n" +
            "            <item\n" +
            "                android:id=\"@+id/nav_share\"\n" +
            "                android:icon=\"@drawable/ic_menu_share\"\n" +
            "                android:title=\"Share\" />\n" +
            "            <item\n" +
            "                android:id=\"@+id/nav_send\"\n" +
            "                android:icon=\"@drawable/ic_menu_send\"\n" +
            "                android:title=\"Send\" />\n" +
            "        </menu>\n" +
            "    </item>\n" +
            "\n" +
            "</menu>\n";
    String code6="<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n" +
            "    <item\n" +
            "        android:id=\"@+id/action_settings\"\n" +
            "        android:orderInCategory=\"100\"\n" +
            "        android:title=\"@string/action_settings\"\n" +
            "        app:showAsAction=\"never\" />\n" +
            "</menu>\n";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.six_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        mcodeview3 = (CodeView)view.findViewById(R.id.codeView3);
        mcodeview4 = (CodeView)view.findViewById(R.id.codeView4);
        mcodeview5 = (CodeView)view.findViewById(R.id.codeView5);
        mcodeview6 = (CodeView)view.findViewById(R.id.codeView6);
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy3=(Button)view.findViewById(R.id.copy3);
        copy3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code3);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy4=(Button)view.findViewById(R.id.copy4);
        copy4.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code4);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy5=(Button)view.findViewById(R.id.copy5);
        copy5.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code5);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy6=(Button)view.findViewById(R.id.copy6);
        copy6.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code6);
                clipboard.setPrimaryClip(clip);
            }
        });
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("appbar_main.xml");
        title3=(TextView)view.findViewById(R.id.title3);
        title3.setText("content_maing.xml");
        title4=(TextView)view.findViewById(R.id.title4);
        title4.setText("nav_header_main.xml");
        title5=(TextView)view.findViewById(R.id.title5);
        title5.setText("Menu/activity_main_drawer.xml");
        title6=(TextView)view.findViewById(R.id.title6);
        title6.setText("Menu/main.xml");


        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview3.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code3)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview4.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code4)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview5.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code5)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview6.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code6)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}





package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioGroup;
import android.widget.Toast;

import com.andrognito.patternlockview.PatternLockView;
import com.andrognito.patternlockview.listener.PatternLockViewListener;
import com.andrognito.patternlockview.utils.PatternLockUtils;

import java.util.List;

public class Fragment_patternLockView_demo extends Fragment {
    PatternLockView patternLockView;
    RadioGroup radioGroup;
    String savedpattern="";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_pattern_lockview_demo, container, false);
        radioGroup=(RadioGroup)view.findViewById(R.id.radiogroup);
        patternLockView=(PatternLockView)view.findViewById(R.id.lockview);
        patternLockView.addPatternLockListener(new PatternLockViewListener() {
            @Override
            public void onStarted() {

            }

            @Override
            public void onProgress(List<PatternLockView.Dot> progressPattern) {

            }

            @Override
            public void onComplete(List<PatternLockView.Dot> pattern) {
                if(radioGroup.getCheckedRadioButtonId()==R.id.set){
                    savedpattern= PatternLockUtils.patternToString(patternLockView,pattern);
                    Toast.makeText(getActivity(), "patten saved", Toast.LENGTH_SHORT).show();
                }else {
                    if (PatternLockUtils.patternToString(patternLockView, pattern).equals(savedpattern))
                    {
                        Toast.makeText(getActivity(), "correct pattern", Toast.LENGTH_SHORT).show();
                    }else {
                        Toast.makeText(getActivity(), "Incorrect pattern", Toast.LENGTH_SHORT).show();
                    }
                }
            }

            @Override
            public void onCleared() {

            }
        });
        return view;
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.Toast;

public class Fragment_checkbox_demo extends Fragment {
    CheckBox checkBox;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_checkbox_demo, container, false);
        checkBox=(CheckBox)view.findViewById(R.id.checkbox);
        checkBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if(checkBox.isChecked()==true){
                    Toast.makeText(getActivity(), "Check Box is Checked", Toast.LENGTH_SHORT).show();
                }
            }
        });
        return view;
    }



}

package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_curve_edge_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "Button curve;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        curve=(Button)findViewById(R.id.curve);\n" +
            "        curve.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                Toast.makeText(MainActivity.this, \"This is a Curve Edge Button\", Toast.LENGTH_SHORT).show();\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_Alert_dialog_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.content.Context;\n" +
            "import android.content.DialogInterface;\n" +
            "import android.content.Intent;\n" +
            "import android.support.v7.app.AlertDialog;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    Button click_alert;\n" +
            "    Context context = this;\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        click_alert = (Button) findViewById(R.id.click_alert);\n" +
            "        click_alert.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "\n" +
            "                final AlertDialog.Builder builder = new AlertDialog.Builder(context);\n" +
            "                builder.setCancelable(false);\n" +
            "                builder.setTitle(\"Exit\");\n" +
            "                builder.setMessage(\"Are you want to Logout?\");\n" +
            "                builder.setPositiveButton(\"YES\", new DialogInterface.OnClickListener() {\n" +
            "                    @Override\n" +
            "                    public void onClick(DialogInterface dialog, int which) {\n" +
            "\n" +
            "                        Toast.makeText(context, \"Alert yes clicked\", Toast.LENGTH_SHORT).show();\n" +
            "                    }\n" +
            "                });\n" +
            "                builder.setNegativeButton(\"NO\", new DialogInterface.OnClickListener() {\n" +
            "                    @Override\n" +
            "                    public void onClick(DialogInterface dialog, int which) {\n" +
            "                        dialog.dismiss();\n" +
            "                    }\n" +
            "                });\n" +
            "                builder.create().show();\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}\n"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.TextView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_simple_intent_java  extends Fragment {
    TextView Title2;
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.content.Intent;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    Button clickbutton;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        clickbutton=(Button)findViewById(R.id.click);\n" +
            "        clickbutton.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                Intent intent=new Intent(SimpleIntent_demo.this,SecondActivity.class);\n" +
            "                //SecondActivity(replace with your activity...\n" +
            "                startActivity(intent);\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}\n"
            ;
    String code2="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "public class SecondActivity extends AppCompatActivity {\n" +
            "TextView text;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_second);\n" +
            "        text=(TextView)findViewById(R.id.text);\n" +
            "\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        WebView webview2 = (WebView)view.findViewById(R.id.webview2);
        Title2=(TextView)view.findViewById(R.id.title2);
        Title2.setText("SecondActivity.Java");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(code2)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview2);
        return view;
    }



}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_RadioButton_and_Radiogroup_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <RadioGroup\n" +
            "        android:id=\"@+id/rdgrp\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:layout_gravity=\"center\">\n" +
            "        <RadioButton\n" +
            "            android:id=\"@+id/rb1\"\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:text=\"Noughat\"/>\n" +
            "        <RadioButton\n" +
            "            android:id=\"@+id/rb2\"\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:text=\"Oreo\"/>\n" +
            "        <RadioButton\n" +
            "            android:id=\"@+id/rb3\"\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:text=\"Pie\"/>\n" +
            "\n" +
            "    </RadioGroup>\n" +
            "\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });

        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_json_ref extends Fragment {
    TextView text,head,content,text_m,head_m,content_m;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text=(TextView)view.findViewById(R.id.text_implementation);
        head=(TextView)view.findViewById(R.id.head_implementation);
        content=(TextView)view.findViewById(R.id.content_implementation);
        text_m=(TextView)view.findViewById(R.id.text_manifest);
        head_m=(TextView)view.findViewById(R.id.head_manifest);
        content_m=(TextView)view.findViewById(R.id.content_manifest);
        text_m.setVisibility(View.VISIBLE);
        head_m.setVisibility(View.VISIBLE);
        content_m.setVisibility(View.VISIBLE);



        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n"+
                "After Implementation sync now to implement the content");
        content.setText("implementation 'com.android.volley:volley:1.1.1'");


        head_m.setText("Manifest Guide");

        text_m.setText("Click-->app-->Manifest-->(add permission)\n"+
                "Add Permission before application tag:-(top of <application)");
        content_m.setText("<uses-permission android:name=\"android.permission.INTERNET\" />");

        return view;
    }



}




package com.Learning.com;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class DatabaseHelper extends SQLiteOpenHelper {
    public static final String DATABASE_NAME = "Student.db";
    public static final String TABLE_NAME = "student_table";
    public static final String COL_1 = "ID";
    public static final String COL_2 = "NAME";
    public static final String COL_3 = "SURNAME";
    public static final String COL_4 = "MARKS";

    public DatabaseHelper(Context context) {
        super(context, DATABASE_NAME, null, 1);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL("create table " + TABLE_NAME +" (ID INTEGER PRIMARY KEY AUTOINCREMENT,NAME TEXT,SURNAME TEXT,MARKS INTEGER)");
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS "+TABLE_NAME);
        onCreate(db);
    }

    public boolean insertData(String name,String surname,String marks) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put(COL_2,name);
        contentValues.put(COL_3,surname);
        contentValues.put(COL_4,marks);
        long result = db.insert(TABLE_NAME,null ,contentValues);
        if(result == -1)
            return false;
        else
            return true;
    }

    public Cursor getAllData() {
        SQLiteDatabase db = this.getWritableDatabase();
        Cursor res = db.rawQuery("select * from "+TABLE_NAME,null);
        return res;
    }

    public boolean updateData(String id,String name,String surname,String marks) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put(COL_1,id);
        contentValues.put(COL_2,name);
        contentValues.put(COL_3,surname);
        contentValues.put(COL_4,marks);
        db.update(TABLE_NAME, contentValues, "ID = ?",new String[] { id });
        return true;
    }

    public Integer deleteData (String id) {
        SQLiteDatabase db = this.getWritableDatabase();
        return db.delete(TABLE_NAME, "ID = ?",new String[] {id});
    }
}



package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_custom_xml extends Fragment {
    TextView text,head;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_textview_ref, container, false);
        text=(TextView)view.findViewById(R.id.text);
        head=(TextView)view.findViewById(R.id.head);
        head.setText("Create Activity&Create custom layout file");

        text.setText("Click-->File-->New-->Activity-->EmptyActivity\n" +
                "Click-->app-->res-->layout-->New-->Layout resource file\n"+
                "(Small letters only allowed)");

        return view;
    }



}



package com.Learning.com;

import android.content.Context;
        import android.view.LayoutInflater;
        import android.view.View;
        import android.view.ViewGroup;
        import android.widget.BaseAdapter;
        import android.widget.TextView;
        import java.util.ArrayList;
        import java.util.List;
        import java.util.Locale;

public class ListViewAdapter extends BaseAdapter {

    // Declare Variables

    Context mContext;
    LayoutInflater inflater;
    private List<VersionNames> versionNamesList = null;
    private ArrayList<VersionNames> arraylist;

    public ListViewAdapter(Context context, List<VersionNames> versionNamesList) {
        mContext = context;
        this.versionNamesList = versionNamesList;
        inflater = LayoutInflater.from(mContext);
        this.arraylist = new ArrayList<VersionNames>();
        this.arraylist.addAll(versionNamesList);
    }

    public class ViewHolder {
        TextView name;
    }

    @Override
    public int getCount() {
        return versionNamesList.size();
    }

    @Override
    public VersionNames getItem(int position) {
        return versionNamesList.get(position);
    }

    @Override
    public long getItemId(int position) {
        return position;
    }

    public View getView(final int position, View view, ViewGroup parent) {
        final ViewHolder holder;
        if (view == null) {
            holder = new ViewHolder();
            view = inflater.inflate(R.layout.listview_items, null);
            // Locate the TextViews in listview_item.xml
            holder.name = (TextView) view.findViewById(R.id.name);
            view.setTag(holder);
        } else {
            holder = (ViewHolder) view.getTag();
        }
        // Set the results into TextViews
        holder.name.setText(versionNamesList.get(position).getVersionNames());
        return view;
    }

    // Filter Class
    public void filter(String charText) {
        charText = charText.toLowerCase(Locale.getDefault());
        versionNamesList.clear();
        if (charText.length() == 0) {
            versionNamesList.addAll(arraylist);
        } else {
            for (VersionNames wp : arraylist) {
                if (wp.getVersionNames().toLowerCase(Locale.getDefault()).contains(charText)) {
                    versionNamesList.add(wp);
                }
            }
        }
        notifyDataSetChanged();
    }

}

package com.Learning.com;

import android.app.Notification;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.TaskStackBuilder;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Color;
import android.os.Build;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v4.app.NotificationCompat;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

public class Fragment_notifications_demo extends Fragment {
    Button simple,long_text,chat,image;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_notification_demo, container, false);
        simple=(Button)view.findViewById(R.id.simple);
        chat=(Button)view.findViewById(R.id.chat);
        long_text=(Button)view.findViewById(R.id.long_text);
        image=(Button)view.findViewById(R.id.image);
        simple.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                simple();
            }
        });
        chat.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                chat();
            }
        });
        long_text.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                longText();
            }
        });
        image.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Imagenotification();
            }
        });

        return view;
    }
    public void simple(){
        int notifyid=001;
        NotificationManager manager=(NotificationManager)getActivity().getSystemService(Context.NOTIFICATION_SERVICE);
        NotificationCompat.Builder builder=new NotificationCompat.Builder(getActivity())
                .setSmallIcon(R.mipmap.ic_launcher_round)
                .setContentTitle("Android Learning")
                .setAutoCancel(true)
                .setContentText("Hi, buddies click here to dismiss");
        if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.O) {
            String channelId = "1";
            String channelName_1 = "channel1";
            NotificationChannel channel = new NotificationChannel(channelId, channelName_1, NotificationManager.IMPORTANCE_DEFAULT);
            channel.enableLights(true);
            channel.setLightColor(Color.RED);
            channel.enableVibration(true);
            channel.setShowBadge(true);
            builder.setChannelId(channelId);
            if (manager != null) {
                manager.createNotificationChannel(channel);
            }
        }
        else {
            builder.setDefaults(Notification.DEFAULT_SOUND|Notification.DEFAULT_LIGHTS|Notification.DEFAULT_VIBRATE);
        }
        Intent intent=getActivity().getIntent();
        TaskStackBuilder stackBuilder=TaskStackBuilder.create(getActivity().getApplicationContext());
        stackBuilder.addNextIntent(intent);
        PendingIntent pendingIntent=stackBuilder.getPendingIntent(001,PendingIntent.FLAG_UPDATE_CURRENT);
        if(manager!=null){
            manager.notify(notifyid,builder.build());
        }




    }
    public void chat(){
        int notifyid=002;
        NotificationCompat.Builder builder=new NotificationCompat.Builder(getActivity())
                .setSmallIcon(R.mipmap.ic_launcher_round)
                .setContentTitle("Android Learning")
                .setContentText("Message Arrived")
                .setAutoCancel(true);

        NotificationCompat.InboxStyle inboxStyle=new NotificationCompat.InboxStyle();
        inboxStyle.setBigContentTitle("Messages");
        inboxStyle.addLine("Älpha");
        inboxStyle.addLine("Beta");
        inboxStyle.addLine("CupCake");
        inboxStyle.addLine("Donut");
        builder.setStyle(inboxStyle);
        Intent intent=getActivity().getIntent();
        TaskStackBuilder stackBuilder=TaskStackBuilder.create(getActivity());
        stackBuilder.addNextIntent(intent);
        PendingIntent pendingIntent=PendingIntent.getActivity(getActivity(),0,intent,PendingIntent.FLAG_UPDATE_CURRENT);
        builder.setContentIntent(pendingIntent);
        NotificationManager manager=(NotificationManager)getActivity().getSystemService(Context.NOTIFICATION_SERVICE);
        if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.O) {
            String channelId2 = "2";
            String channelName_2 = "channel2";
            NotificationChannel channel = new NotificationChannel(channelId2, channelName_2, NotificationManager.IMPORTANCE_DEFAULT);
            channel.enableLights(true);
            channel.setLightColor(Color.RED);
            channel.enableVibration(true);
            channel.setShowBadge(true);
            builder.setChannelId(channelId2);


            if (manager != null) {
                manager.createNotificationChannel(channel);
            }
        }
        else {
            builder.setDefaults(Notification.DEFAULT_SOUND|Notification.DEFAULT_LIGHTS|Notification.DEFAULT_VIBRATE);
        }

        if(manager!=null){
            manager.notify(notifyid,builder.build());
        }



    }
    public void longText() {
        int notifyid = 003;
        Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher_round);
        NotificationManager manager = (NotificationManager) getActivity().getSystemService(Context.NOTIFICATION_SERVICE);
        NotificationCompat.BigTextStyle bigTextStyle = new NotificationCompat.BigTextStyle();
        bigTextStyle.bigText("Hii all welcome to Android Learning.All the best for your future with android delopment");
        bigTextStyle.setSummaryText("Android Learning");
        NotificationCompat.Builder builder = new NotificationCompat.Builder(getActivity())
                .setSmallIcon(R.mipmap.ic_launcher_round)
                .setContentTitle("Android Learning")
                .setStyle(bigTextStyle);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            String channelId = "1";
            String channelName_1 = "channel1";
            NotificationChannel channel = new NotificationChannel(channelId, channelName_1, NotificationManager.IMPORTANCE_DEFAULT);
            channel.enableLights(true);
            channel.setLightColor(Color.RED);
            channel.enableVibration(true);
            channel.setShowBadge(true);
            builder.setChannelId(channelId);
            if (manager != null) {
                manager.createNotificationChannel(channel);
            }
        }else {
            builder.setDefaults(Notification.DEFAULT_SOUND | Notification.DEFAULT_LIGHTS | Notification.DEFAULT_VIBRATE);
        }
        Intent intent = getActivity().getIntent();
        TaskStackBuilder stackBuilder = TaskStackBuilder.create(getActivity().getApplicationContext());
        stackBuilder.addNextIntent(intent);
        PendingIntent pendingIntent = stackBuilder.getPendingIntent(001, PendingIntent.FLAG_UPDATE_CURRENT);
        if (manager != null) {
            manager.notify(notifyid, builder.build());
        }



    }
    public void Imagenotification() {
        int notifyid=004;
        NotificationCompat.BigPictureStyle bigPictureStyle=new NotificationCompat.BigPictureStyle();
        bigPictureStyle.bigPicture(BitmapFactory.decodeResource(getResources(),R.drawable.ic_launcher_background)).build();
        Intent intent=getActivity().getIntent();

        PendingIntent pendingIntent=PendingIntent.getActivity(getActivity(),0,intent,0);
        NotificationManager manager=(NotificationManager)getActivity().getSystemService(Context.NOTIFICATION_SERVICE);
        NotificationCompat.Builder builder=new NotificationCompat.Builder(getActivity())
                .setSmallIcon(R.mipmap.ic_launcher_round)
                .setContentTitle("Android Learning")
                .addAction(R.drawable.icon,"Share",pendingIntent)
                .setStyle(bigPictureStyle);
        builder.setContentIntent(pendingIntent);
        if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.O) {
            String channelId = "1";
            String channelName_1 = "channel1";
            NotificationChannel channel = new NotificationChannel(channelId, channelName_1, NotificationManager.IMPORTANCE_DEFAULT);
            channel.enableLights(true);
            channel.setLightColor(Color.RED);
            channel.enableVibration(true);
            channel.setShowBadge(true);
            builder.setChannelId(channelId);
            if (manager != null) {
                manager.createNotificationChannel(channel);
            }
        }
        else {
            builder.setDefaults(Notification.DEFAULT_SOUND|Notification.DEFAULT_LIGHTS|Notification.DEFAULT_VIBRATE);
        }

        if(manager!=null){
            manager.notify(notifyid,builder.build());
        }


    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.widget.Button;
import android.widget.TextView;

public class Fragment_animation_demo  extends Fragment {
    Button btnFadeIn, btnFadeOut, btnCrossFade, btnBlink, btnZoomIn,
            btnZoomOut, btnRotate, btnMove, btnSlideUp, btnSlideDown,
            btnBounce, btnSequential, btnTogether;
    Animation animFadeIn,animFadeOut,animBlink,animZoomIn,animZoomOut,animRotate
            ,animMove,animSlideUp,animSlideDown,animBounce,animSequential,animTogether,animCrossFadeIn,animCrossFadeOut;
    TextView txtFadeIn,txtFadeOut,txtBlink,txtZoomIn,txtZoomOut,txtRotate,txtMove,txtSlideUp,
            txtSlideDown,txtBounce,txtSeq,txtTog,txtIn,txtOut;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_anination_demo, container, false);
        btnFadeIn = (Button) view.findViewById(R.id.btnFadeIn);
        btnFadeOut = (Button) view.findViewById(R.id.btnFadeOut);
        btnCrossFade = (Button) view.findViewById(R.id.btnCrossFade);
        btnBlink = (Button) view.findViewById(R.id.btnBlink);
        btnZoomIn = (Button) view.findViewById(R.id.btnZoomIn);
        btnZoomOut = (Button) view.findViewById(R.id.btnZoomOut);
        btnRotate = (Button) view.findViewById(R.id.btnRotate);
        btnMove = (Button) view.findViewById(R.id.btnMove);
        btnSlideUp = (Button) view.findViewById(R.id.btnSlideUp);
        btnSlideDown = (Button) view.findViewById(R.id.btnSlideDown);
        btnBounce = (Button) view.findViewById(R.id.btnBounce);
        btnSequential = (Button) view.findViewById(R.id.btnSequential);
        btnTogether = (Button) view.findViewById(R.id.btnTogether);
        txtFadeIn=(TextView)view.findViewById(R.id.txt_fade_in);
        txtFadeOut=(TextView)view.findViewById(R.id.txt_fade_out);
        txtBlink=(TextView)view.findViewById(R.id.txt_blink);
        txtZoomIn=(TextView)view.findViewById(R.id.txt_zoom_in);
        txtZoomOut=(TextView)view.findViewById(R.id.txt_zoom_out);
        txtRotate=(TextView)view.findViewById(R.id.txt_rotate);
        txtMove=(TextView)view.findViewById(R.id.txt_move);
        txtSlideUp=(TextView)view.findViewById(R.id.txt_slide_up);
        txtSlideDown=(TextView)view.findViewById(R.id.txt_slide_down);
        txtBounce=(TextView)view.findViewById(R.id.txt_bounce);
        txtSeq=(TextView)view.findViewById(R.id.txt_seq);
        txtTog=(TextView)view.findViewById(R.id.txt_tog);
        txtIn=(TextView)view.findViewById(R.id.txt_in);
        txtOut=(TextView)view.findViewById(R.id.txt_out);
        animFadeIn = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.anim_fade_in);

        animFadeIn = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.anim_fade_in);
        // fade in
        btnFadeIn.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                txtFadeIn.setVisibility(View.VISIBLE);
                txtFadeIn.startAnimation(animFadeIn);
            }
        });

        animFadeOut = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.anim_fade_out);

        // fade out
        btnFadeOut.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txtFadeOut.setVisibility(View.VISIBLE);
                txtFadeOut.startAnimation(animFadeOut);
            }
        });
        animCrossFadeIn = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.anim_fade_in);
        animCrossFadeOut = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.anim_fade_out);
        // cross fade
        btnCrossFade.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txtOut.setVisibility(View.VISIBLE);
                // start fade in animation
                txtOut.startAnimation(animCrossFadeIn);

                // start fade out animation
                txtIn.startAnimation(animCrossFadeOut);
            }
        });
        animBlink = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.anim_blink);
        // blink
        btnBlink.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txtBlink.setVisibility(View.VISIBLE);
                txtBlink.startAnimation(animBlink);
            }
        });

        animZoomIn = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.zoom_in);
        // Zoom In
        btnZoomIn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txtZoomIn.setVisibility(View.VISIBLE);
                txtZoomIn.startAnimation(animZoomIn);
            }
        });
        animZoomOut = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.zoom_out);
        // Zoom Out
        btnZoomOut.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txtZoomOut.setVisibility(View.VISIBLE);
                txtZoomOut.startAnimation(animZoomOut);
            }
        });
        animRotate = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.anim_rotate);

        // Rotate
        btnRotate.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txtRotate.startAnimation(animRotate);
            }
        });
        animMove = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.anim_move);
        // Move
        btnMove.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txtMove.startAnimation(animMove);
            }
        });
        animSlideUp = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.anim_slide_up);
        // Slide Up
        btnSlideUp.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txtSlideUp.startAnimation(animSlideUp);
            }
        });
        animSlideDown = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.anim_slide_down);
        // Slide Down
        btnSlideDown.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txtSlideDown.startAnimation(animSlideDown);
            }
        });
        animBounce = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.anim_bounce);
        // Slide Down
        btnBounce.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txtBounce.startAnimation(animBounce);
            }
        });
        animSequential = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.anim_sequential);
        // Sequential
        btnSequential.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                txtSeq.startAnimation(animSequential);
            }
        });
        animTogether = AnimationUtils.loadAnimation(getActivity().getApplicationContext(),
                R.anim.anim_together);

        // Together
        btnTogether.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                txtTog.startAnimation(animTogether);
            }
        });

        return view;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_webview_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "android:layout_width=\"match_parent\"\n" +
            "android:layout_height=\"match_parent\"\n" +
            "tools:context=\".MainActivity\">\n" +
            "<WebView\n" +
            "    android:id=\"@+id/webview\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:layout_marginTop=\"100dp\"/>\n" +
            "\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;

import java.util.ArrayList;
import java.util.List;

public class Fragment_list_view_demo extends Fragment {
    ListView listView;
    List<String> list;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_listview_demo, container, false);
        listView=(ListView)view.findViewById(R.id.listview);
        list=new ArrayList<>();
        list.add("android");
        list.add("byte");
        list.add("catch");
        list.add("date picker");
        list.add("error");
        list.add("for");
        list.add("github");
        list.add("hacking");
        list.add("info");
        list.add("json");
        ArrayAdapter<String> adapter=new ArrayAdapter<String>(getActivity(),android.R.layout.simple_list_item_1,list);
        listView.setAdapter(adapter);
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                Toast.makeText(getActivity(), "title" + ""+parent.getItemAtPosition(position).toString(), Toast.LENGTH_SHORT).show();
            }
        });
        return view;
    }
}



package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_ImageView_ref extends Fragment {
    TextView text,head;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_textview_ref, container, false);
        text=(TextView)view.findViewById(R.id.text);
        head=(TextView)view.findViewById(R.id.head);
        head.setText("Create activity & Paste image in drawable folder");

        text.setText("Click-->File-->New-->Activity-->EmptyActivity\n" +
                "Click-->app-->res-->drawable-->paste as drawable\n"+
                "(Image Format allowed are *.png/.jpg)");

        return view;
    }



}



package com.Learning.com;

import java.util.ArrayList;

public class VerticalModel {

    private String title;
    private ArrayList<HorizontalModel> arrayList;

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public ArrayList<HorizontalModel> getArrayList() {
        return arrayList;
    }

    public void setArrayList(ArrayList<HorizontalModel> arrayList) {
        this.arrayList = arrayList;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.TextView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_sql_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    TextView title2;
    String Code="import android.app.AlertDialog;\n" +
            "import android.database.Cursor;\n" +
            "import android.os.Bundle;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.view.Menu;\n" +
            "import android.view.MenuItem;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.EditText;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    DatabaseHelper myDb;\n" +
            "    EditText editName,editSurname,editMarks ,editTextId;\n" +
            "    Button btnAddData;\n" +
            "    Button btnviewAll;\n" +
            "    Button btnDelete;\n" +
            "\n" +
            "    Button btnviewUpdate;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        myDb = new DatabaseHelper(this);\n" +
            "\n" +
            "        editName = (EditText)findViewById(R.id.editText_name);\n" +
            "        editSurname = (EditText)findViewById(R.id.editText_surname);\n" +
            "        editMarks = (EditText)findViewById(R.id.editText_Marks);\n" +
            "        editTextId = (EditText)findViewById(R.id.editText_id);\n" +
            "        btnAddData = (Button)findViewById(R.id.button_add);\n" +
            "        btnviewAll = (Button)findViewById(R.id.button_viewAll);\n" +
            "        btnviewUpdate= (Button)findViewById(R.id.button_update);\n" +
            "        btnDelete= (Button)findViewById(R.id.button_delete);\n" +
            "        AddData();\n" +
            "        viewAll();\n" +
            "        UpdateData();\n" +
            "        DeleteData();\n" +
            "    }\n" +
            "    public void DeleteData() {\n" +
            "        btnDelete.setOnClickListener(\n" +
            "                new View.OnClickListener() {\n" +
            "                    @Override\n" +
            "                    public void onClick(View v) {\n" +
            "                        Integer deletedRows = myDb.deleteData(editTextId.getText().toString());\n" +
            "                        if(deletedRows > 0)\n" +
            "                            Toast.makeText(MainActivity.this,\"Data Deleted\",Toast.LENGTH_LONG).show();\n" +
            "                        else\n" +
            "                            Toast.makeText(MainActivity.this,\"Data not Deleted\",Toast.LENGTH_LONG).show();\n" +
            "                    }\n" +
            "                }\n" +
            "        );\n" +
            "    }\n" +
            "    public void UpdateData() {\n" +
            "        btnviewUpdate.setOnClickListener(\n" +
            "                new View.OnClickListener() {\n" +
            "                    @Override\n" +
            "                    public void onClick(View v) {\n" +
            "                        boolean isUpdate = myDb.updateData(editTextId.getText().toString(),\n" +
            "                                editName.getText().toString(),\n" +
            "                                editSurname.getText().toString(),editMarks.getText().toString());\n" +
            "                        if(isUpdate == true)\n" +
            "                            Toast.makeText(MainActivity.this,\"Data Update\",Toast.LENGTH_LONG).show();\n" +
            "                        else\n" +
            "                            Toast.makeText(MainActivity.this,\"Data not Updated\",Toast.LENGTH_LONG).show();\n" +
            "                    }\n" +
            "                }\n" +
            "        );\n" +
            "    }\n" +
            "    public  void AddData() {\n" +
            "        btnAddData.setOnClickListener(\n" +
            "                new View.OnClickListener() {\n" +
            "                    @Override\n" +
            "                    public void onClick(View v) {\n" +
            "                        boolean isInserted = myDb.insertData(editName.getText().toString(),\n" +
            "                                editSurname.getText().toString(),\n" +
            "                                editMarks.getText().toString() );\n" +
            "                        if(isInserted == true)\n" +
            "                            Toast.makeText(MainActivity.this,\"Data Inserted\",Toast.LENGTH_LONG).show();\n" +
            "                        else\n" +
            "                            Toast.makeText(MainActivity.this,\"Data not Inserted\",Toast.LENGTH_LONG).show();\n" +
            "                    }\n" +
            "                }\n" +
            "        );\n" +
            "    }\n" +
            "\n" +
            "    public void viewAll() {\n" +
            "        btnviewAll.setOnClickListener(\n" +
            "                new View.OnClickListener() {\n" +
            "                    @Override\n" +
            "                    public void onClick(View v) {\n" +
            "                        Cursor res = myDb.getAllData();\n" +
            "                        if(res.getCount() == 0) {\n" +
            "                            // show message\n" +
            "                            showMessage(\"Error\",\"Nothing found\");\n" +
            "                            return;\n" +
            "                        }\n" +
            "\n" +
            "                        StringBuffer buffer = new StringBuffer();\n" +
            "                        while (res.moveToNext()) {\n" +
            "                            buffer.append(\"Id :\"+ res.getString(0)+\"\\n\");\n" +
            "                            buffer.append(\"Name :\"+ res.getString(1)+\"\\n\");\n" +
            "                            buffer.append(\"Surname :\"+ res.getString(2)+\"\\n\");\n" +
            "                            buffer.append(\"Marks :\"+ res.getString(3)+\"\\n\\n\");\n" +
            "                        }\n" +
            "\n" +
            "                        // Show all data\n" +
            "                        showMessage(\"Data\",buffer.toString());\n" +
            "                    }\n" +
            "                }\n" +
            "        );\n" +
            "    }\n" +
            "\n" +
            "    public void showMessage(String title,String Message){\n" +
            "        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n" +
            "        builder.setCancelable(true);\n" +
            "        builder.setTitle(title);\n" +
            "        builder.setMessage(Message);\n" +
            "        builder.show();\n" +
            "    }\n" +
            "\n" +
            "\n" +
            "\n" +
            "}\n";
    String Code2="import android.content.ContentValues;\n" +
            "import android.content.Context;\n" +
            "import android.database.Cursor;\n" +
            "import android.database.sqlite.SQLiteDatabase;\n" +
            "import android.database.sqlite.SQLiteOpenHelper;\n" +
            "\n" +
            "public class DatabaseHelper extends SQLiteOpenHelper {\n" +
            "    public static final String DATABASE_NAME = \"Student.db\";\n" +
            "    public static final String TABLE_NAME = \"student_table\";\n" +
            "    public static final String COL_1 = \"ID\";\n" +
            "    public static final String COL_2 = \"NAME\";\n" +
            "    public static final String COL_3 = \"SURNAME\";\n" +
            "    public static final String COL_4 = \"MARKS\";\n" +
            "\n" +
            "    public DatabaseHelper(Context context) {\n" +
            "        super(context, DATABASE_NAME, null, 1);\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onCreate(SQLiteDatabase db) {\n" +
            "        db.execSQL(\"create table \" + TABLE_NAME +\" (ID INTEGER PRIMARY KEY AUTOINCREMENT,NAME TEXT,SURNAME TEXT,MARKS INTEGER)\");\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n" +
            "        db.execSQL(\"DROP TABLE IF EXISTS \"+TABLE_NAME);\n" +
            "        onCreate(db);\n" +
            "    }\n" +
            "\n" +
            "    public boolean insertData(String name,String surname,String marks) {\n" +
            "        SQLiteDatabase db = this.getWritableDatabase();\n" +
            "        ContentValues contentValues = new ContentValues();\n" +
            "        contentValues.put(COL_2,name);\n" +
            "        contentValues.put(COL_3,surname);\n" +
            "        contentValues.put(COL_4,marks);\n" +
            "        long result = db.insert(TABLE_NAME,null ,contentValues);\n" +
            "        if(result == -1)\n" +
            "            return false;\n" +
            "        else\n" +
            "            return true;\n" +
            "    }\n" +
            "\n" +
            "    public Cursor getAllData() {\n" +
            "        SQLiteDatabase db = this.getWritableDatabase();\n" +
            "        Cursor res = db.rawQuery(\"select * from \"+TABLE_NAME,null);\n" +
            "        return res;\n" +
            "    }\n" +
            "\n" +
            "    public boolean updateData(String id,String name,String surname,String marks) {\n" +
            "        SQLiteDatabase db = this.getWritableDatabase();\n" +
            "        ContentValues contentValues = new ContentValues();\n" +
            "        contentValues.put(COL_1,id);\n" +
            "        contentValues.put(COL_2,name);\n" +
            "        contentValues.put(COL_3,surname);\n" +
            "        contentValues.put(COL_4,marks);\n" +
            "        db.update(TABLE_NAME, contentValues, \"ID = ?\",new String[] { id });\n" +
            "        return true;\n" +
            "    }\n" +
            "\n" +
            "    public Integer deleteData (String id) {\n" +
            "        SQLiteDatabase db = this.getWritableDatabase();\n" +
            "        return db.delete(TABLE_NAME, \"ID = ?\",new String[] {id});\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("DatabaseHelper.Java");
        WebView webView2=(WebView)view.findViewById(R.id.webview2);
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code2)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webView2);
        return view;
    }



}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_floatingmenu_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<android.support.design.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\"\n" +
            "    android:weightSum=\"2\">\n" +
            "    <LinearLayout\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"match_parent\"\n" +
            "        android:orientation=\"vertical\">\n" +
            "\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/text\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Hello World!\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"100dp\"/>\n" +
            "    </LinearLayout>\n" +
            "    <com.github.clans.fab.FloatingActionMenu\n" +
            "        android:id=\"@+id/menu\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"match_parent\"\n" +
            "        android:fitsSystemWindows=\"true\"\n" +
            "        android:padding=\"11dp\"\n" +
            "        app:layout_anchorGravity=\"bottom|end\"\n" +
            "        app:menu_animationDelayPerItem=\"55\"\n" +
            "        app:menu_backgroundColor=\"@android:color/transparent\"\n" +
            "        app:menu_buttonSpacing=\"0dp\"\n" +
            "        app:menu_colorNormal=\"@android:color/holo_red_dark\"\n" +
            "        app:menu_colorPressed=\"@android:color/holo_red_light\"\n" +
            "        app:menu_colorRipple=\"@android:color/holo_red_light\"\n" +
            "        app:menu_fab_size=\"normal\"\n" +
            "        app:menu_icon=\"@drawable/menu\"\n" +
            "        app:menu_labels_colorNormal=\"#333\"\n" +
            "        app:menu_labels_colorPressed=\"#444\"\n" +
            "        app:menu_labels_textColor=\"@android:color/white\"\n" +
            "        app:menu_labels_textSize=\"15sp\"\n" +
            "        app:fab_label=\"Select Lab\"\n" +
            "        >\n" +
            "        <!--replace menu with your own inage-->\n" +
            "        <!--replace arrow with your own inage-->\n" +
            "\n" +
            "        <com.github.clans.fab.FloatingActionButton\n" +
            "            android:id=\"@+id/b2\"\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:fitsSystemWindows=\"true\"\n" +
            "            android:scaleType=\"fitCenter\"\n" +
            "            android:src=\"@drawable/arrow\"\n" +
            "            android:background=\"@android:color/holo_green_dark\"\n" +
            "            android:tint=\"@android:color/holo_green_dark\"\n" +
            "            app:fab_label=\"btn2\" />\n" +
            "        <com.github.clans.fab.FloatingActionButton\n" +
            "            android:id=\"@+id/b3\"\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:fitsSystemWindows=\"true\"\n" +
            "            android:src=\"@drawable/arrow\"\n" +
            "            android:scaleType=\"fitCenter\"\n" +
            "            android:background=\"@android:color/transparent\"\n" +
            "            app:fab_label=\"btn3\" />\n" +
            "        <com.github.clans.fab.FloatingActionButton\n" +
            "            android:id=\"@+id/b4\"\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:fitsSystemWindows=\"true\"\n" +
            "            android:scaleType=\"fitCenter\"\n" +
            "            android:src=\"@drawable/arrow\"\n" +
            "            app:fab_label=\"btn4\" />\n" +
            "        <com.github.clans.fab.FloatingActionButton\n" +
            "            android:id=\"@+id/b5\"\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:fitsSystemWindows=\"true\"\n" +
            "            android:background=\"@android:color/transparent\"\n" +
            "            android:scaleType=\"fitCenter\"\n" +
            "            android:src=\"@drawable/arrow\"\n" +
            "            app:fab_label=\"btn5\" />\n" +
            "\n" +
            "    </com.github.clans.fab.FloatingActionMenu>\n" +
            "\n" +
            "</android.support.design.widget.CoordinatorLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}





package com.Learning.com;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.graphics.Bitmap;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Toast;

import im.delight.android.webview.AdvancedWebView;

public class Fragment_AdvancedWebView_demo  extends Fragment implements AdvancedWebView.Listener {

    private AdvancedWebView mWebView;


    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View rootView = inflater.inflate(R.layout.fragment_advancedwebview_demo, container, false);

        mWebView = (AdvancedWebView) rootView.findViewById(R.id.webview);
        mWebView.setListener(getActivity(), this);
        mWebView.loadUrl("http://www.google.com/");



        return rootView;
    }

    @SuppressLint("NewApi")
    @Override
    public void onResume() {
        super.onResume();
        mWebView.onResume();

    }

    @SuppressLint("NewApi")
    @Override
    public void onPause() {
        mWebView.onPause();

        super.onPause();
    }

    @Override
    public void onDestroy() {
        mWebView.onDestroy();

        super.onDestroy();
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent intent) {
        super.onActivityResult(requestCode, resultCode, intent);
        mWebView.onActivityResult(requestCode, resultCode, intent);

    }

    @Override
    public void onPageStarted(String url, Bitmap favicon) {
        Toast.makeText(getActivity(), "Loading...", Toast.LENGTH_SHORT).show();
    }

    @Override
    public void onPageFinished(String url) {
        Toast.makeText(getActivity(), "Loading Finished...", Toast.LENGTH_SHORT).show();
    }

    @Override
    public void onPageError(int errorCode, String description, String failingUrl) {
        Toast.makeText(getActivity(), "An Error Occured During Loading", Toast.LENGTH_SHORT).show();
    }

    @Override
    public void onDownloadRequested(String url, String suggestedFilename, String mimeType, long contentLength, String contentDisposition, String userAgent) { }

    @Override
    public void onExternalPageRequest(String url) { }

}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_button_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "Button btn;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        btn=(Button)findViewById(R.id.btn);\n" +
            "        btn.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                Toast.makeText(MainActivity.this, \"Button Clicked\", Toast.LENGTH_SHORT).show();\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.Manifest;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.support.annotation.Nullable;
import android.support.v4.app.ActivityCompat;
import android.support.v4.app.Fragment;
import android.support.v7.app.AlertDialog;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.util.List;

public class Fragment_pdfcreator_demo extends Fragment {
    private static final String TAG = "PdfCreatorActivity";
    private EditText mContentEditText;
    private Button mCreateButton;
    private File pdfFile;
    final private int REQUEST_CODE_ASK_PERMISSIONS = 111;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_pdfcreator_demo, container, false);
        mContentEditText = (EditText) view.findViewById(R.id.edit_text_content);
        mCreateButton = (Button) view.findViewById(R.id.button_create);
        mCreateButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (mContentEditText.getText().toString().isEmpty()) {
                    mContentEditText.setError("Body is empty");
                    mContentEditText.requestFocus();
                    return;
                }
                try {
                    createPdfWrapper();
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                } catch (DocumentException e) {
                    e.printStackTrace();
                }
            }
        });
        return view;
    }

    private void createPdfWrapper() throws FileNotFoundException, DocumentException {

        int hasWriteStoragePermission = ActivityCompat.checkSelfPermission(getActivity(), Manifest.permission.WRITE_EXTERNAL_STORAGE);
        if (hasWriteStoragePermission != PackageManager.PERMISSION_GRANTED) {

            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                if (!shouldShowRequestPermissionRationale(Manifest.permission.WRITE_CONTACTS)) {
                    showMessageOKCancel("You need to allow access to Storage",
                            new DialogInterface.OnClickListener() {
                                @Override
                                public void onClick(DialogInterface dialog, int which) {
                                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                                        requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
                                                REQUEST_CODE_ASK_PERMISSIONS);
                                    }
                                }
                            });
                    return;
                }

                requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},
                        REQUEST_CODE_ASK_PERMISSIONS);
            }
            return;
        } else {
            createPdf();
        }
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
        switch (requestCode) {
            case REQUEST_CODE_ASK_PERMISSIONS:
                if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                    // Permission Granted
                    try {
                        createPdfWrapper();
                    } catch (FileNotFoundException e) {
                        e.printStackTrace();
                    } catch (DocumentException e) {
                        e.printStackTrace();
                    }
                } else {
                    // Permission Denied
                    Toast.makeText(getActivity(), "WRITE_EXTERNAL Permission Denied", Toast.LENGTH_SHORT)
                            .show();
                }
                break;
            default:
                super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        }
    }

    private void showMessageOKCancel(String message, DialogInterface.OnClickListener okListener) {
        new AlertDialog.Builder(getActivity())
                .setMessage(message)
                .setPositiveButton("OK", okListener)
                .setNegativeButton("Cancel", null)
                .create()
                .show();
    }

    private void createPdf() throws FileNotFoundException, DocumentException {

        File docsFolder = new File(Environment.getExternalStorageDirectory() + "/Documents");
        if (!docsFolder.exists()) {
            docsFolder.mkdir();
            Log.i(TAG, "Created a new directory for PDF");
        }

        pdfFile = new File(docsFolder.getAbsolutePath(), "HelloWorld.pdf");
        OutputStream output = new FileOutputStream(pdfFile);
        Document document = new Document();
        PdfWriter.getInstance(document, output);
        document.open();
        document.add(new Paragraph(mContentEditText.getText().toString()));

        document.close();
        previewPdf();

    }

    private void previewPdf() {

        PackageManager packageManager = getActivity().getPackageManager();
        Intent testIntent = new Intent(Intent.ACTION_VIEW);
        testIntent.setType("application/pdf");
        List list = packageManager.queryIntentActivities(testIntent, PackageManager.MATCH_DEFAULT_ONLY);
        if (list.size() > 0) {
            Intent intent = new Intent();
            intent.setAction(Intent.ACTION_VIEW);
            Uri uri = Uri.fromFile(pdfFile);
            intent.setDataAndType(uri, "application/pdf");
            startActivity(intent);


        } else {

            Toast.makeText(getActivity(), "Download a PDF Viewer to see the generated PDF", Toast.LENGTH_SHORT).show();
        }
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.Intent;
import android.graphics.Bitmap;
import android.app.Activity;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.util.Base64;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.net.Uri;
import android.provider.MediaStore;
import android.widget.Toast;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.HashMap;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.util.HashMap;
import java.io.BufferedReader;
import java.net.URLEncoder;
import java.util.Map;
import java.io.BufferedWriter;
import java.io.OutputStreamWriter;
import java.net.URL;
import javax.net.ssl.HttpsURLConnection;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;

import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

import android.support.v4.app.Fragment;

import static android.app.Activity.RESULT_OK;

public class Fragment_image_server_demo extends Fragment {
    Button GetImageFromGalleryButton, UploadImageOnServerButton;

    ImageView ShowSelectedImage;

    EditText GetImageName;

    Bitmap FixBitmap;

    String ImageTag = "image_tag" ;

    String ImageName = "image_data" ;

    String ServerUploadPath ="http://google.com" ;

    ProgressDialog progressDialog ;

    ByteArrayOutputStream byteArrayOutputStream ;

    byte[] byteArray ;

    String ConvertImage ;

    String GetImageNameFromEditText;

    HttpURLConnection httpURLConnection ;

    URL url;

    OutputStream outputStream;

    BufferedWriter bufferedWriter ;

    int RC ;

    BufferedReader bufferedReader ;

    StringBuilder stringBuilder;

    boolean check = true;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_image_server_demo, container, false);
        GetImageFromGalleryButton = (Button)view.findViewById(R.id.button);

        UploadImageOnServerButton = (Button)view.findViewById(R.id.button2);

        ShowSelectedImage = (ImageView)view.findViewById(R.id.imageView);

        GetImageName = (EditText)view.findViewById(R.id.editText);

        byteArrayOutputStream = new ByteArrayOutputStream();

        GetImageFromGalleryButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                Intent intent = new Intent();

                intent.setType("image/*");

                intent.setAction(Intent.ACTION_GET_CONTENT);

                startActivityForResult(Intent.createChooser(intent, "Select Image From Gallery"), 1);

            }
        });


        UploadImageOnServerButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                GetImageNameFromEditText = GetImageName.getText().toString();

                UploadImageToServer();

            }
        });
        return view;
    }

    @Override
    public void onActivityResult(int RC, int RQC, Intent I) {

        super.onActivityResult(RC, RQC, I);

        if (RC == 1 && RQC == RESULT_OK && I != null && I.getData() != null) {

            Uri uri = I.getData();

            try {

                FixBitmap = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), uri);

                ShowSelectedImage.setImageBitmap(FixBitmap);

            } catch (IOException e) {

                e.printStackTrace();
            }
        }
    }

    public void UploadImageToServer(){
        try {

            FixBitmap.compress(Bitmap.CompressFormat.JPEG, 100, byteArrayOutputStream);

            byteArray = byteArrayOutputStream.toByteArray();

            ConvertImage = Base64.encodeToString(byteArray, Base64.DEFAULT);

            class AsyncTaskUploadClass extends AsyncTask<Void, Void, String> {

                @Override
                protected void onPreExecute() {

                    super.onPreExecute();

                    progressDialog = ProgressDialog.show(getActivity(), "Image is Uploading", "Please Wait", false, false);
                }

                @Override
                protected void onPostExecute(String string1) {

                    super.onPostExecute(string1);
                    Log.i("postexe","******"+string1);

                    progressDialog.dismiss();

                    Toast.makeText(getActivity(), string1 + "response", Toast.LENGTH_LONG).show();
                }

                @Override
                protected String doInBackground(Void... params) {

                    ImageProcessClass imageProcessClass = new ImageProcessClass();

                    HashMap<String, String> HashMapParams = new HashMap<String, String>();

                    HashMapParams.put(ImageTag, GetImageNameFromEditText);

                    HashMapParams.put(ImageName, ConvertImage);
                    Log.i("base64","************"+ConvertImage);
                    OkHttpClient client=new OkHttpClient();
                    Request request=new Request.Builder()
                            .url(ServerUploadPath)
                            .build();
                    try {
                        Response response=client.newCall(request).execute();
                        Log.i("res1","+++++++"+response);
                        Log.i("res2","********"+response.body().string());
                    } catch (IOException e) {
                        e.printStackTrace();
                    }


                    String FinalData = imageProcessClass.ImageHttpRequest(ServerUploadPath, HashMapParams);

                    return FinalData;
                }
            }
            AsyncTaskUploadClass AsyncTaskUploadClassOBJ = new AsyncTaskUploadClass();
            AsyncTaskUploadClassOBJ.execute();
        }catch (NullPointerException e){
            Toast.makeText(getActivity(), "Please select the image", Toast.LENGTH_SHORT).show();
            e.printStackTrace();
        }
    }

    public class ImageProcessClass{

        public String ImageHttpRequest(String requestURL,HashMap<String, String> PData) {

            StringBuilder stringBuilder = new StringBuilder();

            try {
                url = new URL(requestURL);

                httpURLConnection = (HttpURLConnection) url.openConnection();

                httpURLConnection.setReadTimeout(20000);

                httpURLConnection.setConnectTimeout(20000);

                httpURLConnection.setRequestMethod("POST");

                httpURLConnection.setDoInput(true);

                httpURLConnection.setDoOutput(true);

                outputStream = httpURLConnection.getOutputStream();

                bufferedWriter = new BufferedWriter(

                        new OutputStreamWriter(outputStream, "UTF-8"));

                bufferedWriter.write(bufferedWriterDataFN(PData));

                bufferedWriter.flush();

                bufferedWriter.close();

                outputStream.close();

                RC = httpURLConnection.getResponseCode();

                if (RC == HttpsURLConnection.HTTP_OK) {

                    bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));

                    stringBuilder = new StringBuilder();

                    String RC2;

                    while ((RC2 = bufferedReader.readLine()) != null){

                        stringBuilder.append(RC2);
                    }
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
            return stringBuilder.toString();
        }

        private String bufferedWriterDataFN(HashMap<String, String> HashMapParams) throws UnsupportedEncodingException {

            stringBuilder = new StringBuilder();

            for (Map.Entry<String, String> KEY : HashMapParams.entrySet()) {
                if (check)
                    check = false;
                else
                    stringBuilder.append("&");

                stringBuilder.append(URLEncoder.encode(KEY.getKey(), "UTF-8"));

                stringBuilder.append("=");

                stringBuilder.append(URLEncoder.encode(KEY.getValue(), "UTF-8"));
            }

            return stringBuilder.toString();
        }


    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.Toast;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;

import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.Response;

import static android.support.constraint.Constraints.TAG;

public class Fragment_okhttp_demo  extends Fragment {
    private static String url = "https://api.androidhive.info/contacts/";
    ArrayList<HashMap<String, String>> contactList;
    ListView lv;
    private ProgressDialog pDialog;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_okhttp, container, false);
        contactList = new ArrayList<>();

        lv = (ListView)view.findViewById(R.id.list);
        new GetContacts().execute();

        return view;
    }
    private class GetContacts extends AsyncTask<Void, Void, String> {
        String jsonStr;

        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            // Showing progress dialog
            pDialog = new ProgressDialog(getActivity());
            pDialog.setMessage("Please wait...");
            pDialog.setCancelable(false);
            pDialog.show();

        }
        @Override
        protected void onPostExecute(String result) {
            super.onPostExecute(result);
            // Dismiss the progress dialog
             jsonStr = String.valueOf(result);
            if (pDialog.isShowing())
                pDialog.dismiss();
            /**
             * Updating parsed JSON data into ListView
             * */
            Log.e(TAG, "Response from url: " + jsonStr);

            if (jsonStr != null) {
                try {
                    JSONObject jsonObj = new JSONObject(jsonStr);

                    // Getting JSON Array node
                    JSONArray contacts = jsonObj.getJSONArray("contacts");

                    // looping through All Contacts
                    for (int i = 0; i < contacts.length(); i++) {
                        JSONObject c = contacts.getJSONObject(i);

                        String id = c.getString("id");
                        String name = c.getString("name");
                        String email = c.getString("email");
                        String address = c.getString("address");
                        String gender = c.getString("gender");

                        // Phone node is JSON Object
                        JSONObject phone = c.getJSONObject("phone");
                        String mobile = phone.getString("mobile");
                        String home = phone.getString("home");
                        String office = phone.getString("office");

                        // tmp hash map for single contact
                        HashMap<String, String> contact = new HashMap<>();

                        // adding each child node to HashMap key => value
                        contact.put("id", id);
                        contact.put("name", name);
                        contact.put("email", email);
                        contact.put("mobile", mobile);

                        // adding contact to contact list
                        contactList.add(contact);
                    }
                } catch (final JSONException e) {
                    Log.e(TAG, "Json parsing error: " + e.getMessage());
                    getActivity().runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            Toast.makeText(getActivity(),
                                    "Json parsing error: " + e.getMessage(),
                                    Toast.LENGTH_LONG)
                                    .show();
                        }
                    });

                }
            } else {
                Log.e(TAG, "Couldn't get json from server.");
                getActivity().runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        Toast.makeText(getActivity(),
                                "Couldn't get json from server. Check LogCat for possible errors!",
                                Toast.LENGTH_LONG)
                                .show();
                    }
                });

            }


            ListAdapter adapter = new SimpleAdapter(
                    getActivity(), contactList,
                    R.layout.list_item, new String[]{"name", "email",
                    "mobile"}, new int[]{R.id.name,
                    R.id.email, R.id.mobile});

            lv.setAdapter(adapter);
        }

        @Override
        protected String doInBackground(Void... voids) {
            OkHttpClient okHttpClient=new OkHttpClient();
            Request request=new Request.Builder()
                    .url(url)
                    .build();
            try {
                Response response=okHttpClient.newCall(request).execute();
                return response.body().string();
            } catch (IOException e) {
                e.printStackTrace();
                return "";
            }


        }

            // Making a request to url and getting response






    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_gifimageview_ref extends Fragment {
    TextView text,head,content,text_m,head_m,content_m;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text=(TextView)view.findViewById(R.id.text_implementation);
        head=(TextView)view.findViewById(R.id.head_implementation);
        content=(TextView)view.findViewById(R.id.content_implementation);
        text_m=(TextView)view.findViewById(R.id.text_manifest);
        head_m=(TextView)view.findViewById(R.id.head_manifest);
        content_m=(TextView)view.findViewById(R.id.content_manifest);
//        text_m.setVisibility(View.VISIBLE);
//        head_m.setVisibility(View.VISIBLE);
//        content_m.setVisibility(View.VISIBLE);



        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n"+
                        "After Implementation sync now to implement the content \n"+
                        "Paste the Gif Image in drawable folder with .gif extension");
        content.setText("implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.+'");


//        head_m.setText("Manifest Guide");
//
//        text_m.setText("Click-->app-->Manifest-->(add permission)\n"+
//                "Add Permission before application tag:-(top of <application)");
//        content_m.setText("<uses-permission android:name=\"android.permission.INTERNET\" />");

        return view;
    }



}





package com.Learning.com;

import android.content.Context;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.List;

public class PeopleAdapter extends ExpandableRecyclerAdapter<PeopleAdapter.PeopleListItem> {
    public static final int TYPE_PERSON = 1001;

    public PeopleAdapter(Context context) {
        super(context);

        setItems(getSampleItems());
    }

    public static class PeopleListItem extends ExpandableRecyclerAdapter.ListItem {
        public String Text;

        public PeopleListItem(String group) {
            super(TYPE_HEADER);

            Text = group;
        }

        public PeopleListItem(String first, String last) {
            super(TYPE_PERSON);

            Text = first + " " + last;
        }
    }

    public class HeaderViewHolder extends ExpandableRecyclerAdapter.HeaderViewHolder {
        TextView name;

        public HeaderViewHolder(View view) {
            super(view, (ImageView) view.findViewById(R.id.img_arrow));

            name = (TextView) view.findViewById(R.id.txt_header_name);
        }

        public void bind(int position) {
            super.bind(position);

            name.setText(visibleItems.get(position).Text);
        }
    }

    public class PersonViewHolder extends ExpandableRecyclerAdapter.ViewHolder {
        EditText name;

        public PersonViewHolder(View view) {
            super(view);

            name = (EditText) view.findViewById(R.id.edt_description);
        }

        public void bind(int position) {
            name.setText(name.getText());
        }

    }

    @Override
    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        switch (viewType) {
            case TYPE_HEADER:
                return new HeaderViewHolder(inflate(R.layout.item_header, parent));
            case TYPE_PERSON:
            default:
                return new PersonViewHolder(inflate(R.layout.item_content, parent));
        }
    }

    @Override
    public void onBindViewHolder(ExpandableRecyclerAdapter.ViewHolder holder, int position) {
        switch (getItemViewType(position)) {
            case TYPE_HEADER:
                ((HeaderViewHolder) holder).bind(position);
                break;
            case TYPE_PERSON:
            default:
                ((PersonViewHolder) holder).bind(position);
                break;
        }
    }

    private List<PeopleListItem> getSampleItems() {
        List<PeopleListItem> items = new ArrayList<>();
        items.add(new PeopleListItem("Developer"));
        items.add(new PeopleListItem("", ""));
        items.add(new PeopleListItem("Developer"));
        items.add(new PeopleListItem("", ""));
        return items;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v7.app.AppCompatActivity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.ImageView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

import static android.content.Context.CLIPBOARD_SERVICE;

public class Fragment_TextView_java  extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.content.Intent;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n"+
            "        TextView textview=(TextView)findViewById(R.id.textview);\n" +
            "        textview.setText(\"This is a Textview\")"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);

        return view;
    }



}


package com.Learning.com;

import android.os.Bundle;
import android.speech.tts.TextToSpeech;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CompoundButton;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.ToggleButton;

import java.util.Locale;

public class Fragment_text_speech_demo extends Fragment {
    String text;
    TextToSpeech tts;
    TextView text_view;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_text_speech_demo, container, false);
        text_view=(TextView)view.findViewById(R.id.text_view);
        tts = new TextToSpeech(getActivity(), new TextToSpeech.OnInitListener() {
            @Override
            public void onInit(int status) {
                // TODO Auto-generated method stub
                if (status == TextToSpeech.SUCCESS) {
                    int result = tts.setLanguage(Locale.US);
                    if (result == TextToSpeech.LANG_MISSING_DATA ||
                            result == TextToSpeech.LANG_NOT_SUPPORTED) {
                        Log.e("error", "This Language is not supported");
                    } else {
                        ConvertTextToSpeech();
                    }
                } else
                    Log.e("error", "Initilization Failed!");
            }
        });
        text_view.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                ConvertTextToSpeech();
            }
        });
    return view;
    }

    @Override
    public void onPause() {
        // TODO Auto-generated method stub

        if (tts != null) {

            tts.stop();
            tts.shutdown();
        }
        super.onPause();
    }



    private void ConvertTextToSpeech() {
        // TODO Auto-generated method stub
        text = "Hii Developers";
        if (text == null || "".equals(text)) {
            text = "Content not available";
            tts.speak(text, TextToSpeech.QUEUE_FLUSH, null);
        } else
            tts.speak(text + "is saved", TextToSpeech.QUEUE_FLUSH, null);


    }


}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TimePicker;
import android.widget.Toast;

public class Fragment_clock_demo extends Fragment {
    TimePicker timePicker;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_clok_demo, container, false);
        timePicker=(TimePicker)view.findViewById(R.id.time);
        timePicker.setOnTimeChangedListener(new TimePicker.OnTimeChangedListener() {
            @Override
            public void onTimeChanged(TimePicker view, int hourOfDay, int minute) {
                String time=(hourOfDay+"-"+minute);
                Toast.makeText(getActivity(), time, Toast.LENGTH_SHORT).show();
            }
        });
        return view;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_SearchView_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2;
    TextView title2;
    String Code=" <RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:layout_width=\"fill_parent\"\n" +
            "    android:layout_height=\"fill_parent\">\n" +
            "\n" +
            "    <SearchView\n" +
            "        android:id=\"@+id/search\"\n" +
            "        android:layout_width=\"fill_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:iconifiedByDefault=\"false\">\n" +
            "\n" +
            "        <requestFocus />\n" +
            "    </SearchView>\n" +
            "\n" +
            "    <ListView\n" +
            "        android:id=\"@+id/listview\"\n" +
            "        android:layout_width=\"fill_parent\"\n" +
            "        android:layout_height=\"fill_parent\"\n" +
            "        android:layout_below=\"@+id/search\" />\n" +
            "\n" +
            "</RelativeLayout>";
    String code2="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:layout_width=\"fill_parent\"\n" +
            "    android:layout_height=\"fill_parent\"\n" +
            "    android:orientation=\"horizontal\"\n" +
            "    android:padding=\"10dp\">\n" +
            "\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/nameLabel\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Version : \"/>\n" +
            "\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/name\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "     />\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("listview_items.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_image_server_ref extends Fragment {
    TextView text,head,content,text_m,head_m,content_m;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text=(TextView)view.findViewById(R.id.text_implementation);
        head=(TextView)view.findViewById(R.id.head_implementation);
        content=(TextView)view.findViewById(R.id.content_implementation);
        text_m=(TextView)view.findViewById(R.id.text_manifest);
        head_m=(TextView)view.findViewById(R.id.head_manifest);
        content_m=(TextView)view.findViewById(R.id.content_manifest);
        text_m.setVisibility(View.VISIBLE);
        head_m.setVisibility(View.VISIBLE);
        content_m.setVisibility(View.VISIBLE);



        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n"+
                "After Implementation sync now to implement the content");
        content.setText("    implementation 'com.android.support:recyclerview-v7:27.0.0'\n" +
                "    implementation 'com.android.support:cardview-v7:28.0.0'\n" +
                "    implementation 'com.squareup.okhttp3:okhttp:3.9.1'\n" +
                "    implementation 'org.apache.commons:commons-lang3:3.5'");


        head_m.setText("Manifest Guide");

        text_m.setText("Click-->app-->Manifest-->(add permission)\n"+
                "Add Permission before application tag:-(top of <application)");
        content_m.setText("<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n" +
                "    <uses-permission android:name=\"android.permission.INTERNET\" />\n" +
                "    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\n" +
                "    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />");

        return view;
    }



}




package com.Learning.com;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;
import android.widget.TextView;

import java.util.HashMap;
import java.util.List;

public class ExpandableAdapter extends BaseExpandableListAdapter {
    private Context context;
    private HashMap<String, List<String>> childtitles;
    List<String>headertitles;
    public ExpandableAdapter(Context context,List<String>headertitles,HashMap<String,List<String>>childtitles){
        this.context=context;
        this.childtitles=childtitles;
        this.headertitles=headertitles;
    }
    @Override
    public int getGroupCount() {
        return headertitles.size();
    }

    @Override
    public int getChildrenCount(int groupPosition) {
        return this.childtitles.get(this.headertitles.get(groupPosition)).size();
    }

    @Override
    public Object getGroup(int groupPosition) {
        return this.headertitles.get(groupPosition);
    }

    @Override
    public Object getChild(int groupPosition, int childPosition) {
        return this.childtitles.get(this.headertitles.get(groupPosition)).get(childPosition);
    }

    @Override
    public long getGroupId(int groupPosition) {
        return groupPosition;
    }

    @Override
    public long getChildId(int groupPosition, int childPosition) {
        return childPosition;
    }

    @Override
    public boolean hasStableIds() {
        return false;
    }

    @Override
    public View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent) {
        String listTitle=(String)getGroup(groupPosition);
        if(convertView==null) {
            LayoutInflater layoutInflater = (LayoutInflater) this.context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            convertView = layoutInflater.inflate(R.layout.exp_group_header, null);
        }
        TextView listTitleTextView=(TextView)convertView.findViewById(R.id.title);
        listTitleTextView.setText(listTitle);

        return convertView;
    }

    @Override
    public View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent) {
        final String expandedListText=(String)getChild(groupPosition,childPosition);
        if(convertView==null) {
            LayoutInflater layoutInflater = (LayoutInflater) this.context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            convertView = layoutInflater.inflate(R.layout.exp_child_item, null);
        }
        TextView expandedListTextView=(TextView)convertView.findViewById(R.id.childitem);
        expandedListTextView.setText(expandedListText);

        return convertView;
    }

    @Override
    public boolean isChildSelectable(int groupPosition, int childPosition) {
        return true;
    }

}





package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_webview_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.Menu;\n" +
            "import android.view.MenuItem;\n" +
            "import android.webkit.WebSettings;\n" +
            "import android.webkit.WebView;\n" +
            "import android.webkit.WebViewClient;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "\n" +
            "    private WebView mWebView;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "\n" +
            "\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        mWebView = (WebView) findViewById(R.id.webview);\n" +
            "        mWebView.loadUrl(\"https://www.google.com\");\n" +
            "        mWebView.setWebViewClient(new WebViewClient());\n" +
            "        WebSettings webSettings = mWebView.getSettings();\n" +
            "        webSettings.setJavaScriptEnabled(true);\n" +
            "    }\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "}"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_expandable_re_view_ref extends Fragment {
    TextView text,head,content,text_m,head_m,content_m;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text=(TextView)view.findViewById(R.id.text_implementation);
        head=(TextView)view.findViewById(R.id.head_implementation);
        content=(TextView)view.findViewById(R.id.content_implementation);
        text_m=(TextView)view.findViewById(R.id.text_manifest);
        head_m=(TextView)view.findViewById(R.id.head_manifest);
        content_m=(TextView)view.findViewById(R.id.content_manifest);
//        text_m.setVisibility(View.VISIBLE);
//        head_m.setVisibility(View.VISIBLE);
//        content_m.setVisibility(View.VISIBLE);



        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n"+
                "After Implementation sync now to implement the content");
        content.setText("    implementation 'com.android.support:recyclerview-v7:27.0.0'\n" +
                "    implementation 'com.android.support:cardview-v7:28.0.0'");


//        head_m.setText("Manifest Guide");
//
//        text_m.setText("Click-->app-->Manifest-->(add permission)\n"+
//                "Add Permission before application tag:-(top of <application)");
//        content_m.setText("<uses-permission android:name=\"android.permission.INTERNET\" />");

        return view;
    }



}





package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_okhttp_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.content.Context;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.app.ProgressDialog;\n" +
            "import android.os.AsyncTask;\n" +
            "import android.util.Log;\n" +
            "import android.widget.ListAdapter;\n" +
            "import android.widget.ListView;\n" +
            "import android.widget.SimpleAdapter;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "import org.json.JSONArray;\n" +
            "import org.json.JSONException;\n" +
            "import org.json.JSONObject;\n" +
            "\n" +
            "import java.io.IOException;\n" +
            "import java.util.ArrayList;\n" +
            "import java.util.HashMap;\n" +
            "\n" +
            "import okhttp3.OkHttpClient;\n" +
            "import okhttp3.Request;\n" +
            "import okhttp3.Response;\n" +
            "\n" +
            "import static android.support.constraint.Constraints.TAG;\n" +
            "\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    Context context=this;\n" +
            "    private static String url = \"https://api.androidhive.info/contacts/\";\n" +
            "    ArrayList<HashMap<String, String>> contactList;\n" +
            "    ListView lv;\n" +
            "    private ProgressDialog pDialog;\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        contactList = new ArrayList<>();\n" +
            "\n" +
            "        lv = (ListView)findViewById(R.id.list);\n" +
            "        new GetContacts().execute();\n" +
            "    }\n" +
            "    private class GetContacts extends AsyncTask<Void, Void, String> {\n" +
            "        String jsonStr;\n" +
            "\n" +
            "        @Override\n" +
            "        protected void onPreExecute() {\n" +
            "            super.onPreExecute();\n" +
            "            // Showing progress dialog\n" +
            "            pDialog = new ProgressDialog(context);\n" +
            "            pDialog.setMessage(\"Please wait...\");\n" +
            "            pDialog.setCancelable(false);\n" +
            "            pDialog.show();\n" +
            "\n" +
            "        }\n" +
            "        @Override\n" +
            "        protected void onPostExecute(String result) {\n" +
            "            super.onPostExecute(result);\n" +
            "            // Dismiss the progress dialog\n" +
            "            jsonStr = String.valueOf(result);\n" +
            "            if (pDialog.isShowing())\n" +
            "                pDialog.dismiss();\n" +
            "            /**\n" +
            "             * Updating parsed JSON data into ListView\n" +
            "             * */\n" +
            "            Log.e(TAG, \"Response from url: \" + jsonStr);\n" +
            "\n" +
            "            if (jsonStr != null) {\n" +
            "                try {\n" +
            "                    JSONObject jsonObj = new JSONObject(jsonStr);\n" +
            "\n" +
            "                    // Getting JSON Array node\n" +
            "                    JSONArray contacts = jsonObj.getJSONArray(\"contacts\");\n" +
            "\n" +
            "                    // looping through All Contacts\n" +
            "                    for (int i = 0; i < contacts.length(); i++) {\n" +
            "                        JSONObject c = contacts.getJSONObject(i);\n" +
            "\n" +
            "                        String id = c.getString(\"id\");\n" +
            "                        String name = c.getString(\"name\");\n" +
            "                        String email = c.getString(\"email\");\n" +
            "                        String address = c.getString(\"address\");\n" +
            "                        String gender = c.getString(\"gender\");\n" +
            "\n" +
            "                        // Phone node is JSON Object\n" +
            "                        JSONObject phone = c.getJSONObject(\"phone\");\n" +
            "                        String mobile = phone.getString(\"mobile\");\n" +
            "                        String home = phone.getString(\"home\");\n" +
            "                        String office = phone.getString(\"office\");\n" +
            "\n" +
            "                        // tmp hash map for single contact\n" +
            "                        HashMap<String, String> contact = new HashMap<>();\n" +
            "\n" +
            "                        // adding each child node to HashMap key => value\n" +
            "                        contact.put(\"id\", id);\n" +
            "                        contact.put(\"name\", name);\n" +
            "                        contact.put(\"email\", email);\n" +
            "                        contact.put(\"mobile\", mobile);\n" +
            "\n" +
            "                        // adding contact to contact list\n" +
            "                        contactList.add(contact);\n" +
            "                    }\n" +
            "                } catch (final JSONException e) {\n" +
            "                    Log.e(TAG, \"Json parsing error: \" + e.getMessage());\n" +
            "                    runOnUiThread(new Runnable() {\n" +
            "                        @Override\n" +
            "                        public void run() {\n" +
            "                            Toast.makeText(context, \"Json parsing error: \" + e.getMessage(), Toast.LENGTH_LONG).show();\n" +
            "                        }\n" +
            "                    });\n" +
            "\n" +
            "                }\n" +
            "            } else {\n" +
            "                Log.e(TAG, \"Couldn't get json from server.\");\n" +
            "                runOnUiThread(new Runnable() {\n" +
            "                    @Override\n" +
            "                    public void run() {\n" +
            "                        Toast.makeText(context, \"Couldn't get json from server. Check LogCat for possible errors!\", Toast.LENGTH_LONG).show();\n" +
            "                    }\n" +
            "                });\n" +
            "\n" +
            "            }\n" +
            "\n" +
            "\n" +
            "            ListAdapter adapter = new SimpleAdapter(MainActivity.this, contactList, R.layout.listitem, new String[]{\"name\", \"email\", \"mobile\"}, new int[]{R.id.name, R.id.email, R.id.mobile});\n" +
            "\n" +
            "            lv.setAdapter(adapter);\n" +
            "        }\n" +
            "\n" +
            "        @Override\n" +
            "        protected String doInBackground(Void... voids) {\n" +
            "            OkHttpClient okHttpClient=new OkHttpClient();\n" +
            "            Request request=new Request.Builder()\n" +
            "                    .url(url)\n" +
            "                    .build();\n" +
            "            try {\n" +
            "                Response response=okHttpClient.newCall(request).execute();\n" +
            "                return response.body().string();\n" +
            "            } catch (IOException e) {\n" +
            "                e.printStackTrace();\n" +
            "                return \"\";\n" +
            "            }\n" +
            "\n" +
            "\n" +
            "        }\n" +
            "\n" +
            "        // Making a request to url and getting response\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}




package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

public class Fragment_textview_demo extends Fragment {
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_textview_demo, container, false);
        return view;
    }
}

package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_text_speech_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.speech.tts.TextToSpeech;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.util.Log;\n" +
            "import android.view.View;\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "import java.util.Locale;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    String text;\n" +
            "    TextToSpeech tts;\n" +
            "    TextView text_view;\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        text_view=(TextView)findViewById(R.id.text_view);\n" +
            "        tts = new TextToSpeech(MainActivity.this, new TextToSpeech.OnInitListener() {\n" +
            "            @Override\n" +
            "            public void onInit(int status) {\n" +
            "                // TODO Auto-generated method stub\n" +
            "                if (status == TextToSpeech.SUCCESS) {\n" +
            "                    int result = tts.setLanguage(Locale.US);\n" +
            "                    if (result == TextToSpeech.LANG_MISSING_DATA ||\n" +
            "                            result == TextToSpeech.LANG_NOT_SUPPORTED) {\n" +
            "                        Log.e(\"error\", \"This Language is not supported\");\n" +
            "                    } else {\n" +
            "                        ConvertTextToSpeech();\n" +
            "                    }\n" +
            "                } else\n" +
            "                    Log.e(\"error\", \"Initilization Failed!\");\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onPause() {\n" +
            "        // TODO Auto-generated method stub\n" +
            "\n" +
            "        if (tts != null) {\n" +
            "\n" +
            "            tts.stop();\n" +
            "            tts.shutdown();\n" +
            "        }\n" +
            "        super.onPause();\n" +
            "    }\n" +
            "\n" +
            "    public void onClick(View v) {\n" +
            "\n" +
            "        ConvertTextToSpeech();\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "    private void ConvertTextToSpeech() {\n" +
            "        // TODO Auto-generated method stub\n" +
            "        text = \"Hi developers\";\n" +
            "        if (text == null || \"\".equals(text)) {\n" +
            "            text = \"Content not available\";\n" +
            "            tts.speak(text, TextToSpeech.QUEUE_FLUSH, null);\n" +
            "        } else\n" +
            "            tts.speak(text + \"is saved\", TextToSpeech.QUEUE_FLUSH, null);\n" +
            "\n" +
            "\n" +
            "    }\n" +
            "}\n"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_clock_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.widget.TimePicker;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "TimePicker timePicker;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        timePicker=(TimePicker)findViewById(R.id.time);\n" +
            "        timePicker.setOnTimeChangedListener(new TimePicker.OnTimeChangedListener() {\n" +
            "            @Override\n" +
            "            public void onTimeChanged(TimePicker view, int hourOfDay, int minute) {\n" +
            "                String time=(hourOfDay+\"-\"+minute);\n" +
            "                Toast.makeText(MainActivity.this, time, Toast.LENGTH_SHORT).show();\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}




package com.Learning.com;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

public class Bundle_passing_demo extends AppCompatActivity {
Button btn;
EditText et_text;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_bundle_passing_demo);
        et_text=(EditText)findViewById(R.id.et_text);
        btn=(Button)findViewById(R.id.submit);
        btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String text=et_text.getText().toString();
                Intent intent=new Intent(Bundle_passing_demo.this,SecondActivity.class);
                intent.putExtra("text_sent",text);
                startActivity(intent);
            }
        });
    }

    }


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_json_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2;
    TextView title2;
    String Code=" <LinearLayout\n" +
            "    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "    <Button\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:id=\"@+id/fetch\"\n" +
            "        android:text=\"Fetch\"\n" +
            "        android:textAlignment=\"center\"\n" +
            "        android:background=\"@android:color/holo_blue_dark\"\n" +
            "        android:textColor=\"@android:color/white\"\n" +
            "        android:layout_marginTop=\"100dp\"/>\n" +
            "    <ListView\n" +
            "        android:id=\"@+id/list\"\n" +
            "        android:layout_width=\"fill_parent\"\n" +
            "        android:layout_height=\"wrap_content\" />\n" +
            "\n" +
            "</LinearLayout>";
    String code2="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:layout_width=\"fill_parent\"\n" +
            "    android:layout_height=\"wrap_content\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/name\"\n" +
            "        android:layout_width=\"fill_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:paddingBottom=\"2dip\"\n" +
            "        android:paddingTop=\"6dip\"\n" +
            "        android:textColor=\"@color/colorPrimaryDark\"\n" +
            "        android:textSize=\"16sp\"\n" +
            "        android:textStyle=\"bold\" />\n" +
            "\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/email\"\n" +
            "        android:layout_width=\"fill_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:paddingBottom=\"2dip\"\n" +
            "        android:textColor=\"@color/colorAccent\" />\n" +
            "\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/mobile\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:textColor=\"#5d5d5d\"\n" +
            "        android:textStyle=\"bold\" />\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("listitem.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;

public class Fragment_webview_demo extends Fragment {
    private WebView mWebView;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_webview_demo, container, false);
        mWebView = (WebView) view.findViewById(R.id.webview);
        mWebView.loadUrl("http://www.google.com/");
        mWebView.setWebViewClient(new WebViewClient());
        WebSettings webSettings = mWebView.getSettings();
        webSettings.setJavaScriptEnabled(true);
        return view;
    }
}

package com.Learning.com;

import android.app.AlertDialog;
import android.content.Context;
import android.database.Cursor;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class Fragment_sql_demo extends Fragment {
    DatabaseHelper myDb;
    EditText editName,editSurname,editMarks ,editTextId;
    Button btnAddData;
    Button btnviewAll;
    Button btnDelete;
    Context context;
    Button btnviewUpdate;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_sql_demo, container, false);
        myDb = new DatabaseHelper(getActivity());

        editName = (EditText)view.findViewById(R.id.editText_name);
        editSurname = (EditText)view.findViewById(R.id.editText_surname);
        editMarks = (EditText)view.findViewById(R.id.editText_Marks);
        editTextId = (EditText)view.findViewById(R.id.editText_id);
        btnAddData = (Button)view.findViewById(R.id.button_add);
        btnviewAll = (Button)view.findViewById(R.id.button_viewAll);
        btnviewUpdate= (Button)view.findViewById(R.id.button_update);
        btnDelete= (Button)view.findViewById(R.id.button_delete);
        AddData();
        viewAll();
        UpdateData();
        DeleteData();
        return view;
    }
    public void DeleteData() {
        btnDelete.setOnClickListener(
                new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        Integer deletedRows = myDb.deleteData(editTextId.getText().toString());
                        if(deletedRows > 0)
                            Toast.makeText(getActivity(),"Data Deleted",Toast.LENGTH_LONG).show();
                        else
                            Toast.makeText(getActivity(),"Data not Deleted",Toast.LENGTH_LONG).show();
                    }
                }
        );
    }
    public void UpdateData() {
        btnviewUpdate.setOnClickListener(
                new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        boolean isUpdate = myDb.updateData(editTextId.getText().toString(),
                                editName.getText().toString(),
                                editSurname.getText().toString(),editMarks.getText().toString());
                        if(isUpdate == true)
                            Toast.makeText(getActivity(),"Data Update",Toast.LENGTH_LONG).show();
                        else
                            Toast.makeText(getActivity(),"Data not Updated",Toast.LENGTH_LONG).show();
                    }
                }
        );
    }
    public  void AddData() {
        btnAddData.setOnClickListener(
                new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        boolean isInserted = myDb.insertData(editName.getText().toString(),
                                editSurname.getText().toString(),
                                editMarks.getText().toString() );
                        if(isInserted == true)
                            Toast.makeText(getActivity(),"Data Inserted",Toast.LENGTH_LONG).show();
                        else
                            Toast.makeText(getActivity(),"Data not Inserted",Toast.LENGTH_LONG).show();
                    }
                }
        );
    }

    public void viewAll() {
        btnviewAll.setOnClickListener(
                new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        Cursor res = myDb.getAllData();
                        if(res.getCount() == 0) {
                            // show message
                            showMessage("Error","Nothing found");
                            return;
                        }

                        StringBuffer buffer = new StringBuffer();
                        while (res.moveToNext()) {
                            buffer.append("Id :"+ res.getString(0)+"\n");
                            buffer.append("Name :"+ res.getString(1)+"\n");
                            buffer.append("Surname :"+ res.getString(2)+"\n");
                            buffer.append("Marks :"+ res.getString(3)+"\n\n");
                        }

                        // Show all data
                        showMessage("Data",buffer.toString());
                    }
                }
        );
    }

    public void showMessage(String title,String Message){
        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
        builder.setCancelable(true);
        builder.setTitle(title);
        builder.setMessage(Message);
        builder.show();
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_swiperefreshlayout_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "<android.support.v4.widget.SwipeRefreshLayout\n" +
            "    android:id=\"@+id/swipe\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\">\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Hello World!\" />\n" +
            "</android.support.v4.widget.SwipeRefreshLayout>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_custom_xml_java extends Fragment {
    TextView text,head;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_textview_ref, container, false);
        text=(TextView)view.findViewById(R.id.text);
        head=(TextView)view.findViewById(R.id.head);
        head.setText("Create Activity& Condition for scrollView");

        text.setText("Click-->File-->New-->Activity-->EmptyActivity\n" +
                "Click-->app-->java-->(package name)-->New-->Java Class\n"+
                "Click-->app-->res-->layout-->New-->Layout resource file\n"+
                "(Small letters only allowed)");
        return view;
    }



}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_dialer_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.content.Intent;\n" +
            "import android.net.Uri;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.EditText;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "EditText et_text;\n" +
            "Button btn;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        et_text=(EditText)findViewById(R.id.et_text);\n" +
            "        btn=(Button)findViewById(R.id.submit);\n" +
            "        btn.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                String text=\"tel:\"+et_text.getText().toString();\n" +
            "                Intent intent = new Intent(Intent.ACTION_DIAL);\n" +
            "                intent.setData(Uri.parse(text));\n" +
            "                startActivity(intent);\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}





package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_Navigationdrawer_ref extends Fragment {
    TextView text,head;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_textview_ref, container, false);
        text=(TextView)view.findViewById(R.id.text);
        head=(TextView)view.findViewById(R.id.head);
        head.setText("Create Activity");

        text.setText("Click-->File-->New-->Activity-->NavigationDrawerActivity");

        return view;
    }



}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_bottomNavigation_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.os.Bundle;\n" +
            "import android.support.annotation.NonNull;\n" +
            "import android.support.design.widget.BottomNavigationView;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.view.MenuItem;\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "public class BottomNavigation extends AppCompatActivity {\n" +
            "\n" +
            "    private TextView mTextMessage;\n" +
            "\n" +
            "    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener\n" +
            "            = new BottomNavigationView.OnNavigationItemSelectedListener() {\n" +
            "\n" +
            "        @Override\n" +
            "        public boolean onNavigationItemSelected(@NonNull MenuItem item) {\n" +
            "            switch (item.getItemId()) {\n" +
            "                case R.id.navigation_home:\n" +
            "                    mTextMessage.setText(R.string.title_home);\n" +
            "                    return true;\n" +
            "                case R.id.navigation_dashboard:\n" +
            "                    mTextMessage.setText(R.string.title_dashboard);\n" +
            "                    return true;\n" +
            "                case R.id.navigation_notifications:\n" +
            "                    mTextMessage.setText(R.string.title_notifications);\n" +
            "                    return true;\n" +
            "                case R.id.demo:\n" +
            "                    mTextMessage.setText(\"Demo\");\n" +
            "                    return true;\n" +
            "            }\n" +
            "            return false;\n" +
            "        }\n" +
            "    };\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_bottom_navigation);\n" +
            "\n" +
            "        mTextMessage = (TextView) findViewById(R.id.message);\n" +
            "        BottomNavigationView navigation = (BottomNavigationView) findViewById(R.id.navigation);\n" +
            "        navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);\n" +
            "    }\n" +
            "\n" +
            "}\n"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;
import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_EditText_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "        xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"match_parent\"\n" +
            "        android:orientation=\"vertical\"\n" +
            "        tools:context=\".MainActivity\">\n" +
            "    <EditText\n" +
            "        android:id=\"@+id/et_text\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:hint=\"Please click to type\"\n" +
            "        android:textColorHint=\"@android:color/black\" />\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:id=\"@+id/btn\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"10dp\"\n" +
            "        android:text=\"submit\"\n" +
            "        android:background=\"@android:color/holo_green_dark\"\n" +
            "        android:textColor=\"@android:color/white\"\n" +
            "        android:textStyle=\"bold\"/>\n"
    ;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_AdvancedWebView_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.annotation.SuppressLint;\n" +
            "import android.content.Intent;\n" +
            "import android.graphics.Bitmap;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "import im.delight.android.webview.AdvancedWebView;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity implements AdvancedWebView.Listener {\n" +
            "\n" +
            "    private AdvancedWebView mWebView;\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "\n" +
            "        mWebView = (AdvancedWebView) findViewById(R.id.webview);\n" +
            "        mWebView.setListener(this, this);\n" +
            "        mWebView.loadUrl(\"http://www.google.com/\");\n" +
            "\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "    @SuppressLint(\"NewApi\")\n" +
            "    @Override\n" +
            "    protected void onResume() {\n" +
            "        super.onResume();\n" +
            "        mWebView.onResume();\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "    @SuppressLint(\"NewApi\")\n" +
            "    @Override\n" +
            "    protected void onPause() {\n" +
            "        mWebView.onPause();\n" +
            "\n" +
            "        super.onPause();\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onDestroy() {\n" +
            "        mWebView.onDestroy();\n" +
            "\n" +
            "        super.onDestroy();\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onActivityResult(int requestCode, int resultCode, Intent intent) {\n" +
            "        super.onActivityResult(requestCode, resultCode, intent);\n" +
            "        mWebView.onActivityResult(requestCode, resultCode, intent);\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onBackPressed() {\n" +
            "        if (!mWebView.onBackPressed()) { return; }\n" +
            "\n" +
            "        super.onBackPressed();\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onPageStarted(String url, Bitmap favicon) {\n" +
            "        Toast.makeText(MainActivity.this, \"Loading...\", Toast.LENGTH_SHORT).show();\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onPageFinished(String url) {\n" +
            "        Toast.makeText(MainActivity.this, \"Loading Finished...\", Toast.LENGTH_SHORT).show();\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onPageError(int errorCode, String description, String failingUrl) {\n" +
            "        Toast.makeText(MainActivity.this, \"An Error Occured During Loading\", Toast.LENGTH_SHORT).show();\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onDownloadRequested(String url, String suggestedFilename, String mimeType, long contentLength, String contentDisposition, String userAgent) { }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onExternalPageRequest(String url) { }\n" +
            "\n" +
            "}";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}





package com.Learning.com;

import android.app.Activity;
import android.app.AlertDialog;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

public class Fragment_custom_alertdialog_demo extends Fragment {
    Button button;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_custom_alertdialog_demo, container, false);
        button=(Button)view.findViewById(R.id.btn);
        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                show();
            }
        });
        return view;
    }
    public void show(){
        Activity activity = null;
        AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(getActivity());
        Button close;

        final AlertDialog alertDialog = dialogBuilder.create();
        LayoutInflater factory = LayoutInflater.from(getActivity());
        final View vi = factory.inflate(R.layout.custom_layout_alertdialog, null);
        close=(Button)vi.findViewById(R.id.back);
        close.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                alertDialog.cancel();
            }
        });







        alertDialog.setView(vi);
        alertDialog.show();
        alertDialog.setCancelable(false);


    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Toast;

public class Fragment_button_demo extends Fragment {
    Button btn;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_button_demo, container, false);
        btn=(Button)view.findViewById(R.id.btn);
        btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(getActivity(), "Button Clicked", Toast.LENGTH_SHORT).show();
            }
        });
        return view;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_pdfcreator_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.Manifest;\n" +
            "import android.content.DialogInterface;\n" +
            "import android.content.Intent;\n" +
            "import android.content.pm.PackageManager;\n" +
            "import android.net.Uri;\n" +
            "import android.os.Build;\n" +
            "import android.os.Bundle;\n" +
            "import android.os.Environment;\n" +
            "import android.support.v4.app.ActivityCompat;\n" +
            "import android.support.v7.app.AlertDialog;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.util.Log;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.EditText;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "import com.itextpdf.text.Document;\n" +
            "import com.itextpdf.text.DocumentException;\n" +
            "import com.itextpdf.text.Paragraph;\n" +
            "import com.itextpdf.text.pdf.PdfWriter;\n" +
            "\n" +
            "import java.io.File;\n" +
            "import java.io.FileNotFoundException;\n" +
            "import java.io.FileOutputStream;\n" +
            "import java.io.OutputStream;\n" +
            "import java.util.List;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    private static final String TAG = \"PdfCreatorActivity\";\n" +
            "    private EditText mContentEditText;\n" +
            "    private Button mCreateButton;\n" +
            "    private File pdfFile;\n" +
            "    final private int REQUEST_CODE_ASK_PERMISSIONS = 111;\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        mContentEditText = (EditText) findViewById(R.id.edit_text_content);\n" +
            "        mCreateButton = (Button) findViewById(R.id.button_create);\n" +
            "        mCreateButton.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                if (mContentEditText.getText().toString().isEmpty()) {\n" +
            "                    mContentEditText.setError(\"Body is empty\");\n" +
            "                    mContentEditText.requestFocus();\n" +
            "                    return;\n" +
            "                }\n" +
            "                try {\n" +
            "                    createPdfWrapper();\n" +
            "                } catch (FileNotFoundException e) {\n" +
            "                    e.printStackTrace();\n" +
            "                } catch (DocumentException e) {\n" +
            "                    e.printStackTrace();\n" +
            "                }\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "    private void createPdfWrapper() throws FileNotFoundException, DocumentException {\n" +
            "\n" +
            "        int hasWriteStoragePermission = ActivityCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE);\n" +
            "        if (hasWriteStoragePermission != PackageManager.PERMISSION_GRANTED) {\n" +
            "\n" +
            "            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n" +
            "                if (!shouldShowRequestPermissionRationale(Manifest.permission.WRITE_CONTACTS)) {\n" +
            "                    showMessageOKCancel(\"You need to allow access to Storage\",\n" +
            "                            new DialogInterface.OnClickListener() {\n" +
            "                                @Override\n" +
            "                                public void onClick(DialogInterface dialog, int which) {\n" +
            "                                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n" +
            "                                        requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},\n" +
            "                                                REQUEST_CODE_ASK_PERMISSIONS);\n" +
            "                                    }\n" +
            "                                }\n" +
            "                            });\n" +
            "                    return;\n" +
            "                }\n" +
            "\n" +
            "                requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},\n" +
            "                        REQUEST_CODE_ASK_PERMISSIONS);\n" +
            "            }\n" +
            "            return;\n" +
            "        } else {\n" +
            "            createPdf();\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {\n" +
            "        switch (requestCode) {\n" +
            "            case REQUEST_CODE_ASK_PERMISSIONS:\n" +
            "                if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n" +
            "                    // Permission Granted\n" +
            "                    try {\n" +
            "                        createPdfWrapper();\n" +
            "                    } catch (FileNotFoundException e) {\n" +
            "                        e.printStackTrace();\n" +
            "                    } catch (DocumentException e) {\n" +
            "                        e.printStackTrace();\n" +
            "                    }\n" +
            "                } else {\n" +
            "                    // Permission Denied\n" +
            "                    Toast.makeText(this, \"WRITE_EXTERNAL Permission Denied\", Toast.LENGTH_SHORT)\n" +
            "                            .show();\n" +
            "                }\n" +
            "                break;\n" +
            "            default:\n" +
            "                super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    private void showMessageOKCancel(String message, DialogInterface.OnClickListener okListener) {\n" +
            "        new AlertDialog.Builder(this)\n" +
            "                .setMessage(message)\n" +
            "                .setPositiveButton(\"OK\", okListener)\n" +
            "                .setNegativeButton(\"Cancel\", null)\n" +
            "                .create()\n" +
            "                .show();\n" +
            "    }\n" +
            "\n" +
            "    private void createPdf() throws FileNotFoundException, DocumentException {\n" +
            "\n" +
            "        File docsFolder = new File(Environment.getExternalStorageDirectory() + \"/Documents\");\n" +
            "        if (!docsFolder.exists()) {\n" +
            "            docsFolder.mkdir();\n" +
            "            Log.i(TAG, \"Created a new directory for PDF\");\n" +
            "        }\n" +
            "\n" +
            "        pdfFile = new File(docsFolder.getAbsolutePath(), \"HelloWorld.pdf\");\n" +
            "        OutputStream output = new FileOutputStream(pdfFile);\n" +
            "        Document document = new Document();\n" +
            "        PdfWriter.getInstance(document, output);\n" +
            "        document.open();\n" +
            "        document.add(new Paragraph(mContentEditText.getText().toString()));\n" +
            "\n" +
            "        document.close();\n" +
            "        previewPdf();\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "    private void previewPdf() {\n" +
            "\n" +
            "        PackageManager packageManager = getPackageManager();\n" +
            "        Intent testIntent = new Intent(Intent.ACTION_VIEW);\n" +
            "        testIntent.setType(\"application/pdf\");\n" +
            "        List list = packageManager.queryIntentActivities(testIntent, PackageManager.MATCH_DEFAULT_ONLY);\n" +
            "        if (list.size() > 0) {\n" +
            "            Intent intent = new Intent();\n" +
            "            intent.setAction(Intent.ACTION_VIEW);\n" +
            "            Uri uri = Uri.fromFile(pdfFile);\n" +
            "            intent.setDataAndType(uri, \"application/pdf\");\n" +
            "            startActivity(intent);\n" +
            "\n" +
            "\n" +
            "        } else {\n" +
            "\n" +
            "            Toast.makeText(this, \"Download a PDF Viewer to see the generated PDF\", Toast.LENGTH_SHORT).show();\n" +
            "        }\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}






package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.TextView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_image_server_java extends Fragment {
    TextView Title2;
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.app.ProgressDialog;\n" +
            "import android.content.Intent;\n" +
            "import android.graphics.Bitmap;\n" +
            "import android.app.Activity;\n" +
            "import android.os.AsyncTask;\n" +
            "import android.os.Bundle;\n" +
            "import android.util.Base64;\n" +
            "import android.util.Log;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.EditText;\n" +
            "import android.widget.ImageView;\n" +
            "import android.net.Uri;\n" +
            "import android.provider.MediaStore;\n" +
            "import android.widget.Toast;\n" +
            "import java.io.ByteArrayOutputStream;\n" +
            "import java.io.IOException;\n" +
            "import java.util.HashMap;\n" +
            "import java.io.InputStreamReader;\n" +
            "import java.io.OutputStream;\n" +
            "import java.util.HashMap;\n" +
            "import java.io.BufferedReader;\n" +
            "import java.net.URLEncoder;\n" +
            "import java.util.Map;\n" +
            "import java.io.BufferedWriter;\n" +
            "import java.io.OutputStreamWriter;\n" +
            "import java.net.URL;\n" +
            "import javax.net.ssl.HttpsURLConnection;\n" +
            "import java.io.UnsupportedEncodingException;\n" +
            "import java.net.HttpURLConnection;\n" +
            "\n" +
            "import okhttp3.OkHttpClient;\n" +
            "import okhttp3.Request;\n" +
            "import okhttp3.Response;\n" +
            "\n" +
            "public class MainActivity extends Activity {\n" +
            "\n" +
            "    Button GetImageFromGalleryButton, UploadImageOnServerButton;\n" +
            "\n" +
            "    ImageView ShowSelectedImage;\n" +
            "\n" +
            "    EditText GetImageName;\n" +
            "\n" +
            "    Bitmap FixBitmap;\n" +
            "\n" +
            "    String ImageTag = \"image_tag\" ;\n" +
            "\n" +
            "    String ImageName = \"image_data\" ;\n" +
            "\n" +
            "    String ServerUploadPath =\"http://192.168.1.7/limstest/index.php/api/upload_payment_documents\" ;\n" +
            "\n" +
            "    ProgressDialog progressDialog ;\n" +
            "\n" +
            "    ByteArrayOutputStream byteArrayOutputStream ;\n" +
            "\n" +
            "    byte[] byteArray ;\n" +
            "\n" +
            "    String ConvertImage ;\n" +
            "\n" +
            "    String GetImageNameFromEditText;\n" +
            "\n" +
            "    HttpURLConnection httpURLConnection ;\n" +
            "\n" +
            "    URL url;\n" +
            "\n" +
            "    OutputStream outputStream;\n" +
            "\n" +
            "    BufferedWriter bufferedWriter ;\n" +
            "\n" +
            "    int RC ;\n" +
            "\n" +
            "    BufferedReader bufferedReader ;\n" +
            "\n" +
            "    StringBuilder stringBuilder;\n" +
            "\n" +
            "    boolean check = true;\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "\n" +
            "        GetImageFromGalleryButton = (Button)findViewById(R.id.button);\n" +
            "\n" +
            "        UploadImageOnServerButton = (Button)findViewById(R.id.button2);\n" +
            "\n" +
            "        ShowSelectedImage = (ImageView)findViewById(R.id.imageView);\n" +
            "\n" +
            "        GetImageName = (EditText)findViewById(R.id.editText);\n" +
            "\n" +
            "\n" +
            "        byteArrayOutputStream = new ByteArrayOutputStream();\n" +
            "\n" +
            "        GetImageFromGalleryButton.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View view) {\n" +
            "\n" +
            "                Intent intent = new Intent();\n" +
            "\n" +
            "                intent.setType(\"image/*\");\n" +
            "\n" +
            "                intent.setAction(Intent.ACTION_GET_CONTENT);\n" +
            "\n" +
            "                startActivityForResult(Intent.createChooser(intent, \"Select Image From Gallery\"), 1);\n" +
            "\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "\n" +
            "        UploadImageOnServerButton.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View view) {\n" +
            "\n" +
            "                GetImageNameFromEditText = GetImageName.getText().toString();\n" +
            "\n" +
            "                UploadImageToServer();\n" +
            "                Intent intent=new Intent(MainActivity.this,MainActivity.class);\n" +
            "                startActivity(intent);\n" +
            "\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onActivityResult(int RC, int RQC, Intent I) {\n" +
            "\n" +
            "        super.onActivityResult(RC, RQC, I);\n" +
            "\n" +
            "        if (RC == 1 && RQC == RESULT_OK && I != null && I.getData() != null) {\n" +
            "\n" +
            "            Uri uri = I.getData();\n" +
            "\n" +
            "            try {\n" +
            "\n" +
            "                FixBitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), uri);\n" +
            "\n" +
            "                ShowSelectedImage.setImageBitmap(FixBitmap);\n" +
            "\n" +
            "            } catch (IOException e) {\n" +
            "\n" +
            "                e.printStackTrace();\n" +
            "            }\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    public void UploadImageToServer(){\n" +
            "        try {\n" +
            "\n" +
            "            FixBitmap.compress(Bitmap.CompressFormat.JPEG, 100, byteArrayOutputStream);\n" +
            "\n" +
            "            byteArray = byteArrayOutputStream.toByteArray();\n" +
            "\n" +
            "            ConvertImage = Base64.encodeToString(byteArray, Base64.DEFAULT);\n" +
            "\n" +
            "            class AsyncTaskUploadClass extends AsyncTask<Void, Void, String> {\n" +
            "\n" +
            "                @Override\n" +
            "                protected void onPreExecute() {\n" +
            "\n" +
            "                    super.onPreExecute();\n" +
            "\n" +
            "                    progressDialog = ProgressDialog.show(MainActivity.this, \"Image is Uploading\", \"Please Wait\", false, false);\n" +
            "                }\n" +
            "\n" +
            "                @Override\n" +
            "                protected void onPostExecute(String string1) {\n" +
            "\n" +
            "                    super.onPostExecute(string1);\n" +
            "                    Log.i(\"postexe\",\"******\"+string1);\n" +
            "\n" +
            "                    progressDialog.dismiss();\n" +
            "\n" +
            "                    Toast.makeText(MainActivity.this, string1 + \"response\", Toast.LENGTH_LONG).show();\n" +
            "                }\n" +
            "\n" +
            "                @Override\n" +
            "                protected String doInBackground(Void... params) {\n" +
            "\n" +
            "                    ImageProcessClass imageProcessClass = new ImageProcessClass();\n" +
            "\n" +
            "                    HashMap<String, String> HashMapParams = new HashMap<String, String>();\n" +
            "\n" +
            "                    HashMapParams.put(ImageTag, GetImageNameFromEditText);\n" +
            "\n" +
            "                    HashMapParams.put(ImageName, \"data:image/jpeg;base64,\"+ConvertImage);\n" +
            "                    Log.i(\"base64\",\"************\"+ConvertImage);\n" +
            "                    OkHttpClient client=new OkHttpClient();\n" +
            "                    Request request=new Request.Builder()\n" +
            "                            .url(ServerUploadPath)\n" +
            "                            .build();\n" +
            "                    try {\n" +
            "                        Response response=client.newCall(request).execute();\n" +
            "                        Log.i(\"res1\",\"+++++++\"+response);\n" +
            "                        Log.i(\"res2\",\"********\"+response.body().string());\n" +
            "                    } catch (IOException e) {\n" +
            "                        e.printStackTrace();\n" +
            "                    }\n" +
            "\n" +
            "\n" +
            "                    String FinalData = imageProcessClass.ImageHttpRequest(ServerUploadPath, HashMapParams);\n" +
            "\n" +
            "                    return FinalData;\n" +
            "                }\n" +
            "            }\n" +
            "            AsyncTaskUploadClass AsyncTaskUploadClassOBJ = new AsyncTaskUploadClass();\n" +
            "            AsyncTaskUploadClassOBJ.execute();\n" +
            "        }catch (NullPointerException e){\n" +
            "            Toast.makeText(this, \"Please select the image\", Toast.LENGTH_SHORT).show();\n" +
            "            e.printStackTrace();\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    public class ImageProcessClass{\n" +
            "\n" +
            "        public String ImageHttpRequest(String requestURL,HashMap<String, String> PData) {\n" +
            "\n" +
            "            StringBuilder stringBuilder = new StringBuilder();\n" +
            "\n" +
            "            try {\n" +
            "                url = new URL(requestURL);\n" +
            "\n" +
            "                httpURLConnection = (HttpURLConnection) url.openConnection();\n" +
            "\n" +
            "                httpURLConnection.setReadTimeout(20000);\n" +
            "\n" +
            "                httpURLConnection.setConnectTimeout(20000);\n" +
            "\n" +
            "                httpURLConnection.setRequestMethod(\"POST\");\n" +
            "\n" +
            "                httpURLConnection.setDoInput(true);\n" +
            "\n" +
            "                httpURLConnection.setDoOutput(true);\n" +
            "\n" +
            "                outputStream = httpURLConnection.getOutputStream();\n" +
            "\n" +
            "                bufferedWriter = new BufferedWriter(\n" +
            "\n" +
            "                        new OutputStreamWriter(outputStream, \"UTF-8\"));\n" +
            "\n" +
            "                bufferedWriter.write(bufferedWriterDataFN(PData));\n" +
            "\n" +
            "                bufferedWriter.flush();\n" +
            "\n" +
            "                bufferedWriter.close();\n" +
            "\n" +
            "                outputStream.close();\n" +
            "\n" +
            "                RC = httpURLConnection.getResponseCode();\n" +
            "\n" +
            "                if (RC == HttpsURLConnection.HTTP_OK) {\n" +
            "\n" +
            "                    bufferedReader = new BufferedReader(new InputStreamReader(httpURLConnection.getInputStream()));\n" +
            "\n" +
            "                    stringBuilder = new StringBuilder();\n" +
            "\n" +
            "                    String RC2;\n" +
            "\n" +
            "                    while ((RC2 = bufferedReader.readLine()) != null){\n" +
            "\n" +
            "                        stringBuilder.append(RC2);\n" +
            "                    }\n" +
            "                }\n" +
            "\n" +
            "            } catch (Exception e) {\n" +
            "                e.printStackTrace();\n" +
            "            }\n" +
            "            return stringBuilder.toString();\n" +
            "        }\n" +
            "\n" +
            "        private String bufferedWriterDataFN(HashMap<String, String> HashMapParams) throws UnsupportedEncodingException {\n" +
            "\n" +
            "            stringBuilder = new StringBuilder();\n" +
            "\n" +
            "            for (Map.Entry<String, String> KEY : HashMapParams.entrySet()) {\n" +
            "                if (check)\n" +
            "                    check = false;\n" +
            "                else\n" +
            "                    stringBuilder.append(\"&\");\n" +
            "\n" +
            "                stringBuilder.append(URLEncoder.encode(KEY.getKey(), \"UTF-8\"));\n" +
            "\n" +
            "                stringBuilder.append(\"=\");\n" +
            "\n" +
            "                stringBuilder.append(URLEncoder.encode(KEY.getValue(), \"UTF-8\"));\n" +
            "            }\n" +
            "\n" +
            "            return stringBuilder.toString();\n" +
            "        }\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "}\n"
            ;
    String code2="public class URL {\n" +
            "\n" +
            "        private static final String ROOT_URL = \"http://192.168.101.1/MyApi/Api.php?apicall=\";\n" +
            "        public static final String UPLOAD_URL = ROOT_URL + \"uploadpic\";\n" +
            "        public static final String GET_PICS_URL = ROOT_URL + \"getpics\";\n" +
            "\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        WebView webview2 = (WebView)view.findViewById(R.id.webview2);
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Title2=(TextView)view.findViewById(R.id.title2);
        Title2.setText("SecondActivity.Java");
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(code2)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview2);
        return view;
    }



}




package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_Image_text_ref extends Fragment {
    TextView text, head, content, text_m, head_m, content_m,textg,headg,content_g;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text = (TextView) view.findViewById(R.id.text_implementation);
        head = (TextView) view.findViewById(R.id.head_implementation);
        content = (TextView) view.findViewById(R.id.content_implementation);
        text_m = (TextView) view.findViewById(R.id.text_manifest);
        head_m = (TextView) view.findViewById(R.id.head_manifest);
        content_m = (TextView) view.findViewById(R.id.content_manifest);
        text_m.setVisibility(View.VISIBLE);
        head_m.setVisibility(View.VISIBLE);
        content_m.setVisibility(View.VISIBLE);
        textg = (TextView) view.findViewById(R.id.text_gradle);
        headg = (TextView) view.findViewById(R.id.head_gradle);
        content_g = (TextView) view.findViewById(R.id.content_gradle);
        textg.setVisibility(View.VISIBLE);
        headg.setVisibility(View.VISIBLE);
        content_g.setVisibility(View.VISIBLE);


        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n" +
                "After Implementation sync now to implement the content");
        content.setText("implementation 'com.google.android.gms:play-services-vision:11.4.0'");


        head_m.setText("Manifest Guide");

        text_m.setText("Click-->app-->Manifest-->(add permission)\n" +
                "Add Permission before application tag:-(top of <application)\n"+
                "Add meta-data tag and provider-tag");
        content_m.setText("<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
                "    package=\"com.example.textscannner\" >\n" +
                "\n" +
                "    <uses-feature\n" +
                "        android:name=\"android.hardware.camera\"\n" +
                "        android:required=\"true\" />\n" +
                "\n" +
                "    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n" +
                "\n" +
                "    <application\n" +
                "        android:allowBackup=\"true\"\n" +
                "        android:icon=\"@mipmap/ic_launcher\"\n" +
                "        android:label=\"@string/app_name\"\n" +
                "        android:roundIcon=\"@mipmap/ic_launcher_round\"\n" +
                "        android:supportsRtl=\"true\"\n" +
                "        android:theme=\"@style/AppTheme\" >\n" +
                "\n" +
                "        <meta-data\n" +
                "            android:name=\"com.google.android.gms.vision.DEPENDENCIES\"\n" +
                "            android:value=\"ocr\" />\n" +
                "\n" +
                "        <activity android:name=\".MainActivity\" >\n" +
                "            <intent-filter>\n" +
                "                <action android:name=\"android.intent.action.MAIN\" />\n" +
                "\n" +
                "                <category android:name=\"android.intent.category.LAUNCHER\" />\n" +
                "            </intent-filter>\n" +
                "        </activity>\n" +
                "\n" +
                "        <provider\n" +
                "            android:name=\"android.support.v4.content.FileProvider\"\n" +
                "            android:authorities=\"${applicationId}.provider\"\n" +
                "            android:exported=\"false\"\n" +
                "            android:grantUriPermissions=\"true\" >\n" +
                "            <meta-data\n" +
                "                android:name=\"android.support.FILE_PROVIDER_PATHS\"\n" +
                "                android:resource=\"@xml/provider_paths\" />\n" +
                "        </provider>\n" +
                "    </application>\n" +
                "\n" +
                "</manifest>");



        headg.setText("Create Directory");

        textg.setText("Click-->res-->New-->Directory-->Create Directory(xml)\n"+
                "create providerpaths.xml at xml directory and Paste the below code ");
        content_g.setText("<paths>\n" +
                "    <external-path\n" +
                "        name=\"external_files\"\n" +
                "        path=\".\"/>\n" +
                "</paths>");

        return view;
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.design.widget.BottomNavigationView;
import android.support.v7.app.AppCompatActivity;
import android.view.MenuItem;
import android.widget.TextView;

public class BottomNavigation extends AppCompatActivity {

    private TextView mTextMessage;

    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener
            = new BottomNavigationView.OnNavigationItemSelectedListener() {

        @Override
        public boolean onNavigationItemSelected(@NonNull MenuItem item) {
            switch (item.getItemId()) {
                case R.id.navigation_home:
                    mTextMessage.setText(R.string.title_home);
                    return true;
                case R.id.navigation_dashboard:
                    mTextMessage.setText(R.string.title_dashboard);
                    return true;
                case R.id.navigation_notifications:
                    mTextMessage.setText(R.string.title_notifications);
                    return true;
                case R.id.demo:
                    mTextMessage.setText("Demo");
                    return true;
            }
            return false;
        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_bottom_navigation);

        mTextMessage = (TextView) findViewById(R.id.message);
        BottomNavigationView navigation = (BottomNavigationView) findViewById(R.id.navigation);
        navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);
    }

}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_animation_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.app.Activity;\n" +
            "import android.content.Intent;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.view.animation.Animation;\n" +
            "import android.view.animation.AnimationUtils;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "public class MainActivity extends Activity {\n" +
            "\n" +
            "    Button btnFadeIn, btnFadeOut, btnCrossFade, btnBlink, btnZoomIn,\n" +
            "            btnZoomOut, btnRotate, btnMove, btnSlideUp, btnSlideDown,\n" +
            "            btnBounce, btnSequential, btnTogether;\n" +
            "    Animation animFadeIn,animFadeOut,animBlink,animZoomIn,animZoomOut,animRotate\n" +
            "            ,animMove,animSlideUp,animSlideDown,animBounce,animSequential,animTogether,animCrossFadeIn,animCrossFadeOut;\n" +
            "    TextView txtFadeIn,txtFadeOut,txtBlink,txtZoomIn,txtZoomOut,txtRotate,txtMove,txtSlideUp,\n" +
            "            txtSlideDown,txtBounce,txtSeq,txtTog,txtIn,txtOut;\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "\n" +
            "        btnFadeIn = (Button) findViewById(R.id.btnFadeIn);\n" +
            "        btnFadeOut = (Button) findViewById(R.id.btnFadeOut);\n" +
            "        btnCrossFade = (Button) findViewById(R.id.btnCrossFade);\n" +
            "        btnBlink = (Button) findViewById(R.id.btnBlink);\n" +
            "        btnZoomIn = (Button) findViewById(R.id.btnZoomIn);\n" +
            "        btnZoomOut = (Button) findViewById(R.id.btnZoomOut);\n" +
            "        btnRotate = (Button) findViewById(R.id.btnRotate);\n" +
            "        btnMove = (Button) findViewById(R.id.btnMove);\n" +
            "        btnSlideUp = (Button) findViewById(R.id.btnSlideUp);\n" +
            "        btnSlideDown = (Button) findViewById(R.id.btnSlideDown);\n" +
            "        btnBounce = (Button) findViewById(R.id.btnBounce);\n" +
            "        btnSequential = (Button) findViewById(R.id.btnSequential);\n" +
            "        btnTogether = (Button) findViewById(R.id.btnTogether);\n" +
            "        txtFadeIn=(TextView)findViewById(R.id.txt_fade_in);\n" +
            "        txtFadeOut=(TextView)findViewById(R.id.txt_fade_out);\n" +
            "        txtBlink=(TextView)findViewById(R.id.txt_blink);\n" +
            "        txtZoomIn=(TextView)findViewById(R.id.txt_zoom_in);\n" +
            "        txtZoomOut=(TextView)findViewById(R.id.txt_zoom_out);\n" +
            "        txtRotate=(TextView)findViewById(R.id.txt_rotate);\n" +
            "        txtMove=(TextView)findViewById(R.id.txt_move);\n" +
            "        txtSlideUp=(TextView)findViewById(R.id.txt_slide_up);\n" +
            "        txtSlideDown=(TextView)findViewById(R.id.txt_slide_down);\n" +
            "        txtBounce=(TextView)findViewById(R.id.txt_bounce);\n" +
            "        txtSeq=(TextView)findViewById(R.id.txt_seq);\n" +
            "        txtTog=(TextView)findViewById(R.id.txt_tog);\n" +
            "        txtIn=(TextView)findViewById(R.id.txt_in);\n" +
            "        txtOut=(TextView)findViewById(R.id.txt_out);\n" +
            "        animFadeIn = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.anim_fade_in);\n" +
            "\n" +
            "        animFadeIn = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.anim_fade_in);\n" +
            "        // fade in\n" +
            "        btnFadeIn.setOnClickListener(new View.OnClickListener() {\n" +
            "\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                txtFadeIn.setVisibility(View.VISIBLE);\n" +
            "                txtFadeIn.startAnimation(animFadeIn);\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "        animFadeOut = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.anim_fade_out);\n" +
            "\n" +
            "        // fade out\n" +
            "        btnFadeOut.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                txtFadeOut.setVisibility(View.VISIBLE);\n" +
            "                txtFadeOut.startAnimation(animFadeOut);\n" +
            "            }\n" +
            "        });\n" +
            "        animCrossFadeIn = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.anim_fade_in);\n" +
            "        animCrossFadeOut = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.anim_fade_out);\n" +
            "        // cross fade\n" +
            "        btnCrossFade.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                txtOut.setVisibility(View.VISIBLE);\n" +
            "                // start fade in animation\n" +
            "                txtOut.startAnimation(animCrossFadeIn);\n" +
            "\n" +
            "                // start fade out animation\n" +
            "                txtIn.startAnimation(animCrossFadeOut);\n" +
            "            }\n" +
            "        });\n" +
            "        animBlink = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.anim_blink);\n" +
            "        // blink\n" +
            "        btnBlink.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                txtBlink.setVisibility(View.VISIBLE);\n" +
            "                txtBlink.startAnimation(animBlink);\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "        animZoomIn = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.zoom_in);\n" +
            "        // Zoom In\n" +
            "        btnZoomIn.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                txtZoomIn.setVisibility(View.VISIBLE);\n" +
            "                txtZoomIn.startAnimation(animZoomIn);\n" +
            "            }\n" +
            "        });\n" +
            "        animZoomOut = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.zoom_out);\n" +
            "        // Zoom Out\n" +
            "        btnZoomOut.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                txtZoomOut.setVisibility(View.VISIBLE);\n" +
            "                txtZoomOut.startAnimation(animZoomOut);\n" +
            "            }\n" +
            "        });\n" +
            "        animRotate = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.anim_rotate);\n" +
            "\n" +
            "        // Rotate\n" +
            "        btnRotate.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                txtRotate.startAnimation(animRotate);\n" +
            "            }\n" +
            "        });\n" +
            "        animMove = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.anim_move);\n" +
            "        // Move\n" +
            "        btnMove.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                txtMove.startAnimation(animMove);\n" +
            "            }\n" +
            "        });\n" +
            "        animSlideUp = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.anim_slide_up);\n" +
            "        // Slide Up\n" +
            "        btnSlideUp.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                txtSlideUp.startAnimation(animSlideUp);\n" +
            "            }\n" +
            "        });\n" +
            "        animSlideDown = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.anim_slide_down);\n" +
            "        // Slide Down\n" +
            "        btnSlideDown.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                txtSlideDown.startAnimation(animSlideDown);\n" +
            "            }\n" +
            "        });\n" +
            "        animBounce = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.anim_bounce);\n" +
            "        // Slide Down\n" +
            "        btnBounce.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                txtBounce.startAnimation(animBounce);\n" +
            "            }\n" +
            "        });\n" +
            "        animSequential = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.anim_sequential);\n" +
            "        // Sequential\n" +
            "        btnSequential.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "\n" +
            "                txtSeq.startAnimation(animSequential);\n" +
            "            }\n" +
            "        });\n" +
            "        animTogether = AnimationUtils.loadAnimation(getApplicationContext(),\n" +
            "                R.anim.anim_together);\n" +
            "\n" +
            "        // Together\n" +
            "        btnTogether.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                txtTog.startAnimation(animTogether);\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "    }\n" +
            "}"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.content.ActivityNotFoundException;
import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import android.provider.MediaStore;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class ContactUs extends AppCompatActivity {
    EditText et_name, et_email, et_phone, et_message;
    Button btn_submit, btn_cancel;
    String name, location, email, phone, message;
    String attachmentFile;
    Uri URI = null;
    private static final int PICK_FROM_GALLERY = 101;
    int columnIndex;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_contact_us);
        et_name = (EditText) findViewById(R.id.et_name);
        et_email = (EditText) findViewById(R.id.et_email);
        et_phone = (EditText) findViewById(R.id.et_contact);
        et_message = (EditText) findViewById(R.id.et_message);
        btn_submit = (Button) findViewById(R.id.btn_submit);
        btn_cancel = (Button) findViewById(R.id.btn_cancel);
        btn_submit.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                //edittext to string

                name = et_name.getText().toString();

                email = et_email.getText().toString();
                phone = et_phone.getText().toString();
                message = et_message.getText().toString();
                if (email.isEmpty()) {
                    Toast.makeText(ContactUs.this, "Please fill the above details", Toast.LENGTH_SHORT).show();
                } else {

                    try {
                        Intent intent = new Intent(Intent.ACTION_SENDTO); // it's not ACTION_SEND
                        intent.setType("text/plain");
                        intent.putExtra(Intent.EXTRA_SUBJECT, "Query About Android Studio");
                        intent.putExtra(Intent.EXTRA_TEXT, "Name :" + name + "\n" + "Email :" + email + "\n" + "Phone" + " :" + phone + "\n" + "message :" + message);
                        intent.setData(Uri.parse("mailto:aldevelopers01@gmail.com"));
                        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); // this will make such that when user returns to your app, your app is displayed, instead of the email app.
                        if (URI != null) {
                            intent.putExtra(Intent.EXTRA_STREAM, URI);
                        }
                        startActivity(intent);
                    } catch (ActivityNotFoundException e) {
                        e.printStackTrace();
                        Toast.makeText(ContactUs.this, "Mailer Not Found", Toast.LENGTH_SHORT).show();
                    }


                }
            }
        });


        //**************************Cancel button*********************************

        btn_cancel.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                onBackPressed();
            }
        });

    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_tabbedactivity_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.design.widget.FloatingActionButton;\n" +
            "import android.support.design.widget.Snackbar;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.support.v7.widget.Toolbar;\n" +
            "\n" +
            "import android.support.v4.app.Fragment;\n" +
            "import android.support.v4.app.FragmentManager;\n" +
            "import android.support.v4.app.FragmentPagerAdapter;\n" +
            "import android.support.v4.view.ViewPager;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.LayoutInflater;\n" +
            "import android.view.Menu;\n" +
            "import android.view.MenuItem;\n" +
            "import android.view.View;\n" +
            "import android.view.ViewGroup;\n" +
            "\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "\n" +
            "    /**\n" +
            "     * The {@link android.support.v4.view.PagerAdapter} that will provide\n" +
            "     * fragments for each of the sections. We use a\n" +
            "     * {@link FragmentPagerAdapter} derivative, which will keep every\n" +
            "     * loaded fragment in memory. If this becomes too memory intensive, it\n" +
            "     * may be best to switch to a\n" +
            "     * {@link android.support.v4.app.FragmentStatePagerAdapter}.\n" +
            "     */\n" +
            "    private SectionsPagerAdapter mSectionsPagerAdapter;\n" +
            "\n" +
            "    /**\n" +
            "     * The {@link ViewPager} that will host the section contents.\n" +
            "     */\n" +
            "    private ViewPager mViewPager;\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "\n" +
            "        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n" +
            "        setSupportActionBar(toolbar);\n" +
            "        // Create the adapter that will return a fragment for each of the three\n" +
            "        // primary sections of the activity.\n" +
            "        mSectionsPagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager());\n" +
            "\n" +
            "        // Set up the ViewPager with the sections adapter.\n" +
            "        mViewPager = (ViewPager) findViewById(R.id.container);\n" +
            "        mViewPager.setAdapter(mSectionsPagerAdapter);\n" +
            "\n" +
            "        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n" +
            "        fab.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View view) {\n" +
            "                Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\n" +
            "                        .setAction(\"Action\", null).show();\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "\n" +
            "    @Override\n" +
            "    public boolean onCreateOptionsMenu(Menu menu) {\n" +
            "        // Inflate the menu; this adds items to the action bar if it is present.\n" +
            "        getMenuInflater().inflate(R.menu.menu_main, menu);\n" +
            "        return true;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public boolean onOptionsItemSelected(MenuItem item) {\n" +
            "        // Handle action bar item clicks here. The action bar will\n" +
            "        // automatically handle clicks on the Home/Up button, so long\n" +
            "        // as you specify a parent activity in AndroidManifest.xml.\n" +
            "        int id = item.getItemId();\n" +
            "\n" +
            "        //noinspection SimplifiableIfStatement\n" +
            "        if (id == R.id.action_settings) {\n" +
            "            return true;\n" +
            "        }\n" +
            "\n" +
            "        return super.onOptionsItemSelected(item);\n" +
            "    }\n" +
            "\n" +
            "    /**\n" +
            "     * A placeholder fragment containing a simple view.\n" +
            "     */\n" +
            "    public static class PlaceholderFragment extends Fragment {\n" +
            "        /**\n" +
            "         * The fragment argument representing the section number for this\n" +
            "         * fragment.\n" +
            "         */\n" +
            "        private static final String ARG_SECTION_NUMBER = \"section_number\";\n" +
            "\n" +
            "        public PlaceholderFragment() {\n" +
            "        }\n" +
            "\n" +
            "        /**\n" +
            "         * Returns a new instance of this fragment for the given section\n" +
            "         * number.\n" +
            "         */\n" +
            "        public static PlaceholderFragment newInstance(int sectionNumber) {\n" +
            "            PlaceholderFragment fragment = new PlaceholderFragment();\n" +
            "            Bundle args = new Bundle();\n" +
            "            args.putInt(ARG_SECTION_NUMBER, sectionNumber);\n" +
            "            fragment.setArguments(args);\n" +
            "            return fragment;\n" +
            "        }\n" +
            "\n" +
            "        @Override\n" +
            "        public View onCreateView(LayoutInflater inflater, ViewGroup container,\n" +
            "                                 Bundle savedInstanceState) {\n" +
            "            View rootView = inflater.inflate(R.layout.fragment_main, container, false);\n" +
            "            TextView textView = (TextView) rootView.findViewById(R.id.section_label);\n" +
            "            textView.setText(getString(R.string.section_format, getArguments().getInt(ARG_SECTION_NUMBER)));\n" +
            "            return rootView;\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    /**\n" +
            "     * A {@link FragmentPagerAdapter} that returns a fragment corresponding to\n" +
            "     * one of the sections/tabs/pages.\n" +
            "     */\n" +
            "    public class SectionsPagerAdapter extends FragmentPagerAdapter {\n" +
            "\n" +
            "        public SectionsPagerAdapter(FragmentManager fm) {\n" +
            "            super(fm);\n" +
            "        }\n" +
            "\n" +
            "        @Override\n" +
            "        public Fragment getItem(int position) {\n" +
            "            // getItem is called to instantiate the fragment for the given page.\n" +
            "            // Return a PlaceholderFragment (defined as a static inner class below).\n" +
            "            return PlaceholderFragment.newInstance(position + 1);\n" +
            "        }\n" +
            "\n" +
            "        @Override\n" +
            "        public int getCount() {\n" +
            "            // Show 3 total pages.\n" +
            "            return 3;\n" +
            "        }\n" +
            "    }\n" +
            "}\n"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_list_view_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.AdapterView;\n" +
            "import android.widget.ArrayAdapter;\n" +
            "import android.widget.ListView;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "import java.util.ArrayList;\n" +
            "import java.util.List;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "ListView listView;\n" +
            "List<String> list;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        listView=(ListView)findViewById(R.id.listview);\n" +
            "        list=new ArrayList<>();\n" +
            "        list.add(\"android\");\n" +
            "        list.add(\"byte\");\n" +
            "        list.add(\"catch\");\n" +
            "        list.add(\"date picker\");\n" +
            "        list.add(\"error\");\n" +
            "        list.add(\"for\");\n" +
            "        list.add(\"github\");\n" +
            "        list.add(\"hacking\");\n" +
            "        list.add(\"info\");\n" +
            "        list.add(\"json\");\n" +
            "        ArrayAdapter<String>adapter=new ArrayAdapter<String>(MainActivity.this,android.R.layout.simple_list_item_1,list);\n" +
            "        listView.setAdapter(adapter);\n" +
            "        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n" +
            "            @Override\n" +
            "            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n" +
            "                Toast.makeText(MainActivity.this, \"position\"+parent.getItemAtPosition(position).toString(), Toast.LENGTH_SHORT).show();\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}\n"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_toogle_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "   <ToggleButton\n" +
            "       android:id=\"@+id/togglebutton\"\n" +
            "       android:layout_width=\"wrap_content\"\n" +
            "       android:layout_height=\"wrap_content\"\n" +
            "       android:layout_marginTop=\"100dp\"\n" +
            "       android:layout_gravity=\"center\"\n" +
            "       android:onClick=\"onClick\"/>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_text_speech_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code=" <android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/text_view\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Click Here!\"\n" +
            "        android:onClick=\"onClick\"\n" +
            "        app:layout_constraintBottom_toBottomOf=\"parent\"\n" +
            "        app:layout_constraintLeft_toLeftOf=\"parent\"\n" +
            "        app:layout_constraintRight_toRightOf=\"parent\"\n" +
            "        app:layout_constraintTop_toTopOf=\"parent\" />\n" +
            "\n" +
            "</android.support.constraint.ConstraintLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_pattern_lockview_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <RadioGroup\n" +
            "        android:id=\"@+id/radiogroup\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:orientation=\"horizontal\"\n" +
            "        android:weightSum=\"2\">\n" +
            "        <RadioButton\n" +
            "            android:id=\"@+id/set\"\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:layout_marginLeft=\"10dp\"\n" +
            "            android:layout_weight=\"1\"\n" +
            "            android:text=\"set pattern\"/>\n" +
            "        <RadioButton\n" +
            "            android:id=\"@+id/unlock\"\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:layout_weight=\"1\"\n" +
            "            android:layout_marginRight=\"10dp\"\n" +
            "            android:text=\"unlock pattern\"/>\n" +
            "\n" +
            "    </RadioGroup>\n" +
            "    <com.andrognito.patternlockview.PatternLockView\n" +
            "        android:layout_width=\"300dp\"\n" +
            "        android:layout_height=\"300dp\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:id=\"@+id/lockview\"/>\n" +
            "\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_toogle_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.Toast;\n" +
            "import android.widget.ToggleButton;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "ToggleButton toggleButton;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        toggleButton=(ToggleButton)findViewById(R.id.togglebutton);\n" +
            "\n" +
            "    }\n" +
            "    public void onClick(View view){\n" +
            "        if(toggleButton.isChecked()) {\n" +
            "            Toast.makeText(this, \"Toggle is on\", Toast.LENGTH_SHORT).show();\n" +
            "        }else {\n" +
            "            Toast.makeText(this, \"Toggle is off\", Toast.LENGTH_SHORT).show();\n" +
            "        }\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}




package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_tabbed_activity_ref extends Fragment {
    TextView text,head;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_textview_ref, container, false);
        text=(TextView)view.findViewById(R.id.text);
        head=(TextView)view.findViewById(R.id.head);
        head.setText("Create Activity");

        text.setText("Click-->File-->New-->Activity-->TabbedActivity");

        return view;
    }



}

package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_Backgroundservices_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "   <ImageView\n" +
            "       android:layout_width=\"wrap_content\"\n" +
            "       android:layout_height=\"wrap_content\"\n" +
            "       android:layout_gravity=\"center\"\n" +
            "       android:layout_marginTop=\"50dp\"\n" +
            "       android:src=\"@drawable/ic_launcher_background\"/>\n" +
            "    <LinearLayout\n" +
            "        android:layout_marginTop=\"20dp\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:orientation=\"horizontal\"\n" +
            "        android:weightSum=\"2\">\n" +
            "        <Button\n" +
            "            android:id=\"@+id/start\"\n" +
            "            android:layout_weight=\"1\"\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:text=\"Start\"\n" +
            "            android:textColor=\"@android:color/white\"/>\n" +
            "        <Button\n" +
            "            android:id=\"@+id/stop\"\n" +
            "            android:layout_weight=\"1\"\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:text=\"Stop\"\n" +
            "            android:textColor=\"@android:color/white\"/>\n" +
            "    </LinearLayout>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_animation_ref extends Fragment {
    TextView text, head, content, text_m, head_m, content_m,textg,headg,content_g;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text = (TextView) view.findViewById(R.id.text_implementation);
        head = (TextView) view.findViewById(R.id.head_implementation);
        content = (TextView) view.findViewById(R.id.content_implementation);
        text_m = (TextView) view.findViewById(R.id.text_manifest);
        head_m = (TextView) view.findViewById(R.id.head_manifest);
        content_m = (TextView) view.findViewById(R.id.content_manifest);
//        text_m.setVisibility(View.VISIBLE);
//        head_m.setVisibility(View.VISIBLE);
//        content_m.setVisibility(View.VISIBLE);
        textg = (TextView) view.findViewById(R.id.text_gradle);
        headg = (TextView) view.findViewById(R.id.head_gradle);
        content_g = (TextView) view.findViewById(R.id.content_gradle);
        textg.setVisibility(View.VISIBLE);
        headg.setVisibility(View.VISIBLE);
        content_g.setVisibility(View.VISIBLE);


        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n" +
                "After Implementation sync now to implement the content");
        content.setText("implementation 'com.google.android.gms:play-services-vision:11.4.0'");

        head.setVisibility(View.GONE);
        text.setVisibility(View.GONE);
        content.setVisibility(View.GONE);
//        head_m.setText("Manifest Guide");
//
//        text_m.setText("Click-->app-->Manifest-->(add permission)\n" +
//                "Add Permission before application tag:-(top of <application)\n"+
//                "Add meta-data tag and provider-tag");
//        content_m.setText("<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
//                "    package=\"com.example.textscannner\" >\n" +
//                "\n" +
//                "    <uses-feature\n" +
//                "        android:name=\"android.hardware.camera\"\n" +
//                "        android:required=\"true\" />\n" +
//                "\n" +
//                "    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n" +
//                "\n" +
//                "    <application\n" +
//                "        android:allowBackup=\"true\"\n" +
//                "        android:icon=\"@mipmap/ic_launcher\"\n" +
//                "        android:label=\"@string/app_name\"\n" +
//                "        android:roundIcon=\"@mipmap/ic_launcher_round\"\n" +
//                "        android:supportsRtl=\"true\"\n" +
//                "        android:theme=\"@style/AppTheme\" >\n" +
//                "\n" +
//                "        <meta-data\n" +
//                "            android:name=\"com.google.android.gms.vision.DEPENDENCIES\"\n" +
//                "            android:value=\"ocr\" />\n" +
//                "\n" +
//                "        <activity android:name=\".MainActivity\" >\n" +
//                "            <intent-filter>\n" +
//                "                <action android:name=\"android.intent.action.MAIN\" />\n" +
//                "\n" +
//                "                <category android:name=\"android.intent.category.LAUNCHER\" />\n" +
//                "            </intent-filter>\n" +
//                "        </activity>\n" +
//                "\n" +
//                "        <provider\n" +
//                "            android:name=\"android.support.v4.content.FileProvider\"\n" +
//                "            android:authorities=\"${applicationId}.provider\"\n" +
//                "            android:exported=\"false\"\n" +
//                "            android:grantUriPermissions=\"true\" >\n" +
//                "            <meta-data\n" +
//                "                android:name=\"android.support.FILE_PROVIDER_PATHS\"\n" +
//                "                android:resource=\"@xml/provider_paths\" />\n" +
//                "        </provider>\n" +
//                "    </application>\n" +
//                "\n" +
//                "</manifest>");



        headg.setText("Create anim directory");

        textg.setText("Click-->res-->New-->Directory-->Create Directory(anim)");
        content_g.setText("");
        content_g.setVisibility(View.GONE);

        return view;
    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_progressbar_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:text=\"Circle Progress bar\"\n" +
            "        android:layout_marginTop=\"80dp\"/>\n" +
            "    <ProgressBar\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"10dp\"\n" +
            "        android:id=\"@+id/pb_circle\"/>\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"50dp\"\n" +
            "        android:text=\"Horizontal Progress Bar\"/>\n" +
            "    <ProgressBar\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:id=\"@+id/pb_hr\"\n" +
            "        android:layout_marginTop=\"10dp\"\n" +
            "        style=\"@style/Base.Widget.AppCompat.ProgressBar.Horizontal\"/>\n" +
            "    <LinearLayout\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:orientation=\"horizontal\"\n" +
            "        android:weightSum=\"2\">\n" +
            "        <Button\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:layout_weight=\"1\"\n" +
            "            android:id=\"@+id/start\"\n" +
            "            android:text=\"start\"/>\n" +
            "        <Button\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:id=\"@+id/stop\"\n" +
            "            android:layout_weight=\"1\"\n" +
            "            android:text=\"stop\"/>\n" +
            "    </LinearLayout>\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_speech_text_xml  extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2,mcodeview3,mcodeview4,mcodeview5,mcodeview6;
    TextView title2,title3,title4,title5,title6;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:background=\"@android:color/white\"\n" +
            "    android:padding=\"12dp\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "\n" +
            "    <EditText\n" +
            "        android:id=\"@+id/editText\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_centerVertical=\"true\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:hint=\"You will see input here\"\n" +
            "        android:textAppearance=\"@style/Base.TextAppearance.AppCompat.Large\" />\n" +
            "\n" +
            "\n" +
            "    <ImageButton\n" +
            "        android:id=\"@+id/button\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"30dp\"\n" +
            "        android:background=\"@drawable/button_background\" />\n" +
            "\n" +
            "</LinearLayout>";
    String code2="<resources>\n" +
            "\n" +
            "    <color name=\"colorPrimary\">#5aa184</color>\n" +
            "    <color name=\"colorPrimaryDark\">#487b66</color>\n" +
            "    <color name=\"colorAccent\">#2b644c</color>\n" +
            "\n" +
            "    <color name=\"colorButton\">#3d5f51</color>\n" +
            "    <color name=\"colorButtonActive\">#1bea95</color>\n" +
            "</resources>\n";
    String code3="<resources>\n" +
            "    <string name=\"app_name\">SpeechToText</string>\n" +
            "    <string name=\"speech_prompt\">Say something&#8230;</string>\n" +
            "    <string name=\"speech_not_supported\">Sorry! Your device doesn\\'t support speech input</string>\n" +
            "    <string name=\"tap_on_mic\">Tap on mic to speak</string>\n" +
            "</resources>\n";
    String code4="<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n" +
            "\n" +
            "    <item>\n" +
            "        <shape android:shape=\"oval\">\n" +
            "            <solid android:color=\"@color/colorButtonActive\" />\n" +
            "        </shape>\n" +
            "    </item>\n" +
            "\n" +
            "    <item\n" +
            "        android:bottom=\"20dp\"\n" +
            "        android:drawable=\"@drawable/icon_record\"\n" +
            "        android:left=\"20dp\"\n" +
            "        android:right=\"20dp\"\n" +
            "        android:top=\"20dp\" />\n" +
            "\n" +
            "</layer-list>";
    String code5="<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\">\n" +
            "    <item>\n" +
            "        <shape android:shape=\"oval\">\n" +
            "            <solid android:color=\"@color/colorButton\" />\n" +
            "        </shape>\n" +
            "    </item>\n" +
            "\n" +
            "    <item\n" +
            "        android:bottom=\"20dp\"\n" +
            "        android:drawable=\"@drawable/icon_record\"\n" +
            "        android:left=\"20dp\"\n" +
            "        android:right=\"20dp\"\n" +
            "        android:top=\"20dp\" />\n" +
            "\n" +
            "</layer-list>";
    String code6="<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n" +
            "\n" +
            "\n" +
            "    <item android:drawable=\"@drawable/round_default\" android:state_pressed=\"false\" />\n" +
            "\n" +
            "    <item android:drawable=\"@drawable/round_active\" android:state_pressed=\"true\" />\n" +
            "\n" +
            "\n" +
            "</selector>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.six_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        mcodeview3 = (CodeView)view.findViewById(R.id.codeView3);
        mcodeview4 = (CodeView)view.findViewById(R.id.codeView4);
        mcodeview5 = (CodeView)view.findViewById(R.id.codeView5);
        mcodeview6 = (CodeView)view.findViewById(R.id.codeView6);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("Values/colors.xml");
        title3=(TextView)view.findViewById(R.id.title3);
        title3.setText("Values/String.xml");
        title4=(TextView)view.findViewById(R.id.title4);
        title4.setText("Drawable/round_active.xml");
        title5=(TextView)view.findViewById(R.id.title5);
        title5.setText("Drawable/round_default.xml");
        title6=(TextView)view.findViewById(R.id.title6);
        title6.setText("Drawable/button_background.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy3=(Button)view.findViewById(R.id.copy3);
        copy3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code3);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy4=(Button)view.findViewById(R.id.copy4);
        copy4.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code4);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy5=(Button)view.findViewById(R.id.copy5);
        copy5.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code5);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy6=(Button)view.findViewById(R.id.copy6);
        copy6.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code6);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview3.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code3)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview4.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code4)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview5.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code5)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview6.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code6)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_sql_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    tools:context=\".MainActivity\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "\n" +
            "    <EditText\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:id=\"@+id/editText_name\"\n" +
            "        android:hint=\"Name\" />\n" +
            "\n" +
            "    <EditText\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:id=\"@+id/editText_surname\"\n" +
            "        android:hint=\"SurName\" />\n" +
            "\n" +
            "    <EditText\n" +
            "        android:hint=\"Marks\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:id=\"@+id/editText_Marks\" />\n" +
            "    <EditText\n" +
            "        android:hint=\"Id\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:id=\"@+id/editText_id\"\n" +
            "        android:layout_alignTop=\"@+id/textView_id\"\n" +
            "        />\n" +
            "\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Add Data\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:id=\"@+id/button_add\" />\n" +
            "\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"View All\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:id=\"@+id/button_viewAll\" />\n" +
            "\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Update\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:id=\"@+id/button_update\"\n" +
            "        />\n" +
            "\n" +
            "\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Delete\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:id=\"@+id/button_delete\" />\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.Manifest;
import android.content.ActivityNotFoundException;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.provider.Settings;
import android.speech.RecognizerIntent;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v4.content.ContextCompat;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.Toast;

import java.util.ArrayList;
import java.util.Locale;

import static android.app.Activity.RESULT_OK;

public class Fragment_speech_text_demo extends Fragment {
    ImageButton button;
    EditText editText;
    private final int REQ_CODE_SPEECH_INPUT = 100;


    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_speech_text_demo, container, false);
        editText = view.findViewById(R.id.editText);
        button=(ImageButton)view.findViewById(R.id.button);

        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                promptSpeechInput();
            }
        });
        checkPermission();
        return view;
    }
    private void checkPermission() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            if (!(ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.RECORD_AUDIO) == PackageManager.PERMISSION_GRANTED)) {
                Intent intent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS,
                        Uri.parse("package:" + getActivity().getPackageName()));
                startActivity(intent);
                getActivity().finish();
            }
        }
    }
    private void promptSpeechInput() {
        Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);
        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,
                RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);
        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, Locale.getDefault());
        intent.putExtra(RecognizerIntent.EXTRA_PROMPT,
                getString(R.string.speech_prompt));
        try {
            startActivityForResult(intent, REQ_CODE_SPEECH_INPUT);
        } catch (ActivityNotFoundException a) {
            Toast.makeText(getActivity(),
                    getString(R.string.speech_not_supported),
                    Toast.LENGTH_SHORT).show();
        }
    }


    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        switch (requestCode) {
            case REQ_CODE_SPEECH_INPUT: {
                if (resultCode == RESULT_OK && null != data) {

                    ArrayList<String> result = data
                            .getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);
                    editText.setText(result.get(0));
                }
                break;
            }

        }
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;

public class Fragment_one_demo extends Fragment {
    TextView text;
    LinearLayout ll;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_textview_demo, container, false);
        ll=(LinearLayout)view.findViewById(R.id.ll);
        ll.setBackgroundResource(R.color.colorPrimaryDark);
        text=(TextView)view.findViewById(R.id.text);
        text.setText("Fragment One");
        return view;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_encryptanddecrypt_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "   <TextView\n" +
            "       android:layout_width=\"wrap_content\"\n" +
            "       android:layout_height=\"wrap_content\"\n" +
            "       android:text=\"copy and paste the encrypted text to decrypt\"\n" +
            "       android:textStyle=\"bold\"\n" +
            "       android:layout_gravity=\"center\"\n" +
            "       android:layout_marginTop=\"100dp\"\n" +
            "       android:textColor=\"@android:color/black\"/>\n" +
            "    <EditText\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:hint=\"please enter the text here...\"\n" +
            "        android:id=\"@+id/et_text\"\n" +
            "        android:layout_marginTop=\"30dp\"\n" +
            "        android:textColor=\"@android:color/black\"/>\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:textIsSelectable=\"true\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:id=\"@+id/result\"/>\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:textColor=\"@android:color/black\"\n" +
            "        android:textStyle=\"bold\"\n" +
            "        android:layout_marginLeft=\"10dp\"\n" +
            "        android:layout_marginTop=\"10dp\"\n" +
            "        android:text=\"Encrypt\"/>\n" +
            "    <LinearLayout\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:orientation=\"horizontal\"\n" +
            "        android:layout_marginTop=\"20dp\"\n" +
            "        android:weightSum=\"2\">\n" +
            "        <Button\n" +
            "            android:layout_weight=\"1\"\n" +
            "        android:id=\"@+id/e_with\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginLeft=\"5dp\"\n" +
            "        android:layout_marginRight=\"10dp\"\n" +
            "        android:text=\"with base64\"/>\n" +
            "        <Button\n" +
            "            android:layout_weight=\"1\"\n" +
            "            android:id=\"@+id/e_without\"\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:layout_marginLeft=\"10dp\"\n" +
            "            android:layout_marginRight=\"5dp\"\n" +
            "            android:text=\"without base64\"/>\n" +
            "    </LinearLayout>\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:textColor=\"@android:color/black\"\n" +
            "        android:layout_marginTop=\"30dp\"\n" +
            "        android:textStyle=\"bold\"\n" +
            "        android:layout_marginLeft=\"10dp\"\n" +
            "        android:text=\"Decrypt\"/>\n" +
            "    <LinearLayout\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:orientation=\"horizontal\"\n" +
            "        android:layout_marginTop=\"20dp\"\n" +
            "        android:weightSum=\"2\">\n" +
            "        <Button\n" +
            "            android:layout_weight=\"1\"\n" +
            "            android:id=\"@+id/d_with\"\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:layout_marginLeft=\"5dp\"\n" +
            "            android:layout_marginRight=\"10dp\"\n" +
            "            android:text=\"with base64\"/>\n" +
            "        <Button\n" +
            "            android:layout_weight=\"1\"\n" +
            "            android:id=\"@+id/d_without\"\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:layout_marginLeft=\"10dp\"\n" +
            "            android:layout_marginRight=\"5dp\"\n" +
            "            android:text=\"without base64\"/>\n" +
            "    </LinearLayout>\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_sp_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.content.Context;\n" +
            "import android.content.SharedPreferences;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.text.TextUtils;\n" +
            "import android.util.Log;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.CheckBox;\n" +
            "import android.widget.EditText;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    EditText et_userid, et_password;\n" +
            "    private SharedPreferences mpref;\n" +
            "    private static final String PREF_NAME = \"SP_NAME\";\n" +
            "    CheckBox checkBox;\n" +
            "    String userid, password;\n" +
            "    Button Login, forgot_password, cancel, forgot;\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        et_userid = (EditText) findViewById(R.id.et_userid);\n" +
            "        et_password = (EditText) findViewById(R.id.et_password);\n" +
            "        Login = (Button) findViewById(R.id.btn_submit);\n" +
            "        checkBox=(CheckBox)findViewById(R.id.check);\n" +
            "        checkBox.setChecked(true);\n" +
            "        mpref = getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);\n" +
            "        userid=mpref.getString(\"USERID\",\"\");\n" +
            "        et_userid.setText(userid);\n" +
            "        password=mpref.getString(\"PASSWORD\",\"\");\n" +
            "        et_password.setText(password);\n" +
            "        Login.setOnClickListener(new View.OnClickListener() {\n" +
            "\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                Log.i(\"userid\", \"+++++++\" + userid + password);\n" +
            "                if (checkBox.isChecked() == true) {\n" +
            "                    userid = et_userid.getText().toString();\n" +
            "                    password = et_password.getText().toString();\n" +
            "                    if (TextUtils.isEmpty(userid) || TextUtils.isEmpty(password)) {\n" +
            "                        Toast.makeText(MainActivity.this, \"All Fields Must Be filled\", Toast.LENGTH_SHORT).show();\n" +
            "                    } else {\n" +
            "                        SharedPreferences.Editor editor = mpref.edit();\n" +
            "                        editor.putString(\"USERID\", userid);\n" +
            "                        editor.putString(\"PASSWORD\", password);\n" +
            "                        editor.apply();\n" +
            "                        Toast.makeText(MainActivity.this, \"Values Stored\", Toast.LENGTH_SHORT).show();\n" +
            "\n" +
            "\n" +
            "                    }\n" +
            "                }\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}\n"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.content.Context;
import android.support.v7.widget.RecyclerView;
import android.util.SparseIntArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;

import java.util.ArrayList;
import java.util.List;

public abstract class ExpandableRecyclerAdapter<T extends ExpandableRecyclerAdapter.ListItem> extends RecyclerView.Adapter<ExpandableRecyclerAdapter.ViewHolder> {
    protected Context mContext;
    protected List<T> allItems = new ArrayList<>();
    protected List<T> visibleItems = new ArrayList<>();
    private List<Integer> indexList = new ArrayList<>();
    private SparseIntArray expandMap = new SparseIntArray();
    private int mode;

    protected static final int TYPE_HEADER = 1000;

    private static final int ARROW_ROTATION_DURATION = 150;

    public static final int MODE_NORMAL = 0;
    public static final int MODE_ACCORDION = 1;

    public ExpandableRecyclerAdapter(Context context) {
        mContext = context;
    }

    public static class ListItem {
        public int ItemType;

        public ListItem(int itemType) {
            ItemType = itemType;
        }
    }

    @Override
    public long getItemId(int i) {
        return i;
    }

    @Override
    public int getItemCount() {
        return visibleItems == null ? 0 : visibleItems.size();
    }

    protected View inflate(int resourceID, ViewGroup viewGroup) {
        return LayoutInflater.from(mContext).inflate(resourceID, viewGroup, false);
    }

    public class ViewHolder extends RecyclerView.ViewHolder {
        public ViewHolder(View view) {
            super(view);
        }
    }

    public class HeaderViewHolder extends ViewHolder {
        ImageView arrow;

        public HeaderViewHolder(View view) {
            super(view);

            view.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    toggleExpandedItems(getLayoutPosition(),false);
                /*if(isExpanded(getLayoutPosition())){
                    collapseItems(getLayoutPosition(),false);
                }else {
                    expandItems(getLayoutPosition(),true);
                }*/
                }
            });
        }

        public HeaderViewHolder(View view, final ImageView arrow) {
            super(view);

            this.arrow = arrow;

            arrow.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    handleClick();
                }
            });
        }

        protected void handleClick() {
            if (toggleExpandedItems(getLayoutPosition(), false)) {
                openArrow(arrow);
            } else {
                closeArrow(arrow);
            }
        }

        public void bind(int position) {
            arrow.setRotation(isExpanded(position) ? 90 : 0);
        }
    }

    public boolean toggleExpandedItems(int position, boolean notify) {
        if (isExpanded(position)) {
            collapseItems(position, notify);
            return false;
        } else {
            expandItems(position, notify);

            if (mode == MODE_ACCORDION) {
                collapseAllExcept(position);
            }

            return true;
        }
    }

    public void expandItems(int position, boolean notify) {
        int count = 0;
        int index = indexList.get(position);
        int insert = position;

        for (int i=index+1; i<allItems.size() && allItems.get(i).ItemType != TYPE_HEADER; i++) {
            insert++;
            count++;
            visibleItems.add(insert, allItems.get(i));
            indexList.add(insert, i);
        }

        notifyItemRangeInserted(position + 1, count);

        int allItemsPosition = indexList.get(position);
        expandMap.put(allItemsPosition, 1);

        if (notify) {
            notifyItemChanged(position);
        }
    }

    public void collapseItems(int position, boolean notify) {
        int count = 0;
        int index = indexList.get(position);

        for (int i=index+1; i<allItems.size() && allItems.get(i).ItemType != TYPE_HEADER; i++) {
            count++;
            visibleItems.remove(position + 1);
            indexList.remove(position + 1);
        }

        notifyItemRangeRemoved(position + 1, count);

        int allItemsPosition = indexList.get(position);
        expandMap.delete(allItemsPosition);

        if (notify) {
            notifyItemChanged(position);
        }
    }


    protected boolean isExpanded(int position) {
        int allItemsPosition = indexList.get(position);
        return expandMap.get(allItemsPosition, -1) >= 0;
    }

    @Override
    public int getItemViewType(int position) {
        return visibleItems.get(position).ItemType;
    }

    public void setItems(List<T> items) {
        allItems = items;
        List<T> visibleItems = new ArrayList<>();
        expandMap.clear();
        indexList.clear();

        for (int i=0; i<items.size(); i++) {
            if (items.get(i).ItemType == TYPE_HEADER) {
                indexList.add(i);
                visibleItems.add(items.get(i));
            }
        }

        this.visibleItems = visibleItems;
        notifyDataSetChanged();
    }



    protected void removeItemAt(int visiblePosition) {
        int allItemsPosition = indexList.get(visiblePosition);

        allItems.remove(allItemsPosition);
        visibleItems.remove(visiblePosition);

        incrementIndexList(allItemsPosition, visiblePosition, -1);
        incrementExpandMapAfter(allItemsPosition, -1);

        notifyItemRemoved(visiblePosition);
    }

    private void incrementExpandMapAfter(int position, int direction) {
        SparseIntArray newExpandMap = new SparseIntArray();

        for (int i=0; i<expandMap.size(); i++) {
            int index = expandMap.keyAt(i);
            newExpandMap.put(index < position ? index : index + direction, 1);
        }

        expandMap = newExpandMap;
    }

    private void incrementIndexList(int allItemsPosition, int visiblePosition, int direction) {
        List<Integer> newIndexList = new ArrayList<>();

        for (int i=0; i<indexList.size(); i++) {
            if (i == visiblePosition) {
                if (direction > 0) {
                    newIndexList.add(allItemsPosition);
                }
            }

            int val = indexList.get(i);
            newIndexList.add(val < allItemsPosition ? val : val + direction);
        }

        indexList = newIndexList;
    }

    public void collapseAll() {
        collapseAllExcept(-1);
    }

    public void collapseAllExcept(int position) {
        for (int i=visibleItems.size()-1; i>=0; i--) {
            if (i != position && getItemViewType(i) == TYPE_HEADER) {
                if (isExpanded(i)) {
                    collapseItems(i, true);
                }
            }
        }
    }

    public void expandAll() {
        for (int i=visibleItems.size()-1; i>=0; i--) {
            if (getItemViewType(i) == TYPE_HEADER) {
                if (!isExpanded(i)) {
                    expandItems(i, true);
                }
            }
        }
    }

    public static void openArrow(View view) {
        view.animate().setDuration(ARROW_ROTATION_DURATION).rotation(180);

    }

    public static void closeArrow(View view) {
        view.animate().setDuration(ARROW_ROTATION_DURATION).rotation(0);
    }

    public int getMode() {
        return mode;
    }

    public void setMode(int mode) {
        this.mode = mode;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_image_url_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:layout_width=\"fill_parent\"\n" +
            "    android:layout_height=\"fill_parent\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "    <com.master.glideimageview.GlideImageView\n" +
            "        android:id=\"@+id/glide_image_view\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"match_parent\"\n" +
            "        android:scaleType=\"fitXY\"\n" +
            "        app:error_res=\"@drawable/no_image\"\n" +
            "        app:placeholder_res=\"@mipmap/ic_launcher\"\n" +
            "        style=\"?android:attr/progressBarStyleSmall\"\n" +
            "        app:show_progress=\"false\" />\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_okhttp_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2;
    TextView title2;
    String code2=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <ListView\n" +
            "        android:id=\"@+id/list\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"match_parent\" />\n" +
            "\n" +
            "</LinearLayout>";
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:layout_width=\"fill_parent\"\n" +
            "    android:layout_height=\"wrap_content\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/name\"\n" +
            "        android:layout_width=\"fill_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:paddingBottom=\"2dip\"\n" +
            "        android:paddingTop=\"6dip\"\n" +
            "        android:textColor=\"@color/colorPrimaryDark\"\n" +
            "        android:textSize=\"16sp\"\n" +
            "        android:textStyle=\"bold\" />\n" +
            "\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/email\"\n" +
            "        android:layout_width=\"fill_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:paddingBottom=\"2dip\"\n" +
            "        android:textColor=\"@color/colorAccent\" />\n" +
            "\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/mobile\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:textColor=\"#5d5d5d\"\n" +
            "        android:textStyle=\"bold\" />\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("listitem.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_spinner_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "<TextView\n" +
            "    android:layout_width=\"wrap_content\"\n" +
            "    android:layout_height=\"wrap_content\"\n" +
            "    android:text=\"Click spinner for drop-down\"\n" +
            "    android:layout_gravity=\"center\"\n" +
            "    android:layout_marginTop=\"100dp\"/>\n" +
            "    <Spinner\n" +
            "        android:layout_marginTop=\"20dp\"\n" +
            "        android:id=\"@+id/spinner\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"/>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.content.Context;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.ImageView;

public class ImageAdapter extends BaseAdapter {
    private Context mContext;

    // Keep all Images in array
    public Integer[] mThumbIds = {
            R.drawable.pic_1, R.drawable.pic_2,
            R.drawable.pic_3, R.drawable.pic_1, R.drawable.pic_2,
            R.drawable.pic_3
    };

    // Constructor
    public ImageAdapter(Context c){
        mContext = c;
    }

    @Override
    public int getCount() {
        return mThumbIds.length;
    }

    @Override
    public Object getItem(int position) {
        return mThumbIds[position];
    }

    @Override
    public long getItemId(int position) {
        return 0;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ImageView imageView = new ImageView(mContext);
        imageView.setImageResource(mThumbIds[position]);
        imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
        imageView.setLayoutParams(new GridView.LayoutParams(70, 70));
        return imageView;
    }

}

package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class Fragment_edittext_demo extends Fragment {
    EditText et_text;
    Button btn;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_edittext_demo, container, false);
        et_text=(EditText)view.findViewById(R.id.et_text);
        btn=(Button)view.findViewById(R.id.btn);
        btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String text=et_text.getText().toString();  //it will get the entered text to string.
                Toast.makeText(getActivity(), text, Toast.LENGTH_SHORT).show();
            }
        });


        return view;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_simple_and_custom_toast_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2;
    TextView title2;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "    <TextView\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:text=\"Click the below buttton to view the custom alert dialog\"/>\n" +
            "    <Button\n" +
            "        android:id=\"@+id/btn\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:background=\"@android:color/holo_green_dark\"\n" +
            "        android:text=\"Click!\"\n" +
            "        android:textAlignment=\"center\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"20dp\"\n" +
            "        android:textColor=\"@android:color/white\"\n" +
            "        android:textStyle=\"bold\"/>\n" +
            "\n" +
            "\n" +
            "</LinearLayout>";
    String code2="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\">\n" +
            "\n" +
            "    <TextView\n" +
            "        android:text=\" Custom Alert\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:id=\"@+id/text\"\n" +
            "        android:textStyle=\"normal|bold\"\n" +
            "        android:textSize=\"18sp\"\n" +
            "        android:textAlignment=\"center\"\n" +
            "        android:layout_marginLeft=\"10dp\"\n" +
            "        android:layout_marginRight=\"10dp\"\n" +
            "        android:layout_marginTop=\"12dp\" />\n" +
            "\n" +
            "    <ImageButton\n" +
            "        android:layout_width=\"100dp\"\n" +
            "        android:layout_height=\"100dp\"\n" +
            "        app:srcCompat=\"@drawable/ic_launcher_background\"\n" +
            "        android:id=\"@+id/image\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginLeft=\"5dp\"\n" +
            "        android:layout_marginTop=\"5dp\" />\n" +
            "\n" +
            "    <Button\n" +
            "        android:id=\"@+id/back\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"close\"\n" +
            "        android:layout_marginTop=\"23dp\"\n" +
            "        android:paddingRight=\"5dp\"\n" +
            "        style=\"@style/Widget.AppCompat.Button.Colored\" />\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("custom_layout_alertdialog.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_RadioGroup_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.widget.RadioGroup;\n" +
            "import android.widget.Switch;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "RadioGroup radioGroup;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        radioGroup=(RadioGroup)findViewById(R.id.rdgrp);\n" +
            "        radioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {\n" +
            "            @Override\n" +
            "            public void onCheckedChanged(RadioGroup group, int checkedId) {\n" +
            "                switch(checkedId){\n" +
            "                    case R.id.rb1:\n" +
            "                        Toast.makeText(MainActivity.this, \"Noughat\", Toast.LENGTH_SHORT).show();\n" +
            "                        break;\n" +
            "                    case R.id.rb2:\n" +
            "                        Toast.makeText(MainActivity.this, \"Oreo\", Toast.LENGTH_SHORT).show();\n" +
            "                        break;\n" +
            "                    case R.id.rb3:\n" +
            "                        Toast.makeText(MainActivity.this, \"Pie\", Toast.LENGTH_SHORT).show();\n" +
            "                        break;\n" +
            "                }\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_bottom_navigation_xml  extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2;
    TextView title2;
    String Code="  extends Fragment implements CodeView.OnHighlightListener {\n" +
            "private ProgressDialog mProgressDialog;\n" +
            "private int themePos = 0;\n" +
            "        CodeView mCodeView,mcodeview2;\n" +
            "        TextView title2;\n" +
            "        String Code=\" <LinearLayout xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\"\\n\" +\n" +
            "                \"    xmlns:app=\\\"http://schemas.android.com/apk/res-auto\\\"\\n\" +\n" +
            "                \"    xmlns:tools=\\\"http://schemas.android.com/tools\\\"\\n\" +\n" +
            "                \"    android:layout_width=\\\"match_parent\\\"\\n\" +\n" +
            "                \"    android:layout_height=\\\"match_parent\\\"\\n\" +\n" +
            "                \"    android:orientation=\\\"vertical\\\"\\n\" +\n" +
            "                \"    tools:context=\\\".MainActivity\\\">\\n\" +\n" +
            "                \"\\n\" +\n" +
            "                \"   <ListView\\n\" +\n" +
            "                \"       android:layout_width=\\\"match_parent\\\"\\n\" +\n" +
            "                \"       android:layout_height=\\\"match_parent\\\"\\n\" +\n" +
            "                \"       android:id=\\\"@+id/listview\\\"></ListView>\\n\" +\n" +
            "                \"\\n\" +\n" +
            "                \"</LinearLayout>\";\n" +
            "        String code2=\"<LinearLayout\\n\" +\n" +
            "                \"    xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\" android:layout_width=\\\"match_parent\\\"\\n\" +\n" +
            "                \"    android:layout_height=\\\"wrap_content\\\"\\n\" +\n" +
            "                \"    android:orientation=\\\"horizontal\\\">\\n\" +\n" +
            "                \"\\n\" +\n" +
            "                \"    <ImageView\\n\" +\n" +
            "                \"        android:id=\\\"@+id/image\\\"\\n\" +\n" +
            "                \"        android:layout_width=\\\"wrap_content\\\"\\n\" +\n" +
            "                \"        android:layout_height=\\\"wrap_content\\\"\\n\" +\n" +
            "                \"        android:layout_marginLeft=\\\"10dp\\\"\\n\" +\n" +
            "                \"        android:src=\\\"@drawable/user\\\"/>\\n\" +\n" +
            "                \"    <TextView\\n\" +\n" +
            "                \"        android:layout_width=\\\"match_parent\\\"\\n\" +\n" +
            "                \"        android:layout_height=\\\"wrap_content\\\"\\n\" +\n" +
            "                \"        android:id=\\\"@+id/text\\\"\\n\" +\n" +
            "                \"        android:textAlignment=\\\"center\\\"\\n\" +\n" +
            "                \"        android:textColor=\\\"@android:color/black\\\"\\n\" +\n" +
            "                \"        android:layout_gravity=\\\"center\\\"\\n\" +\n" +
            "                \"        android:text=\\\"name\\\"/>\\n\" +\n" +
            "                \"\\n\" +\n" +
            "                \"</LinearLayout>\";\n" +
            "\n" +
            "@Override\n" +
            "@Nullable\n" +
            "public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {\n" +
            "        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);\n" +
            "        mCodeView = (CodeView)view.findViewById(R.id.codeView);\n" +
            "        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);\n" +
            "        title2=(TextView)view.findViewById(R.id.title2);\n" +
            "        title2.setText(\"custom_listview_layout.xml\");\n" +
            "\n" +
            "        mCodeView.setOnHighlightListener(this)\n" +
            "        .setOnHighlightListener(this)\n" +
            "        .setTheme(Theme.DARCULA)\n" +
            "        .setCode(Code)\n" +
            "        .setLanguage(Language.XML)\n" +
            "        .setWrapLine(true)\n" +
            "        .setFontSize(12)\n" +
            "        .setZoomEnabled(false)\n" +
            "        .setShowLineNumber(false)\n" +
            "        .apply();\n" +
            "        mcodeview2.setOnHighlightListener(this)\n" +
            "        .setOnHighlightListener(this)\n" +
            "        .setTheme(Theme.DARCULA)\n" +
            "        .setCode(code2)\n" +
            "        .setLanguage(Language.XML)\n" +
            "        .setWrapLine(true)\n" +
            "        .setFontSize(12)\n" +
            "        .setZoomEnabled(false)\n" +
            "        .setShowLineNumber(false)\n" +
            "        .apply();\n" +
            "        return view;\n" +
            "        }\n" +
            "\n" +
            "\n" +
            "@Override\n" +
            "public void onStartCodeHighlight() {\n" +
            "\n" +
            "        }\n" +
            "\n" +
            "@Override\n" +
            "public void onFinishCodeHighlight() {\n" +
            "\n" +
            "        }\n" +
            "\n" +
            "@Override\n" +
            "public void onLanguageDetected(Language language, int i) {\n" +
            "\n" +
            "        }\n" +
            "\n" +
            "@Override\n" +
            "public void onFontSizeChanged(int i) {\n" +
            "\n" +
            "        }\n" +
            "\n" +
            "@Override\n" +
            "public void onLineClicked(int i, String s) {\n" +
            "\n" +
            "        }\n" +
            "        }\n" +
            "\n";
    String code2="<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n" +
            "\n" +
            "    <item\n" +
            "        android:id=\"@+id/navigation_home\"\n" +
            "        android:icon=\"@drawable/ic_home_black_24dp\"\n" +
            "        android:title=\"@string/title_home\" />\n" +
            "\n" +
            "    <item\n" +
            "        android:id=\"@+id/navigation_dashboard\"\n" +
            "        android:icon=\"@drawable/ic_dashboard_black_24dp\"\n" +
            "        android:title=\"@string/title_dashboard\" />\n" +
            "\n" +
            "    <item\n" +
            "        android:id=\"@+id/navigation_notifications\"\n" +
            "        android:icon=\"@drawable/ic_notifications_black_24dp\"\n" +
            "        android:title=\"@string/title_notifications\" />\n" +
            "\n" +
            "</menu>\n";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("Menu/navigation.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;

import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.view.View;
import android.support.design.widget.NavigationView;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Toast;

public class NavigationDrawer extends AppCompatActivity
        implements NavigationView.OnNavigationItemSelectedListener {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_navigation_drawer);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
        fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
                        .setAction("Action", null).show();
            }
        });

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.addDrawerListener(toggle);
        toggle.syncState();

        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);
    }

    @Override
    public void onBackPressed() {
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.navigation_drawer, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(MenuItem item) {
        // Handle navigation view item clicks here.
        int id = item.getItemId();

        if (id == R.id.nav_camera) {
            // Handle the camera action
            Toast.makeText(this, "Camera", Toast.LENGTH_SHORT).show();
        } else if (id == R.id.nav_gallery) {
            Toast.makeText(this, "nav_gallery", Toast.LENGTH_SHORT).show();
        } else if (id == R.id.nav_slideshow) {
            Toast.makeText(this, "nav_slideshow", Toast.LENGTH_SHORT).show();
        } else if (id == R.id.nav_manage) {
            Toast.makeText(this, "nav_manage", Toast.LENGTH_SHORT).show();
        } else if (id == R.id.nav_share) {
            Toast.makeText(this, "nav_share", Toast.LENGTH_SHORT).show();
        } else if (id == R.id.nav_send) {
            Toast.makeText(this, "nav_send", Toast.LENGTH_SHORT).show();
        }

        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.START);
        return true;
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_curve_edge_ref extends Fragment {
    TextView text,head;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_textview_ref, container, false);
        text=(TextView)view.findViewById(R.id.text);
        head=(TextView)view.findViewById(R.id.head);
        head.setText("Create Activity&Create custom drawable file");

        text.setText("Click-->File-->New-->Activity-->EmptyActivity\n" +
                "Click-->app-->res-->drawable-->New-->Drawable resource file\n"+
                "(Small letters only allowed)");

        return view;
    }



}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.TextView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_gridview_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    TextView title2;
    String Code="import android.app.KeyguardManager;\n" +
            "import android.content.pm.PackageManager;\n" +
            "import android.hardware.fingerprint.FingerprintManager;\n" +
            "import android.Manifest;\n" +
            "import android.os.Build;\n" +
            "import android.os.Bundle;\n" +
            "import android.security.keystore.KeyGenParameterSpec;\n" +
            "import android.security.keystore.KeyPermanentlyInvalidatedException;\n" +
            "import android.security.keystore.KeyProperties;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.support.v4.app.ActivityCompat;\n" +
            "import android.widget.TextView;\n" +
            "import java.io.IOException;\n" +
            "import java.security.InvalidAlgorithmParameterException;\n" +
            "import java.security.InvalidKeyException;\n" +
            "import java.security.KeyStore;\n" +
            "import java.security.KeyStoreException;\n" +
            "import java.security.NoSuchAlgorithmException;\n" +
            "import java.security.NoSuchProviderException;\n" +
            "import java.security.UnrecoverableKeyException;\n" +
            "import java.security.cert.CertificateException;\n" +
            "import javax.crypto.Cipher;\n" +
            "import javax.crypto.KeyGenerator;\n" +
            "import javax.crypto.NoSuchPaddingException;\n" +
            "import javax.crypto.SecretKey;\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "\n" +
            "    // Declare a string variable for the key we’re going to use in our fingerprint authentication\n" +
            "    private static final String KEY_NAME = \"yourKey\";\n" +
            "    private Cipher cipher;\n" +
            "    private KeyStore keyStore;\n" +
            "    private KeyGenerator keyGenerator;\n" +
            "    private TextView textView;\n" +
            "    private FingerprintManager.CryptoObject cryptoObject;\n" +
            "    private FingerprintManager fingerprintManager;\n" +
            "    private KeyguardManager keyguardManager;\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "\n" +
            "        // If you’ve set your app’s minSdkVersion to anything lower than 23, then you’ll need to verify that the device is running Marshmallow\n" +
            "        // or higher before executing any fingerprint-related code\n" +
            "        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n" +
            "            //Get an instance of KeyguardManager and FingerprintManager//\n" +
            "            keyguardManager =\n" +
            "                    (KeyguardManager) getSystemService(KEYGUARD_SERVICE);\n" +
            "            fingerprintManager =\n" +
            "                    (FingerprintManager) getSystemService(FINGERPRINT_SERVICE);\n" +
            "\n" +
            "            textView = (TextView) findViewById(R.id.textview);\n" +
            "\n" +
            "            //Check whether the device has a fingerprint sensor//\n" +
            "            if (!fingerprintManager.isHardwareDetected()) {\n" +
            "                // If a fingerprint sensor isn’t available, then inform the user that they’ll be unable to use your app’s fingerprint functionality//\n" +
            "                textView.setText(\"Your device doesn't support fingerprint authentication\");\n" +
            "            }\n" +
            "            //Check whether the user has granted your app the USE_FINGERPRINT permission//\n" +
            "            if (ActivityCompat.checkSelfPermission(this, Manifest.permission.USE_FINGERPRINT) != PackageManager.PERMISSION_GRANTED) {\n" +
            "                // If your app doesn't have this permission, then display the following text//\n" +
            "                textView.setText(\"Please enable the fingerprint permission\");\n" +
            "            }\n" +
            "\n" +
            "            //Check that the user has registered at least one fingerprint//\n" +
            "            if (!fingerprintManager.hasEnrolledFingerprints()) {\n" +
            "                // If the user hasn’t configured any fingerprints, then display the following message//\n" +
            "                textView.setText(\"No fingerprint configured. Please register at least one fingerprint in your device's Settings\");\n" +
            "            }\n" +
            "\n" +
            "            //Check that the lockscreen is secured//\n" +
            "            if (!keyguardManager.isKeyguardSecure()) {\n" +
            "                // If the user hasn’t secured their lockscreen with a PIN password or pattern, then display the following text//\n" +
            "                textView.setText(\"Please enable lockscreen security in your device's Settings\");\n" +
            "            } else {\n" +
            "                try {\n" +
            "\n" +
            "                    generateKey();\n" +
            "                } catch (FingerprintException e) {\n" +
            "                    e.printStackTrace();\n" +
            "                }\n" +
            "\n" +
            "                if (initCipher()) {\n" +
            "                    //If the cipher is initialized successfully, then create a CryptoObject instance//\n" +
            "                    cryptoObject = new FingerprintManager.CryptoObject(cipher);\n" +
            "\n" +
            "                    // Here, I’m referencing the FingerprintHandler class that we’ll create in the next section. This class will be responsible\n" +
            "                    // for starting the authentication process (via the startAuth method) and processing the authentication process events//\n" +
            "                    FingerprintHandler helper = new FingerprintHandler(this);\n" +
            "                    helper.startAuth(fingerprintManager, cryptoObject);\n" +
            "                }\n" +
            "            }\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "//Create the generateKey method that we’ll use to gain access to the Android keystore and generate the encryption key//\n" +
            "\n" +
            "    private void generateKey() throws FingerprintException {\n" +
            "        try {\n" +
            "            // Obtain a reference to the Keystore using the standard Android keystore container identifier (“AndroidKeystore”)//\n" +
            "            keyStore = KeyStore.getInstance(\"AndroidKeyStore\");\n" +
            "\n" +
            "            //Generate the key//\n" +
            "            keyGenerator = KeyGenerator.getInstance(KeyProperties.KEY_ALGORITHM_AES, \"AndroidKeyStore\");\n" +
            "\n" +
            "            //Initialize an empty KeyStore//\n" +
            "            keyStore.load(null);\n" +
            "\n" +
            "            //Initialize the KeyGenerator//\n" +
            "            keyGenerator.init(new\n" +
            "\n" +
            "                    //Specify the operation(s) this key can be used for//\n" +
            "                    KeyGenParameterSpec.Builder(KEY_NAME,\n" +
            "                    KeyProperties.PURPOSE_ENCRYPT |\n" +
            "                            KeyProperties.PURPOSE_DECRYPT)\n" +
            "                    .setBlockModes(KeyProperties.BLOCK_MODE_CBC)\n" +
            "\n" +
            "                    //Configure this key so that the user has to confirm their identity with a fingerprint each time they want to use it//\n" +
            "                    .setUserAuthenticationRequired(true)\n" +
            "                    .setEncryptionPaddings(\n" +
            "                            KeyProperties.ENCRYPTION_PADDING_PKCS7)\n" +
            "                    .build());\n" +
            "\n" +
            "            //Generate the key//\n" +
            "            keyGenerator.generateKey();\n" +
            "\n" +
            "        } catch (KeyStoreException\n" +
            "                | NoSuchAlgorithmException\n" +
            "                | NoSuchProviderException\n" +
            "                | InvalidAlgorithmParameterException\n" +
            "                | CertificateException\n" +
            "                | IOException exc) {\n" +
            "            exc.printStackTrace();\n" +
            "            throw new FingerprintException(exc);\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    //Create a new method that we’ll use to initialize our cipher//\n" +
            "    public boolean initCipher() {\n" +
            "        try {\n" +
            "            //Obtain a cipher instance and configure it with the properties required for fingerprint authentication//\n" +
            "            cipher = Cipher.getInstance(\n" +
            "                    KeyProperties.KEY_ALGORITHM_AES + \"/\"\n" +
            "                            + KeyProperties.BLOCK_MODE_CBC + \"/\"\n" +
            "                            + KeyProperties.ENCRYPTION_PADDING_PKCS7);\n" +
            "        } catch (NoSuchAlgorithmException |\n" +
            "                NoSuchPaddingException e) {\n" +
            "            throw new RuntimeException(\"Failed to get Cipher\", e);\n" +
            "        }\n" +
            "\n" +
            "        try {\n" +
            "            keyStore.load(null);\n" +
            "            SecretKey key = (SecretKey) keyStore.getKey(KEY_NAME,\n" +
            "                    null);\n" +
            "            cipher.init(Cipher.ENCRYPT_MODE, key);\n" +
            "            //Return true if the cipher has been initialized successfully//\n" +
            "            return true;\n" +
            "        } catch (KeyPermanentlyInvalidatedException e) {\n" +
            "\n" +
            "            //Return false if cipher initialization failed//\n" +
            "            return false;\n" +
            "        } catch (KeyStoreException | CertificateException\n" +
            "                | UnrecoverableKeyException | IOException\n" +
            "                | NoSuchAlgorithmException | InvalidKeyException e) {\n" +
            "            throw new RuntimeException(\"Failed to init Cipher\", e);\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    private class FingerprintException extends Exception {\n" +
            "        public FingerprintException(Exception e) {\n" +
            "            super(e);\n" +
            "        }\n" +
            "    }\n" +
            "}";
    String Code2="import android.content.Context;\n" +
            "import android.view.View;\n" +
            "import android.view.ViewGroup;\n" +
            "import android.widget.BaseAdapter;\n" +
            "import android.widget.GridView;\n" +
            "import android.widget.ImageView;\n" +
            "\n" +
            "public class ImageAdapter extends BaseAdapter {\n" +
            "    private Context mContext;\n" +
            "\n" +
            "    // Keep all Images in array\n" +
            "    public Integer[] mThumbIds = {\n" +
            "            R.drawable.pic_1, R.drawable.pic_2,\n" +
            "            R.drawable.pic_3, R.drawable.pic_1, R.drawable.pic_2,\n" +
            "            R.drawable.pic_3\n" +
            "    };\n" +
            "\n" +
            "    // Constructor\n" +
            "    public ImageAdapter(Context c){\n" +
            "        mContext = c;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public int getCount() {\n" +
            "        return mThumbIds.length;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public Object getItem(int position) {\n" +
            "        return mThumbIds[position];\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public long getItemId(int position) {\n" +
            "        return 0;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public View getView(int position, View convertView, ViewGroup parent) {\n" +
            "        ImageView imageView = new ImageView(mContext);\n" +
            "        imageView.setImageResource(mThumbIds[position]);\n" +
            "        imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);\n" +
            "        imageView.setLayoutParams(new GridView.LayoutParams(70, 70));\n" +
            "        return imageView;\n" +
            "    }\n" +
            "\n" +
            "}";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("ImageAdapter.Java");
        WebView webView2=(WebView)view.findViewById(R.id.webview2);
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code2)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webView2);
        return view;
    }



}






package com.Learning.com;

import android.content.Context;
import android.os.Bundle;
import android.os.Vibrator;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.Toast;

import com.github.clans.fab.FloatingActionButton;
import com.github.clans.fab.FloatingActionMenu;


public class Fragment_floatingmenu_demo extends Fragment {
    FloatingActionMenu menu;
    FloatingActionButton b2,b3,b4,b5;
    TextView textView;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_floatingmenu_demo, container, false);
        textView=(TextView)view.findViewById(R.id.text);
        textView.setText("Click the below menu");
        menu = (FloatingActionMenu) view.findViewById(R.id.menu);
        menu.setClosedOnTouchOutside(true);
        menu.setOnMenuToggleListener(new FloatingActionMenu.OnMenuToggleListener() {
            @Override
            public void onMenuToggle(boolean opened) {
                Vibrator vibrator = (Vibrator)getActivity().getSystemService(Context.VIBRATOR_SERVICE);
                if (opened) {
                    if (vibrator != null) {
                        vibrator.vibrate(50);
                    }
                } else {
                    if (vibrator != null) {
                        vibrator.vibrate(50);
                    }
                }
            }
        });

        b2 = (FloatingActionButton) view.findViewById(R.id.b2);
        b3 = (FloatingActionButton) view.findViewById(R.id.b3);
        b4 = (FloatingActionButton) view.findViewById(R.id.b4);
        b5 = (FloatingActionButton) view.findViewById(R.id.b5);

        b2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                textView.setText("button2");
            }
        });

        b3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                textView.setText("button3");
            }
        });

        b4.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                textView.setText("button4");
            }
        });
        b5.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                textView.setText("button5");
            }
        });


        //**********************bottom nav click listener************************

        return view;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_json_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code= "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.util.Log;\n" +
            "import android.view.View;\n" +
            "import android.widget.AdapterView;\n" +
            "import android.widget.ArrayAdapter;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.ListAdapter;\n" +
            "import android.widget.ListView;\n" +
            "import android.widget.SimpleAdapter;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "import com.android.volley.AuthFailureError;\n" +
            "import com.android.volley.Request;\n" +
            "import com.android.volley.RequestQueue;\n" +
            "import com.android.volley.Response;\n" +
            "import com.android.volley.VolleyError;\n" +
            "import com.android.volley.toolbox.StringRequest;\n" +
            "import com.android.volley.toolbox.Volley;\n" +
            "\n" +
            "import org.json.JSONArray;\n" +
            "import org.json.JSONException;\n" +
            "import org.json.JSONObject;\n" +
            "\n" +
            "import java.util.ArrayList;\n" +
            "import java.util.HashMap;\n" +
            "import java.util.Map;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    Button fetch;\n" +
            "    ListView lv;\n" +
            "    ArrayList<HashMap<String, String>> contactList;\n" +
            " String url = \"https://api.jsonbin.io/b/5c7cc87d5fe2145877953ede\";\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        fetch=(Button)findViewById(R.id.fetch);\n" +
            "        lv = (ListView)findViewById(R.id.list);\n" +
            "        fetch.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                getJson();\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "    }\n" +
            "    private void getJson() {\n" +
            "        RequestQueue queue = Volley.newRequestQueue(this);\n" +
            "        StringRequest request = new StringRequest(Request.Method.POST, url, new Response.Listener<String>() {\n" +
            "            @Override\n" +
            "            public void onResponse(String response) {\n" +
            "\n" +
            "\n" +
            "                Log.i(\"My success\", response);\n" +
            "                try {\n" +
            "                    contactList = new ArrayList<>();\n" +
            "                    JSONObject jsonObj = new JSONObject(response);\n" +
            "\n" +
            "                    // Getting JSON Array node\n" +
            "                    JSONArray contacts = jsonObj.getJSONArray(\"contacts\");\n" +
            "\n" +
            "                    // looping through All Contacts\n" +
            "                    for (int i = 0; i < contacts.length(); i++) {\n" +
            "                        JSONObject c = contacts.getJSONObject(i);\n" +
            "\n" +
            "                        String id = c.getString(\"id\");\n" +
            "                        String name = c.getString(\"name\");\n" +
            "                        String email = c.getString(\"email\");\n" +
            "                        String address = c.getString(\"address\");\n" +
            "                        String gender = c.getString(\"gender\");\n" +
            "\n" +
            "                        // Phone node is JSON Object\n" +
            "                        JSONObject phone = c.getJSONObject(\"phone\");\n" +
            "                        String mobile = phone.getString(\"mobile\");\n" +
            "                        String home = phone.getString(\"home\");\n" +
            "                        String office = phone.getString(\"office\");\n" +
            "\n" +
            "                        // tmp hash map for single contact\n" +
            "                        HashMap<String, String> contact = new HashMap<>();\n" +
            "\n" +
            "                        // adding each child node to HashMap key => value\n" +
            "                        contact.put(\"id\", id);\n" +
            "                        contact.put(\"name\", name);\n" +
            "                        contact.put(\"email\", email);\n" +
            "                        contact.put(\"mobile\", mobile);\n" +
            "\n" +
            "                        // adding contact to contact list\n" +
            "                        contactList.add(contact);\n" +
            "                        ListAdapter adapter = new SimpleAdapter(\n" +
            "                                MainActivity.this, contactList,\n" +
            "                                R.layout.listitem, new String[]{\"name\", \"email\",\n" +
            "                                \"mobile\"}, new int[]{R.id.name,\n" +
            "                                R.id.email, R.id.mobile});\n" +
            "\n" +
            "                        lv.setAdapter(adapter);\n" +
            "                    }\n" +
            "\n" +
            "                } catch (JSONException e) {\n" +
            "                    e.printStackTrace();\n" +
            "                }\n" +
            "            }\n" +
            "\n" +
            "\n" +
            "        }, new Response.ErrorListener() {\n" +
            "            @Override\n" +
            "            public void onErrorResponse(VolleyError error) {\n" +
            "\n" +
            "                Toast.makeText(MainActivity.this, \"No Network Connection\", Toast.LENGTH_LONG).show();\n" +
            "                Log.i(\"My error\", \"\" + error);\n" +
            "            }\n" +
            "        }) {\n" +
            "            @Override\n" +
            "\n" +
            "            protected Map<String, String> getParams() throws AuthFailureError {\n" +
            "                Map<String, String> map = new HashMap<String, String>();\n" +
            "\n" +
            "                //here you can post any string to server\n" +
            "\n" +
            "\n" +
            "                return map;\n" +
            "            }\n" +
            "        };\n" +
            "        queue.add(request);\n" +
            "\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }

}



package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.TextView;

public class Fragment_AutoCompleteTextView_demo extends Fragment {
    AutoCompleteTextView autoCompleteTextView;
    TextView textView;
    String[] values={"Alpha","Beta","Cupcake","Donut","Eclair"};
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_auto_complete_textview_demo, container, false);
        autoCompleteTextView=(AutoCompleteTextView)view.findViewById(R.id.a_textview);
        textView=(TextView)view.findViewById(R.id.text_hint);
        textView.setText("Hints: Alpha,Beta,Cupcake,Donut,Eclair");
        ArrayAdapter<String> adapter=new ArrayAdapter<String>(getActivity(),android.R.layout.simple_list_item_1,values);
        autoCompleteTextView.setAdapter(adapter);
        return view;
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Toast;

public class Fragment_simple_and_custom_toast_demo extends Fragment {
    Button s_toast,c_toast;
    LayoutInflater layoutInflater;
    View toastLayout;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_simple_and_custom_toast_demo, container, false);

        s_toast=(Button)view.findViewById(R.id.s_toast);
        c_toast=(Button)view.findViewById(R.id.c_toast);
        layoutInflater=getLayoutInflater();
        toastLayout=layoutInflater.inflate(R.layout.custom_layout_toast,(ViewGroup)view.findViewById(R.id.cl));
        s_toast.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(getActivity(), "This is a Simple Toast", Toast.LENGTH_SHORT).show();
            }
        });
        c_toast.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                toast();

            }
        });
        return view;
    }
    public void toast(){
        Toast t= Toast.makeText(getActivity(),"Toast:Gravity.TOP",Toast.LENGTH_SHORT);
        t.setGravity(Gravity.CENTER,0,0);
        t.setView(toastLayout);
        t.show();
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_qrscanner_ref extends Fragment {
    TextView text, head, content, text_m, head_m, content_m,textg,headg,content_g;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text = (TextView) view.findViewById(R.id.text_implementation);
        head = (TextView) view.findViewById(R.id.head_implementation);
        content = (TextView) view.findViewById(R.id.content_implementation);
        text_m = (TextView) view.findViewById(R.id.text_manifest);
        head_m = (TextView) view.findViewById(R.id.head_manifest);
        content_m = (TextView) view.findViewById(R.id.content_manifest);
        text_m.setVisibility(View.VISIBLE);
        head_m.setVisibility(View.VISIBLE);
        content_m.setVisibility(View.VISIBLE);
        textg = (TextView) view.findViewById(R.id.text_gradle);
        headg = (TextView) view.findViewById(R.id.head_gradle);
        content_g = (TextView) view.findViewById(R.id.content_gradle);
        textg.setVisibility(View.VISIBLE);
        headg.setVisibility(View.VISIBLE);
        content_g.setVisibility(View.VISIBLE);


        head.setText("Implementation Guide");

        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n" +
                "After Implementation sync now to implement the content");
        content.setText("implementation 'com.github.blikoon:QRCodeScanner:0.1.2'");


        head_m.setText("Manifest Guide");

        text_m.setText("Click-->app-->Manifest-->(add permission)\n" +
                "Add Permission before application tag:-(top of <application)");
        content_m.setText(" <uses-permission android:name=\"android.permission.CAMERA\" />\n" +
                "\n" +
                "    <uses-feature android:name=\"android.hardware.camera.autofocus\" />\n" +
                "\n" +
                "    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n" +
                "    <uses-permission android:name=\"android.permission.INTERNET\" />\n" +
                "    <uses-permission android:name=\"android.permission.VIBRATE\"/>");



        headg.setText("build.gradle(Project:(your app name)");

        textg.setText("Click-->Gradle Scripts-->build.gradle(Project:(your app name)-->allprojects-->repositories\n" +
                "After Implementation sync now to implement the content");
        content_g.setText("  google()\n" +
                "        jcenter()\n" +
                "        maven {\n" +
                "            url 'https://jitpack.io'\n" +
                "        }\n" +
                "        ");

        return view;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.TextView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_SearchView_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    TextView title2;
    String Code="import android.content.Context;\n" +
            "import android.os.Bundle;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.widget.ListView;\n" +
            "import android.widget.SearchView;\n" +
            "\n" +
            "import java.util.ArrayList;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity implements SearchView.OnQueryTextListener {\n" +
            "\n" +
            "    // Declare Variables\n" +
            "    ListView list;\n" +
            "    ListViewAdapter adapter;\n" +
            "    SearchView editsearch;\n" +
            "    String[] versionNameList;\n" +
            "    ArrayList<VersionNames> arraylist = new ArrayList<VersionNames>();\n" +
            "\n" +
            "    @Override\n" +
            "    public void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "\n" +
            "        // Generate sample data\n" +
            "\n" +
            "        versionNameList = new String[]{\"Alpha\", \"Beta\", \"CupCake\",\n" +
            "                \"Donut\", \"Eclair\", \"Fryso\", \"GingerBread\", \"HoneyCombs\",\n" +
            "                \"IceCreamSandwich\",\"JellyBean\",\"Kitkat\",\"Lollipop\",\"MarshMellow\",\"Noughat\",\"Oreo\",\"Pie\"};\n" +
            "\n" +
            "        // Locate the ListView in listview_main.xml\n" +
            "        list = (ListView) findViewById(R.id.listview);\n" +
            "\n" +
            "        for (int i = 0; i < versionNameList.length; i++) {\n" +
            "            VersionNames versionNames = new VersionNames(versionNameList[i]);\n" +
            "            // Binds all strings into an array\n" +
            "            arraylist.add(versionNames);\n" +
            "        }\n" +
            "\n" +
            "        // Pass results to ListViewAdapter Class\n" +
            "        adapter = new ListViewAdapter(this, arraylist);\n" +
            "\n" +
            "        // Binds the Adapter to the ListView\n" +
            "        list.setAdapter(adapter);\n" +
            "\n" +
            "        // Locate the EditText in listview_main.xml\n" +
            "        editsearch = (SearchView) findViewById(R.id.search);\n" +
            "        editsearch.setOnQueryTextListener(this);\n" +
            "\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public boolean onQueryTextSubmit(String query) {\n" +
            "\n" +
            "        return false;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public boolean onQueryTextChange(String newText) {\n" +
            "        String text = newText;\n" +
            "        adapter.filter(text);\n" +
            "        return false;\n" +
            "    }\n" +
            "}\n" +
            "class VersionNames {\n" +
            "    private String versionNames;\n" +
            "\n" +
            "    public VersionNames(String versionNames) {\n" +
            "        this.versionNames = versionNames;\n" +
            "    }\n" +
            "\n" +
            "    public String getVersionNames() {\n" +
            "        return this.versionNames;\n" +
            "    }\n" +
            "\n" +
            "\n" +
            "}";
    String Code2="import android.content.Context;\n" +
            "import android.view.LayoutInflater;\n" +
            "import android.view.View;\n" +
            "import android.view.ViewGroup;\n" +
            "import android.widget.BaseAdapter;\n" +
            "import android.widget.TextView;\n" +
            "import java.util.ArrayList;\n" +
            "import java.util.List;\n" +
            "import java.util.Locale;\n" +
            "\n" +
            "public class ListViewAdapter extends BaseAdapter {\n" +
            "\n" +
            "    // Declare Variables\n" +
            "\n" +
            "    Context mContext;\n" +
            "    LayoutInflater inflater;\n" +
            "    private List<VersionNames> versionNamesList = null;\n" +
            "    private ArrayList<VersionNames> arraylist;\n" +
            "\n" +
            "    public ListViewAdapter(Context context, List<VersionNames> versionNamesList) {\n" +
            "        mContext = context;\n" +
            "        this.versionNamesList = versionNamesList;\n" +
            "        inflater = LayoutInflater.from(mContext);\n" +
            "        this.arraylist = new ArrayList<VersionNames>();\n" +
            "        this.arraylist.addAll(versionNamesList);\n" +
            "    }\n" +
            "\n" +
            "    public class ViewHolder {\n" +
            "        TextView name;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public int getCount() {\n" +
            "        return versionNamesList.size();\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public VersionNames getItem(int position) {\n" +
            "        return versionNamesList.get(position);\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public long getItemId(int position) {\n" +
            "        return position;\n" +
            "    }\n" +
            "\n" +
            "    public View getView(final int position, View view, ViewGroup parent) {\n" +
            "        final ViewHolder holder;\n" +
            "        if (view == null) {\n" +
            "            holder = new ViewHolder();\n" +
            "            view = inflater.inflate(R.layout.listview_items, null);\n" +
            "            // Locate the TextViews in listview_item.xml\n" +
            "            holder.name = (TextView) view.findViewById(R.id.name);\n" +
            "            view.setTag(holder);\n" +
            "        } else {\n" +
            "            holder = (ViewHolder) view.getTag();\n" +
            "        }\n" +
            "        // Set the results into TextViews\n" +
            "        holder.name.setText(versionNamesList.get(position).getVersionNames());\n" +
            "        return view;\n" +
            "    }\n" +
            "\n" +
            "    // Filter Class\n" +
            "    public void filter(String charText) {\n" +
            "        charText = charText.toLowerCase(Locale.getDefault());\n" +
            "        versionNamesList.clear();\n" +
            "        if (charText.length() == 0) {\n" +
            "            versionNamesList.addAll(arraylist);\n" +
            "        } else {\n" +
            "            for (VersionNames wp : arraylist) {\n" +
            "                if (wp.getVersionNames().toLowerCase(Locale.getDefault()).contains(charText)) {\n" +
            "                    versionNamesList.add(wp);\n" +
            "                }\n" +
            "            }\n" +
            "        }\n" +
            "        notifyDataSetChanged();\n" +
            "    }\n" +
            "\n" +
            "}";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("ListViewAdapter.Java");
        WebView webView2=(WebView)view.findViewById(R.id.webview2);
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code2)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webView2);
        return view;
    }



}





package com.Learning.com;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.TextView;

public class Introduction extends AppCompatActivity {
    TextView textView,textView1,textView2,textView3,textView4,cp,txt_services,txt_activity;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_introduction);
        textView=(TextView)findViewById(R.id.text);
        textView1=(TextView)findViewById(R.id.text1);
        textView2=(TextView)findViewById(R.id.text2);
        textView3=(TextView)findViewById(R.id.text3);
        textView4=(TextView)findViewById(R.id.text4);
        txt_services=(TextView)findViewById(R.id.txt_services);
        txt_activity=(TextView)findViewById(R.id.txt_activity);
        cp=(TextView)findViewById(R.id.cp);
        textView1.setText("•\tBasic\n" +
                "•\tAdvance\n" +
                "•\tImplementation\n");
        textView2.setText("•\tReference\n" +
                "•\tXml\n" +
                "•\tJava\n" +
                "•\tDemo\n");
        textView3.setText("•\tHow to create\n" +
                "•\tWhere to create\n" +
                "•\tWhere to implement\n" +
                "•\tWhere to change \n" +
                "•\tWhere to include\n");
        textView4.setText("•\tActivities\n" +
                "•\tServices\n" +
                "•\tBroadcast receivers\n" +
                "•\tContent providers\n");
        cp.setText("    A content provider manages a shared set of app data that you can store in the file system, in a SQLite database, on the web, or on any other persistent storage location that your app can access. Through the content provider, other apps can query or modify the data if the content provider allows it. For example, the Android system provides a content provider that manages the user's contact information. As such, any app with the proper permissions can query the content provider, such as Contacts Contract Data, to read and write information about a particular person. It is tempting to think of a content provider as an abstraction on a database, because there is a lot of API and support built in to them for that common case. However, they have a different core purpose from a system-design perspective. To the system, a content provider is an entry point into an app for publishing named data items, identified by a URI scheme. Thus an app can decide how it wants to map the data it contains to a URI namespace, handing out those URIs to other entities which can in turn use them to access the data. There are a few particular things this allows the system to do in managing an app:\n" +
                "•\tAssigning a URI doesn't require that the app remain running, so URIs can persist after their owning apps have exited. The system only needs to make sure that an owning app is still running when it has to retrieve the app's data from the corresponding URI.\n" +
                "•\tThese URIs also provide an important fine-grained security model. For example, an app can place the URI for an image it has on the clipboard, but leave its content provider locked up so that other apps cannot freely access it. When a second app attempts to access that URI on the clipboard , the system can allow that app to access the data via a temporary URI permission grant so that it is allowed to access the data only behind that URI, but nothing else in the second app.\n" +
                "Content providers are also useful for reading and writing data that is private to your app and not shared.\n" +
                "A content provider is implemented as a subclass of Content Provider and must implement a standard set of APIs that enable other apps to perform transactions. For more information, see the Content Providers developer guide.\n" +
                "A unique aspect of the Android system design is that any app can start another app’s component. For example, if you want the user to capture a photo with the device camera, there's probably another app that does that and your app can use it instead of developing an activity to capture a photo yourself. You don't need to incorporate or even link to the code from the camera app. Instead, you can simply start the activity in the camera app that captures a photo. When complete, the photo is even returned to your app so you can use it. To the user, it seems as if the camera is actually a part of your app.\n" +
                "When the system starts a component, it starts the process for that app if it's not already running and instantiates the classes needed for the component. For example, if your app starts the activity in the camera app that captures a photo, that activity runs in the process that belongs to the camera app, not in your app's process. Therefore, unlike apps on most other systems, Android apps don't have a single entry point (there's no main() function).\n" +
                "Because the system runs each app in a separate process with file permissions that restrict access to other apps, your app cannot directly activate a component from another app. However, the Android system can. To activate a component in another app, deliver a message to the system that specifies your intent to start a particular component. The system then activates the component for you.\n");
        txt_services.setText("  A service is a general-purpose entry point for keeping an app running in the background for all kinds of reasons. It is a component that runs in the background to perform long-running operations or to perform work for remote processes. A service does not provide a user interface. For example, a service might play music in the background while the user is in a different app, or it might fetch data over the network without blocking user interaction with an activity. Another component, such as an activity, can start the service and let it run or bind to it in order to interact with it. There are actually two very distinct semantics services tell the system about how to manage an app: Started services tell the system to keep them running until their work is completed. This could be to sync some data in the background or play music even after the user leaves the app. Syncing data in the background or playing music also represent two different types of started services that modify how the system handles them:\n" +
                "•\tMusic playback is something the user is directly aware of, so the app tells the system this by saying it wants to be foreground with a notification to tell the user about it; in this case the system knows that it should try really hard to keep that service's process running, because the user will be unhappy if it goes away.\n" +
                "•\tA regular background service is not something the user is directly aware as running, so the system has more freedom in managing its process. It may allow it to be killed (and then restarting the service sometime later) if it needs RAM for things that are of more immediate concern to the user.\n" +
                "Bound services run because some other app (or the system) has said that it wants to make use of the service. This is basically the service providing an API to another process. The system thus knows there is a dependency between these processes, so if process A is bound to a service in process B, it knows that it needs to keep process B (and its service) running for A. Further, if process A is something the user cares about, then it also knows to treat process B as something the user also cares about. Because of their flexibility (for better or worse), services have turned out to be a really useful building block for all kinds of higher-level system concepts. Live wallpapers, notification listeners, screen savers, input methods, accessibility services, and many other core system features are all built as services that applications implement and the system binds to when they should be running.\n" +
                "A service is implemented as a subclass of Service. For more information about the Service class, see the Services developer guide.\n");
        txt_activity.setText("•\tKeeping track of what the user currently cares about (what is on screen) to ensure that the system keeps running the process that is hosting the activity.\n" +
                "•\tKnowing that previously used processes contain things the user may return to (stopped activities), and thus more highly prioritize keeping those processes around.\n" +
                "•\tHelping the app handle having its process killed so the user can return to activities with their previous state restored.\n" +
                "•\tProviding a way for apps to implement user flows between each other, and for the system to coordinate these flows. (The most classic example here being share.)\n" +
                "You implement an activity as a subclass of the Activity class. For more information about the Activity class, see the Activities developer guide.\n");
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridView;

public class Fragment_gridview_demo extends Fragment {
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_gridview_xml, container, false);
        GridView gridView = (GridView) view.findViewById(R.id.grid_view);

        gridView.setAdapter(new ImageAdapter(getActivity()));
        return view;
    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.Toast;

import com.android.volley.AuthFailureError;
import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class Fragment_json_demo extends Fragment {
    private static String url = "https://api.androidhive.info/contacts/";
    Button fetch;
    ArrayList<HashMap<String, String>> contactList;
    ListView lv;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_json_demo, container, false);
        fetch=(Button)view.findViewById(R.id.fetch);
        fetch.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                getJson();
            }
        });
        lv = (ListView)view.findViewById(R.id.list);
        return view;
    }
    private void getJson() {
        RequestQueue queue = Volley.newRequestQueue(getActivity());
        StringRequest request = new StringRequest(Request.Method.POST, url, new Response.Listener<String>() {
            @Override
            public void onResponse(String response) {


                Log.i("My success", response);
                try {
                    contactList = new ArrayList<>();
                    JSONObject jsonObj = new JSONObject(response);

                    // Getting JSON Array node
                    JSONArray contacts = jsonObj.getJSONArray("contacts");

                    // looping through All Contacts
                    for (int i = 0; i < contacts.length(); i++) {
                        JSONObject c = contacts.getJSONObject(i);

                        String id = c.getString("id");
                        String name = c.getString("name");
                        String email = c.getString("email");
                        String address = c.getString("address");
                        String gender = c.getString("gender");

                        // Phone node is JSON Object
                        JSONObject phone = c.getJSONObject("phone");
                        String mobile = phone.getString("mobile");
                        String home = phone.getString("home");
                        String office = phone.getString("office");

                        // tmp hash map for single contact
                        HashMap<String, String> contact = new HashMap<>();

                        // adding each child node to HashMap key => value
                        contact.put("id", id);
                        contact.put("name", name);
                        contact.put("email", email);
                        contact.put("mobile", mobile);

                        // adding contact to contact list
                        contactList.add(contact);
                        ListAdapter adapter = new SimpleAdapter(
                                getActivity(), contactList,
                                R.layout.list_item, new String[]{"name", "email",
                                "mobile"}, new int[]{R.id.name,
                                R.id.email, R.id.mobile});

                        lv.setAdapter(adapter);
                    }

                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }


        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {

                Toast.makeText(getActivity(), "No Network Connection", Toast.LENGTH_LONG).show();
                Log.i("My error", "" + error);
            }
        }) {
            @Override

            protected Map<String, String> getParams() throws AuthFailureError {
                Map<String, String> map = new HashMap<String, String>();

                //here you can post any string to server


                return map;
            }
        };
        queue.add(request);

    }

}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

public class Fragment_fingerprint_ref extends Fragment {
    TextView text,head,content,text_m,head_m,content_m;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.implementation_ref, container, false);
        text=(TextView)view.findViewById(R.id.text_implementation);
        head=(TextView)view.findViewById(R.id.head_implementation);
        content=(TextView)view.findViewById(R.id.content_implementation);
        text_m=(TextView)view.findViewById(R.id.text_manifest);
        head_m=(TextView)view.findViewById(R.id.head_manifest);
        content_m=(TextView)view.findViewById(R.id.content_manifest);
        text_m.setVisibility(View.VISIBLE);
        head_m.setVisibility(View.VISIBLE);
        content_m.setVisibility(View.VISIBLE);
        text.setVisibility(View.GONE);
        head.setVisibility(View.GONE);
        content.setVisibility(View.GONE);


//
//        head.setText("Implementation Guide");
//
//        text.setText("Click-->Gradle Scripts-->build.gradle(Module:app)-->dependencies-->(implementation)\n"+
//                "After Implementation sync now to implement the content \n"+
//                "Paste the Gif Image in drawable folder with .gif extension");
//        content.setText("implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.+''");


        head_m.setText("Manifest Guide");

        text_m.setText("Click-->app-->Manifest-->(add permission)\n"+
                "Add Permission before application tag:-(top of <application)");
        content_m.setText("   <uses-feature android:name=\"android.hardware.fingerprint\"\n" +
                "        android:required=\"true\"/>\n" +
                "    <uses-permission android:name=\"android.permission.USE_FINGERPRINT\" />");

        return view;
    }



}






package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_floatingmenu_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.content.Context;\n" +
            "import android.os.Vibrator;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "import com.github.clans.fab.FloatingActionButton;\n" +
            "import com.github.clans.fab.FloatingActionMenu;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    FloatingActionMenu menu;\n" +
            "    FloatingActionButton b2,b3,b4,b5;\n" +
            "    TextView textView;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        textView=(TextView)findViewById(R.id.text);\n" +
            "        textView.setText(\"Click the below menu\");\n" +
            "        menu = (FloatingActionMenu) findViewById(R.id.menu);\n" +
            "        menu.setClosedOnTouchOutside(true);\n" +
            "        menu.setOnMenuToggleListener(new FloatingActionMenu.OnMenuToggleListener() {\n" +
            "            @Override\n" +
            "            public void onMenuToggle(boolean opened) {\n" +
            "                Vibrator vibrator = (Vibrator)getSystemService(Context.VIBRATOR_SERVICE);\n" +
            "                if (opened) {\n" +
            "                    if (vibrator != null) {\n" +
            "                        vibrator.vibrate(50);\n" +
            "                    }\n" +
            "                } else {\n" +
            "                    if (vibrator != null) {\n" +
            "                        vibrator.vibrate(50);\n" +
            "                    }\n" +
            "                }\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "        b2 = (FloatingActionButton) findViewById(R.id.b2);\n" +
            "        b3 = (FloatingActionButton) findViewById(R.id.b3);\n" +
            "        b4 = (FloatingActionButton) findViewById(R.id.b4);\n" +
            "        b5 = (FloatingActionButton) findViewById(R.id.b5);\n" +
            "\n" +
            "        b2.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "            textView.setText(\"button2\");\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "        b3.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                textView.setText(\"button3\");\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "        b4.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                textView.setText(\"button4\");\n" +
            "            }\n" +
            "        });\n" +
            "        b5.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                textView.setText(\"button5\");\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "\n" +
            "        //**********************bottom nav click listener************************\n" +
            "\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}





package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.TextView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_Backgroundservices_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    TextView title2;
    String Code="import android.content.Intent;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "Button start,stop;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        start=(Button)findViewById(R.id.start);\n" +
            "        stop=(Button)findViewById(R.id.stop);\n" +
            "        start.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                startService(new Intent(getBaseContext(),MyBackgroundService.class));\n" +
            "\n" +
            "            }\n" +
            "        });\n" +
            "        stop.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                stopService(new Intent(getBaseContext(),MyBackgroundService.class));\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}\n";
    String Code2="import android.app.Service;\n" +
            "import android.content.Intent;\n" +
            "import android.media.MediaPlayer;\n" +
            "import android.os.IBinder;\n" +
            "import android.provider.Settings;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MyBackgroundService extends Service {\n" +
            "    private MediaPlayer mediaPlayer;\n" +
            "    public MyBackgroundService() {\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public IBinder onBind(Intent intent) {\n" +
            "        // TODO: Return the communication channel to the service.\n" +
            "        throw new UnsupportedOperationException(\"Not yet implemented\");\n" +
            "    }\n" +
            "    @Override\n" +
            "    public void onCreate() {\n" +
            "        Toast.makeText(this, \"Invoke background service onCreate method.\", Toast.LENGTH_LONG).show();\n" +
            "        super.onCreate();\n" +
            "    }\n" +
            "\n" +
            "\n" +
            "    @Override\n" +
            "    public int onStartCommand(Intent intent, int flags, int startId) {\n" +
            "        mediaPlayer=MediaPlayer.create(this, Settings.System.DEFAULT_RINGTONE_URI);\n" +
            "        mediaPlayer.setLooping(true);\n" +
            "        mediaPlayer.start();\n" +
            "        Toast.makeText(this, \"Invoke background service onStartCommand method.\", Toast.LENGTH_LONG).show();\n" +
            "        return START_STICKY;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onDestroy() {\n" +
            "        super.onDestroy();\n" +
            "        Toast.makeText(this, \"Invoke background service onDestroy method.\", Toast.LENGTH_LONG).show();\n" +
            "        mediaPlayer.stop();\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("MyBackgroundService.Java");
        WebView webView2=(WebView)view.findViewById(R.id.webview2);
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code2)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webView2);
        return view;
    }



}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_pdf_creator_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:gravity=\"top\">\n" +
            "    <EditText\n" +
            "        android:id=\"@+id/edit_text_content\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:gravity=\"top\"\n" +
            "        android:hint=\"Enter your content...\"\n" +
            "        android:inputType=\"textMultiLine\"\n" +
            "        android:layout_margin=\"5dp\"\n" +
            "        android:padding=\"20dp\"\n" +
            "        android:lines=\"5\">\n" +
            "    </EditText>\n" +
            "    <Button\n" +
            "        android:id=\"@+id/button_create\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_gravity=\"center_horizontal\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Create PDF\"/>\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_simple_and_custom_toast_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.Gravity;\n" +
            "import android.view.LayoutInflater;\n" +
            "import android.view.View;\n" +
            "import android.view.ViewGroup;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "Button s_toast,c_toast;\n" +
            "LayoutInflater layoutInflater;\n" +
            "View toastLayout;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        s_toast=(Button)findViewById(R.id.s_toast);\n" +
            "        c_toast=(Button)findViewById(R.id.c_toast);\n" +
            "        layoutInflater=getLayoutInflater();\n" +
            "        toastLayout=layoutInflater.inflate(R.layout.custom_layout_toast,(ViewGroup)findViewById(R.id.cl));\n" +
            "        s_toast.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                Toast.makeText(MainActivity.this, \"This is a Simple Toast\", Toast.LENGTH_SHORT).show();\n" +
            "            }\n" +
            "        });\n" +
            "        c_toast.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "               toast();\n" +
            "\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "    public void toast(){\n" +
            "        Toast t= Toast.makeText(this,\"Toast:Gravity.TOP\",Toast.LENGTH_SHORT);\n" +
            "        t.setGravity(Gravity.CENTER,0,0);\n" +
            "        t.setView(toastLayout);\n" +
            "        t.show();\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.widget.TextView;

public class SecondActivity extends AppCompatActivity {
TextView text;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_second);
        text=(TextView)findViewById(R.id.text);
        try {
            String textt = getIntent().getStringExtra("text_sent");
            text.setText(textt);
        }catch (NullPointerException e){
            e.printStackTrace();
            text.setText("This is the second activity");
        }catch (Exception e){
            e.printStackTrace();
        }

    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_custom_alert_dialog_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.app.Activity;\n" +
            "import android.app.AlertDialog;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.util.Log;\n" +
            "import android.view.LayoutInflater;\n" +
            "import android.view.View;\n" +
            "import android.widget.ArrayAdapter;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.ListView;\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "Button button;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        button=(Button)findViewById(R.id.btn);\n" +
            "        button.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "                show();\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "    public void show(){\n" +
            "        Activity activity = null;\n" +
            "        AlertDialog.Builder dialogBuilder = new AlertDialog.Builder(this);\n" +
            "        Button close;\n" +
            "\n" +
            "        final AlertDialog alertDialog = dialogBuilder.create();\n" +
            "        LayoutInflater factory = LayoutInflater.from(this);\n" +
            "        final View vi = factory.inflate(R.layout.custom_layout_alertdialog, null);\n" +
            "        close=(Button)vi.findViewById(R.id.back);\n" +
            "        close.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "             alertDialog.cancel();\n" +
            "            }\n" +
            "        });\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "\n" +
            "        alertDialog.setView(vi);\n" +
            "        alertDialog.show();\n" +
            "        alertDialog.setCancelable(false);\n" +
            "\n" +
            "\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}

package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_fragment_xml  extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2,mcodeview3;
    TextView title2,title3;
    String Code=" <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"fragment1\"\n" +
            "        android:id=\"@+id/f1\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"80dp\"/>\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"fragment2\"\n" +
            "        android:id=\"@+id/f2\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"10dp\"/>\n" +
            "    <fragment\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"match_parent\"\n" +
            "        android:id=\"@+id/fragment\"\n" +
            "        tools:layout=\"@layout/fragment_one\"\n" +
            "        android:name=\"com.learning.fragment.fragment_one_demo\"/>\n" +
            "</LinearLayout>";
    String code2="<LinearLayout\n" +
            "    xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:background=\"@android:color/white\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/text\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:layout_marginLeft=\"20dp\"\n" +
            "        android:textColor=\"@android:color/black\"\n" +
            "        android:textStyle=\"bold\"\n" +
            "        android:textIsSelectable=\"true\"\n" +
            "        android:textSize=\"20sp\"\n" +
            "        android:text=\"This is a TextView\"/>\n" +
            "\n" +
            "</LinearLayout>";
    String code3="<LinearLayout\n" +
            "    xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:background=\"@color/colorPrimary\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/text\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:layout_marginLeft=\"20dp\"\n" +
            "        android:textColor=\"@android:color/black\"\n" +
            "        android:textStyle=\"bold\"\n" +
            "        android:textIsSelectable=\"true\"\n" +
            "        android:textSize=\"20sp\"\n" +
            "        android:text=\"This is a TextView\"/>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.three_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        mcodeview3 = (CodeView)view.findViewById(R.id.codeView3);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("fragment_one.xml");
        title3=(TextView)view.findViewById(R.id.title3);
        title3.setText("fragment_two.xml");
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy3=(Button)view.findViewById(R.id.copy3);
        copy3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code3);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview3.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code3)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_recyclerView_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2;
    TextView title2;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <android.support.v7.widget.RecyclerView\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"match_parent\"\n" +
            "        android:id=\"@+id/recyclerview\"/>\n" +
            "</LinearLayout>";
    String code2="<android.support.v7.widget.CardView\n" +
            "    android:id=\"@+id/cardview_odd\"\n" +
            "    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:card_view=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"wrap_content\"\n" +
            "    card_view:cardCornerRadius=\"6dp\"\n" +
            "    card_view:cardElevation=\"3dp\"\n" +
            "    android:layout_weight=\"1\"\n" +
            "    card_view:cardUseCompatPadding=\"true\">\n" +
            "    <LinearLayout\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:orientation=\"horizontal\">\n" +
            "        <ImageView\n" +
            "            android:id=\"@+id/user\"\n" +
            "            android:layout_width=\"wrap_content\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:src=\"@drawable/user\"/>\n" +
            "        <TextView\n" +
            "            android:id=\"@+id/name\"\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"wrap_content\"\n" +
            "            android:textAlignment=\"center\"\n" +
            "            android:layout_gravity=\"center\"\n" +
            "            android:text=\"text\"/>\n" +
            "    </LinearLayout>\n" +
            "</android.support.v7.widget.CardView>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.two_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("custom_layout_recycler_view.xml");
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.content.Intent;
import android.net.Uri;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

public class Dialer_demo extends AppCompatActivity {

    EditText et_text;
    Button btn;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_dialer_demo);
        et_text=(EditText)findViewById(R.id.et_text);
        btn=(Button)findViewById(R.id.submit);
        btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String text="tel:"+et_text.getText().toString();
                Intent intent = new Intent(Intent.ACTION_DIAL);
                intent.setData(Uri.parse(text));
                startActivity(intent);
            }
        });
    }
}

package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_expandable_listview_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView,mcodeview2,mcodeview3;
    TextView title2,title3;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <ExpandableListView\n" +
            "        android:id=\"@+id/expListView_phy\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"wrap_content\" />\n" +
            "</LinearLayout>";
    String code2="<LinearLayout\n" +
            "    xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/childitem\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_marginLeft=\"15dp\"\n" +
            "        android:layout_marginBottom=\"8dp\"\n" +
            "        android:textColor=\"@android:color/black\"/>\n" +
            "</LinearLayout>";
    String code3="<LinearLayout\n" +
            "    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"horizontal\">\n" +
            "\n" +
            "    <TextView\n" +
            "        android:id=\"@+id/title\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:textStyle=\"bold\"\n" +
            "        android:layout_marginTop=\"5dp\"\n" +
            "        android:layout_marginLeft=\"30dp\"\n" +
            "        android:layout_marginBottom=\"5dp\"\n" +
            "        android:textColor=\"@android:color/black\" />\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.three_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        mcodeview2 = (CodeView)view.findViewById(R.id.codeView2);
        mcodeview3 = (CodeView)view.findViewById(R.id.codeView3);
        title2=(TextView)view.findViewById(R.id.title2);
        title2.setText("exp_child_item.xml");
        title3=(TextView)view.findViewById(R.id.title3);
        title3.setText("exp_group_header.xml");

        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy3=(Button)view.findViewById(R.id.copy3);
        copy3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", code3);
                clipboard.setPrimaryClip(clip);
            }
        });

        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview2.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code2)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        mcodeview3.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(code3)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioGroup;
import android.widget.Toast;

public class Fragment_RadioGroup_demo extends Fragment {
    RadioGroup radioGroup;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_radiogroup_demo, container, false);
        radioGroup=(RadioGroup)view.findViewById(R.id.rdgrp);
        radioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(RadioGroup group, int checkedId) {
                switch(checkedId){
                    case R.id.rb1:
                        Toast.makeText(getActivity(), "Noughat", Toast.LENGTH_SHORT).show();
                        break;
                    case R.id.rb2:
                        Toast.makeText(getActivity(), "Oreo", Toast.LENGTH_SHORT).show();
                        break;
                    case R.id.rb3:
                        Toast.makeText(getActivity(), "Pie", Toast.LENGTH_SHORT).show();
                        break;
                }
            }
        });
        return view;
    }
}

package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_Date_picker_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.widget.DatePicker;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "import java.util.Calendar;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "DatePicker datePicker;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        datePicker=(DatePicker)findViewById(R.id.date_picker);\n" +
            "        Calendar calendar=Calendar.getInstance();\n" +
            "        datePicker.init(calendar.get(Calendar.YEAR),calendar.get(Calendar.MONTH),calendar.get(Calendar.DAY_OF_MONTH),new DatePicker.OnDateChangedListener() {\n" +
            "\n" +
            "            @Override\n" +
            "            public void onDateChanged(DatePicker view, int year, int monthOfYear, int dayOfMonth) {\n" +
            "                String[] date = {\"\"};\n" +
            "                date[0] =dayOfMonth+\"-\"+monthOfYear+\"-\"+year;\n" +
            "                String s_date=date[0];\n" +
            "                Toast.makeText(MainActivity.this, s_date, Toast.LENGTH_SHORT).show();\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.os.Bundle;
import android.os.Handler;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.Toast;

public class Fragment_ProgrssBar_demo extends Fragment {
    ProgressBar circle,horizontal;
    Button start,stop;
    int progressbarstatus=0;
    boolean value=false;
    boolean runningbefore=false;
    Handler progressbarHandler;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_progressbar_demo, container, false);
        start=(Button)view.findViewById(R.id.start);
        stop=(Button)view.findViewById(R.id.stop);
        circle=(ProgressBar)view.findViewById(R.id.pb_circle);
        horizontal=(ProgressBar)view.findViewById(R.id.pb_hr);
        horizontal.setMax(100);
        start.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                value=false;
                if(!runningbefore){
                    progressOperation();
                }else {
                    Toast.makeText(getActivity(), "Already Running...", Toast.LENGTH_SHORT).show();
                }
            }
        });
        stop.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                value=true;
                runningbefore=false;
            }
        });
return view;
    }
    private void progressOperation(){
        progressbarHandler=new Handler();
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (progressbarstatus < 100 && !value) {
                    runningbefore = true;
                    progressbarstatus=progressbarstatus+1;
                    try {
                        Thread.sleep(150);

                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    progressbarHandler.post(new Runnable() {
                        @Override
                        public void run() {
                            horizontal.setProgress(progressbarstatus);
                        }
                    });
                }
                if(progressbarstatus==100){
                    try {
                        Thread.sleep(1000);

                    }catch (InterruptedException e){
                        e.printStackTrace();
                    }
                    horizontal.setProgress(0);
                    progressbarstatus=0;
                }
                runningbefore=false;
            }


        }).start();
    }

}


package com.Learning.com;

import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import java.util.ArrayList;
import java.util.List;

public class Fragment_Recyclerview_demo extends Fragment {
    RecyclerView recyclerView;
    Context context;
    private List<Ver> vers;

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_recycler_view_demo, container, false);
        recyclerView=(RecyclerView)view.findViewById(R.id.recyclerview);
        recyclerView.setHasFixedSize(true);
        LinearLayoutManager layoutManager=new LinearLayoutManager(context);
        recyclerView.setLayoutManager(layoutManager);
        data();
        adapter();
        return view;
    }
    private void data(){
        vers=new ArrayList<>();
        for(int i=0;i<=5;i++){
            vers.add(new Ver("Android",R.drawable.icon));
        }

    }
    private void adapter(){
        RecyclerViewAdapter recyclerViewAdapter=new RecyclerViewAdapter(vers);
        recyclerView.setAdapter(recyclerViewAdapter);
    }
}
class Ver{
    String name;
    int logo;
    Ver(String name,int logo){
        this.name=name;
        this.logo=logo;
    }
}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_DatePicker_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <DatePicker\n" +
            "        android:id=\"@+id/date_picker\"\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"100dp\"/>\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_list_view_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\">\n" +
            "\n" +
            "    <ListView\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"match_parent\"\n" +
            "        android:id=\"@+id/listview\"\n" +
            "        android:dividerHeight=\"1dp\"\n" +
            "        android:layout_marginTop=\"100dp\"\n" +
            "        android:divider=\"@color/colorAccent\"></ListView>\n" +
            "\n" +
            "</LinearLayout>";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}


package com.Learning.com;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class ExpandableListData {
    public static HashMap<String , List<String>> getData(){
        HashMap<String,List<String>> expandableListDetail=new HashMap<String, List<String>>();

        List<String> BikeList = new ArrayList<>();
        BikeList.add("\u2022\tYamaha");
        BikeList.add("\u2022\tHonda");
        BikeList.add("\u2022\tBajaj");
        BikeList.add("\u2022\tKTM");
        BikeList.add("\u2022\tKawasaki");
        BikeList.add("\u2022\tDucati");
        BikeList.add("\u2022\tRoyal Enfield");
        BikeList.add("\u2022\tSuzuki");
        BikeList.add("\u2022\tBeneli");

        List<String> CarList = new ArrayList<>();
        CarList.add("\u2022\tAudi");
        CarList.add("\u2022\tTata");
        CarList.add("\u2022\tDatsun ");
        CarList.add("\u2022\tMaruthi");
        CarList.add("\u2022\tRenault ");
        CarList.add("\u2022\tFord");


        expandableListDetail.put("Bike Products",BikeList);
        expandableListDetail.put("Car Products",CarList);






        return expandableListDetail;
    }
}





package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_edittext_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code= "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.EditText;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "EditText et_text;\n" +
            "Button btn;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "\n" +
            "        et_text=(EditText)findViewById(R.id.et_text);\n" +
            "\n" +
            "        btn=(Button)findViewById(R.id.btn);\n" +
            "\n" +
            "        btn.setOnClickListener(new View.OnClickListener() {\n" +
            "\n" +
            "            @Override\n" +
            "            public void onClick(View v) {\n" +
            "\n" +
            "                String text=et_text.getText().toString();\n" +
            "                //it will get the entered text to string.\n" +
            "\n" +
            "                Toast.makeText(MainActivity.this, text, Toast.LENGTH_SHORT).show();\n" +
            "\n" +
            "            }\n" +
            "\n" +
            "        });\n" +
            "    }\n" +
            "}\n";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}


package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.TextView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_expandable_re_view_java  extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    TextView title2,title3;
    String Code="import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.support.v7.widget.LinearLayoutManager;\n" +
            "import android.support.v7.widget.RecyclerView;\n" +
            "import android.support.v7.widget.Toolbar;\n" +
            "import android.view.Menu;\n" +
            "import android.view.MenuItem;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    RecyclerView recycler;\n" +
            "    PeopleAdapter adapter;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        recycler = (RecyclerView) findViewById(R.id.main_recycler);\n" +
            "\n" +
            "        adapter = new PeopleAdapter(this);\n" +
            "        adapter.setMode(ExpandableRecyclerAdapter.MODE_ACCORDION);\n" +
            "        recycler.setLayoutManager(new LinearLayoutManager(this));\n" +
            "        recycler.setAdapter(adapter);\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public boolean onCreateOptionsMenu(Menu menu) {\n" +
            "        super.onCreateOptionsMenu(menu);\n" +
            "\n" +
            "        getMenuInflater().inflate(R.menu.menu_main, menu);\n" +
            "\n" +
            "        return true;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public boolean onOptionsItemSelected(MenuItem item) {\n" +
            "        switch (item.getItemId()) {\n" +
            "            case R.id.action_expand_all:\n" +
            "                adapter.expandAll();\n" +
            "                return true;\n" +
            "            case R.id.action_collapse_all:\n" +
            "                adapter.collapseAll();\n" +
            "                return true;\n" +
            "            default:\n" +
            "                return super.onOptionsItemSelected(item);\n" +
            "        }\n" +
            "    }\n" +
            "}\n";
    String Code2="import android.content.Context;\n" +
            "import android.support.v7.widget.RecyclerView;\n" +
            "import android.util.SparseIntArray;\n" +
            "import android.view.LayoutInflater;\n" +
            "import android.view.View;\n" +
            "import android.view.ViewGroup;\n" +
            "import android.widget.ImageView;\n" +
            "\n" +
            "import java.util.ArrayList;\n" +
            "import java.util.List;\n" +
            "\n" +
            "public abstract class ExpandableRecyclerAdapter<T extends ExpandableRecyclerAdapter.ListItem> extends RecyclerView.Adapter<ExpandableRecyclerAdapter.ViewHolder> {\n" +
            "    protected Context mContext;\n" +
            "    protected List<T> allItems = new ArrayList<>();\n" +
            "    protected List<T> visibleItems = new ArrayList<>();\n" +
            "    private List<Integer> indexList = new ArrayList<>();\n" +
            "    private SparseIntArray expandMap = new SparseIntArray();\n" +
            "    private int mode;\n" +
            "\n" +
            "    protected static final int TYPE_HEADER = 1000;\n" +
            "\n" +
            "    private static final int ARROW_ROTATION_DURATION = 150;\n" +
            "\n" +
            "    public static final int MODE_NORMAL = 0;\n" +
            "    public static final int MODE_ACCORDION = 1;\n" +
            "\n" +
            "    public ExpandableRecyclerAdapter(Context context) {\n" +
            "        mContext = context;\n" +
            "    }\n" +
            "\n" +
            "    public static class ListItem {\n" +
            "        public int ItemType;\n" +
            "\n" +
            "        public ListItem(int itemType) {\n" +
            "            ItemType = itemType;\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public long getItemId(int i) {\n" +
            "        return i;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public int getItemCount() {\n" +
            "        return visibleItems == null ? 0 : visibleItems.size();\n" +
            "    }\n" +
            "\n" +
            "    protected View inflate(int resourceID, ViewGroup viewGroup) {\n" +
            "        return LayoutInflater.from(mContext).inflate(resourceID, viewGroup, false);\n" +
            "    }\n" +
            "\n" +
            "    public class ViewHolder extends RecyclerView.ViewHolder {\n" +
            "        public ViewHolder(View view) {\n" +
            "            super(view);\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    public class HeaderViewHolder extends ViewHolder {\n" +
            "        ImageView arrow;\n" +
            "\n" +
            "        public HeaderViewHolder(View view) {\n" +
            "            super(view);\n" +
            "\n" +
            "            view.setOnClickListener(new View.OnClickListener() {\n" +
            "                @Override\n" +
            "                public void onClick(View v) {\n" +
            "                    toggleExpandedItems(getLayoutPosition(),false);\n" +
            "                /*if(isExpanded(getLayoutPosition())){\n" +
            "                    collapseItems(getLayoutPosition(),false);\n" +
            "                }else {\n" +
            "                    expandItems(getLayoutPosition(),true);\n" +
            "                }*/\n" +
            "                }\n" +
            "            });\n" +
            "        }\n" +
            "\n" +
            "        public HeaderViewHolder(View view, final ImageView arrow) {\n" +
            "            super(view);\n" +
            "\n" +
            "            this.arrow = arrow;\n" +
            "\n" +
            "            arrow.setOnClickListener(new View.OnClickListener() {\n" +
            "                @Override\n" +
            "                public void onClick(View v) {\n" +
            "                    handleClick();\n" +
            "                }\n" +
            "            });\n" +
            "        }\n" +
            "\n" +
            "        protected void handleClick() {\n" +
            "            if (toggleExpandedItems(getLayoutPosition(), false)) {\n" +
            "                openArrow(arrow);\n" +
            "            } else {\n" +
            "                closeArrow(arrow);\n" +
            "            }\n" +
            "        }\n" +
            "\n" +
            "        public void bind(int position) {\n" +
            "            arrow.setRotation(isExpanded(position) ? 90 : 0);\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    public boolean toggleExpandedItems(int position, boolean notify) {\n" +
            "        if (isExpanded(position)) {\n" +
            "            collapseItems(position, notify);\n" +
            "            return false;\n" +
            "        } else {\n" +
            "            expandItems(position, notify);\n" +
            "\n" +
            "            if (mode == MODE_ACCORDION) {\n" +
            "                collapseAllExcept(position);\n" +
            "            }\n" +
            "\n" +
            "            return true;\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    public void expandItems(int position, boolean notify) {\n" +
            "        int count = 0;\n" +
            "        int index = indexList.get(position);\n" +
            "        int insert = position;\n" +
            "\n" +
            "        for (int i=index+1; i<allItems.size() && allItems.get(i).ItemType != TYPE_HEADER; i++) {\n" +
            "            insert++;\n" +
            "            count++;\n" +
            "            visibleItems.add(insert, allItems.get(i));\n" +
            "            indexList.add(insert, i);\n" +
            "        }\n" +
            "\n" +
            "        notifyItemRangeInserted(position + 1, count);\n" +
            "\n" +
            "        int allItemsPosition = indexList.get(position);\n" +
            "        expandMap.put(allItemsPosition, 1);\n" +
            "\n" +
            "        if (notify) {\n" +
            "            notifyItemChanged(position);\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    public void collapseItems(int position, boolean notify) {\n" +
            "        int count = 0;\n" +
            "        int index = indexList.get(position);\n" +
            "\n" +
            "        for (int i=index+1; i<allItems.size() && allItems.get(i).ItemType != TYPE_HEADER; i++) {\n" +
            "            count++;\n" +
            "            visibleItems.remove(position + 1);\n" +
            "            indexList.remove(position + 1);\n" +
            "        }\n" +
            "\n" +
            "        notifyItemRangeRemoved(position + 1, count);\n" +
            "\n" +
            "        int allItemsPosition = indexList.get(position);\n" +
            "        expandMap.delete(allItemsPosition);\n" +
            "\n" +
            "        if (notify) {\n" +
            "            notifyItemChanged(position);\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "\n" +
            "    protected boolean isExpanded(int position) {\n" +
            "        int allItemsPosition = indexList.get(position);\n" +
            "        return expandMap.get(allItemsPosition, -1) >= 0;\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public int getItemViewType(int position) {\n" +
            "        return visibleItems.get(position).ItemType;\n" +
            "    }\n" +
            "\n" +
            "    public void setItems(List<T> items) {\n" +
            "        allItems = items;\n" +
            "        List<T> visibleItems = new ArrayList<>();\n" +
            "        expandMap.clear();\n" +
            "        indexList.clear();\n" +
            "\n" +
            "        for (int i=0; i<items.size(); i++) {\n" +
            "            if (items.get(i).ItemType == TYPE_HEADER) {\n" +
            "                indexList.add(i);\n" +
            "                visibleItems.add(items.get(i));\n" +
            "            }\n" +
            "        }\n" +
            "\n" +
            "        this.visibleItems = visibleItems;\n" +
            "        notifyDataSetChanged();\n" +
            "    }\n" +
            "\n" +
            "\n" +
            "\n" +
            "    protected void removeItemAt(int visiblePosition) {\n" +
            "        int allItemsPosition = indexList.get(visiblePosition);\n" +
            "\n" +
            "        allItems.remove(allItemsPosition);\n" +
            "        visibleItems.remove(visiblePosition);\n" +
            "\n" +
            "        incrementIndexList(allItemsPosition, visiblePosition, -1);\n" +
            "        incrementExpandMapAfter(allItemsPosition, -1);\n" +
            "\n" +
            "        notifyItemRemoved(visiblePosition);\n" +
            "    }\n" +
            "\n" +
            "    private void incrementExpandMapAfter(int position, int direction) {\n" +
            "        SparseIntArray newExpandMap = new SparseIntArray();\n" +
            "\n" +
            "        for (int i=0; i<expandMap.size(); i++) {\n" +
            "            int index = expandMap.keyAt(i);\n" +
            "            newExpandMap.put(index < position ? index : index + direction, 1);\n" +
            "        }\n" +
            "\n" +
            "        expandMap = newExpandMap;\n" +
            "    }\n" +
            "\n" +
            "    private void incrementIndexList(int allItemsPosition, int visiblePosition, int direction) {\n" +
            "        List<Integer> newIndexList = new ArrayList<>();\n" +
            "\n" +
            "        for (int i=0; i<indexList.size(); i++) {\n" +
            "            if (i == visiblePosition) {\n" +
            "                if (direction > 0) {\n" +
            "                    newIndexList.add(allItemsPosition);\n" +
            "                }\n" +
            "            }\n" +
            "\n" +
            "            int val = indexList.get(i);\n" +
            "            newIndexList.add(val < allItemsPosition ? val : val + direction);\n" +
            "        }\n" +
            "\n" +
            "        indexList = newIndexList;\n" +
            "    }\n" +
            "\n" +
            "    public void collapseAll() {\n" +
            "        collapseAllExcept(-1);\n" +
            "    }\n" +
            "\n" +
            "    public void collapseAllExcept(int position) {\n" +
            "        for (int i=visibleItems.size()-1; i>=0; i--) {\n" +
            "            if (i != position && getItemViewType(i) == TYPE_HEADER) {\n" +
            "                if (isExpanded(i)) {\n" +
            "                    collapseItems(i, true);\n" +
            "                }\n" +
            "            }\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    public void expandAll() {\n" +
            "        for (int i=visibleItems.size()-1; i>=0; i--) {\n" +
            "            if (getItemViewType(i) == TYPE_HEADER) {\n" +
            "                if (!isExpanded(i)) {\n" +
            "                    expandItems(i, true);\n" +
            "                }\n" +
            "            }\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    public static void openArrow(View view) {\n" +
            "        view.animate().setDuration(ARROW_ROTATION_DURATION).rotation(180);\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "    public static void closeArrow(View view) {\n" +
            "        view.animate().setDuration(ARROW_ROTATION_DURATION).rotation(0);\n" +
            "    }\n" +
            "\n" +
            "    public int getMode() {\n" +
            "        return mode;\n" +
            "    }\n" +
            "\n" +
            "    public void setMode(int mode) {\n" +
            "        this.mode = mode;\n" +
            "    }\n" +
            "}";
    String Code3="import android.content.Context;\n" +
            "import android.view.View;\n" +
            "import android.view.ViewGroup;\n" +
            "import android.widget.EditText;\n" +
            "import android.widget.ImageView;\n" +
            "import android.widget.TextView;\n" +
            "\n" +
            "import java.util.ArrayList;\n" +
            "import java.util.List;\n" +
            "\n" +
            "public class PeopleAdapter extends ExpandableRecyclerAdapter<PeopleAdapter.PeopleListItem> {\n" +
            "    public static final int TYPE_PERSON = 1001;\n" +
            "\n" +
            "    public PeopleAdapter(Context context) {\n" +
            "        super(context);\n" +
            "\n" +
            "        setItems(getSampleItems());\n" +
            "    }\n" +
            "\n" +
            "    public static class PeopleListItem extends ExpandableRecyclerAdapter.ListItem {\n" +
            "        public String Text;\n" +
            "\n" +
            "        public PeopleListItem(String group) {\n" +
            "            super(TYPE_HEADER);\n" +
            "\n" +
            "            Text = group;\n" +
            "        }\n" +
            "\n" +
            "        public PeopleListItem(String first, String last) {\n" +
            "            super(TYPE_PERSON);\n" +
            "\n" +
            "            Text = first + \" \" + last;\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    public class HeaderViewHolder extends ExpandableRecyclerAdapter.HeaderViewHolder {\n" +
            "        TextView name;\n" +
            "\n" +
            "        public HeaderViewHolder(View view) {\n" +
            "            super(view, (ImageView) view.findViewById(R.id.img_arrow));\n" +
            "\n" +
            "            name = (TextView) view.findViewById(R.id.txt_header_name);\n" +
            "        }\n" +
            "\n" +
            "        public void bind(int position) {\n" +
            "            super.bind(position);\n" +
            "\n" +
            "            name.setText(visibleItems.get(position).Text);\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    public class PersonViewHolder extends ExpandableRecyclerAdapter.ViewHolder {\n" +
            "        EditText name;\n" +
            "\n" +
            "        public PersonViewHolder(View view) {\n" +
            "            super(view);\n" +
            "\n" +
            "            name = (EditText) view.findViewById(R.id.edt_description);\n" +
            "        }\n" +
            "\n" +
            "        public void bind(int position) {\n" +
            "            name.setText(name.getText());\n" +
            "        }\n" +
            "\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n" +
            "        switch (viewType) {\n" +
            "            case TYPE_HEADER:\n" +
            "                return new HeaderViewHolder(inflate(R.layout.item_header, parent));\n" +
            "            case TYPE_PERSON:\n" +
            "            default:\n" +
            "                return new PersonViewHolder(inflate(R.layout.item_content, parent));\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onBindViewHolder(ExpandableRecyclerAdapter.ViewHolder holder, int position) {\n" +
            "        switch (getItemViewType(position)) {\n" +
            "            case TYPE_HEADER:\n" +
            "                ((HeaderViewHolder) holder).bind(position);\n" +
            "                break;\n" +
            "            case TYPE_PERSON:\n" +
            "            default:\n" +
            "                ((PersonViewHolder) holder).bind(position);\n" +
            "                break;\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    private List<PeopleListItem> getSampleItems() {\n" +
            "        List<PeopleListItem> items = new ArrayList<>();\n" +
            "        items.add(new PeopleListItem(\"Developer\"));\n" +
            "        items.add(new PeopleListItem(\"\", \"\"));\n" +
            "        items.add(new PeopleListItem(\"Developer\"));\n" +
            "        items.add(new PeopleListItem(\"\", \"\"));\n" +
            "        return items;\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.three_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        title2=(TextView)view.findViewById(R.id.title2);
        title3=(TextView)view.findViewById(R.id.title3);
        title2.setText("ExpandableRecyclerAdapter.Java");
        title3.setText("PeopleAdapter.Java");
        WebView webView2=(WebView)view.findViewById(R.id.webview2);
        WebView webView3=(WebView)view.findViewById(R.id.webview3);
        Button copy1=(Button)view.findViewById(R.id.copy1);
        copy1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy2=(Button)view.findViewById(R.id.copy2);
        copy2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code2);
                clipboard.setPrimaryClip(clip);
            }
        });
        Button copy3=(Button)view.findViewById(R.id.copy3);
        copy3.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code3);
                clipboard.setPrimaryClip(clip);
            }
        });

        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code2)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webView2);
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code3)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webView3);
        return view;
    }



}




package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_Image_text_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="\n" +
            "import android.Manifest;\n" +
            "import android.content.Context;\n" +
            "import android.content.Intent;\n" +
            "import android.content.pm.PackageManager;\n" +
            "import android.graphics.Bitmap;\n" +
            "import android.graphics.BitmapFactory;\n" +
            "import android.net.Uri;\n" +
            "import android.os.Bundle;\n" +
            "import android.os.Environment;\n" +
            "import android.provider.MediaStore;\n" +
            "import android.support.annotation.NonNull;\n" +
            "import android.support.v4.app.ActivityCompat;\n" +
            "import android.support.v4.content.FileProvider;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.util.Log;\n" +
            "import android.util.SparseArray;\n" +
            "import android.view.View;\n" +
            "import android.widget.Button;\n" +
            "import android.widget.TextView;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "import com.google.android.gms.vision.Frame;\n" +
            "import com.google.android.gms.vision.text.Text;\n" +
            "import com.google.android.gms.vision.text.TextBlock;\n" +
            "import com.google.android.gms.vision.text.TextRecognizer;\n" +
            "\n" +
            "import java.io.File;\n" +
            "import java.io.FileNotFoundException;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "    private static final String LOG_TAG = \"Text API\";\n" +
            "    private static final int PHOTO_REQUEST = 10;\n" +
            "    private TextView scanResults;\n" +
            "    private Uri imageUri;\n" +
            "    private TextRecognizer detector;\n" +
            "    private static final int REQUEST_WRITE_PERMISSION = 20;\n" +
            "    private static final String SAVED_INSTANCE_URI = \"uri\";\n" +
            "    private static final String SAVED_INSTANCE_RESULT = \"result\";\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "        Button button = (Button) findViewById(R.id.button);\n" +
            "        scanResults = (TextView) findViewById(R.id.results);\n" +
            "\n" +
            "        if (savedInstanceState != null) {\n" +
            "            imageUri = Uri.parse(savedInstanceState.getString(SAVED_INSTANCE_URI));\n" +
            "            scanResults.setText(savedInstanceState.getString(SAVED_INSTANCE_RESULT));\n" +
            "        }\n" +
            "        detector = new TextRecognizer.Builder(getApplicationContext()).build();\n" +
            "        button.setOnClickListener(new View.OnClickListener() {\n" +
            "            @Override\n" +
            "            public void onClick(View view) {\n" +
            "                ActivityCompat.requestPermissions(MainActivity.this, new\n" +
            "                        String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, REQUEST_WRITE_PERMISSION);\n" +
            "            }\n" +
            "        });\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n" +
            "        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n" +
            "        switch (requestCode) {\n" +
            "            case REQUEST_WRITE_PERMISSION:\n" +
            "                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n" +
            "                    takePicture();\n" +
            "                } else {\n" +
            "                    Toast.makeText(MainActivity.this, \"Permission Denied!\", Toast.LENGTH_SHORT).show();\n" +
            "                }\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n" +
            "        if (requestCode == PHOTO_REQUEST && resultCode == RESULT_OK) {\n" +
            "            launchMediaScanIntent();\n" +
            "            try {\n" +
            "                Bitmap bitmap = decodeBitmapUri(this, imageUri);\n" +
            "                if (detector.isOperational() && bitmap != null) {\n" +
            "                    Frame frame = new Frame.Builder().setBitmap(bitmap).build();\n" +
            "                    SparseArray<TextBlock> textBlocks = detector.detect(frame);\n" +
            "                    String blocks = \"\";\n" +
            "                    String lines = \"\";\n" +
            "                    String words = \"\";\n" +
            "                    for (int index = 0; index < textBlocks.size(); index++) {\n" +
            "                        //extract scanned text blocks here\n" +
            "                        TextBlock tBlock = textBlocks.valueAt(index);\n" +
            "                        blocks = blocks + tBlock.getValue() + \"\\n\" + \"\\n\";\n" +
            "                        for (Text line : tBlock.getComponents()) {\n" +
            "                            //extract scanned text lines here\n" +
            "                            lines = lines + line.getValue() + \"\\n\";\n" +
            "                            for (Text element : line.getComponents()) {\n" +
            "                                //extract scanned text words here\n" +
            "                                words = words + element.getValue() + \", \";\n" +
            "                            }\n" +
            "                        }\n" +
            "                    }\n" +
            "                    if (textBlocks.size() == 0) {\n" +
            "                        scanResults.setText(\"Scan Failed: Found nothing to scan\");\n" +
            "                    } else {\n" +
            "\n" +
            "                        scanResults.setText(scanResults.getText() + \"Words: \" + \"\\n\");\n" +
            "                        scanResults.setText(scanResults.getText() + words + \"\\n\");\n" +
            "                        \n" +
            "                    }\n" +
            "                } else {\n" +
            "                    scanResults.setText(\"Could not set up the detector!\");\n" +
            "                }\n" +
            "            } catch (Exception e) {\n" +
            "                Toast.makeText(this, \"Failed to load Image\", Toast.LENGTH_SHORT)\n" +
            "                        .show();\n" +
            "                Log.e(LOG_TAG, e.toString());\n" +
            "            }\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    private void takePicture() {\n" +
            "        scanResults.setText(\"\");\n" +
            "        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\n" +
            "        File photo = new File(Environment.getExternalStorageDirectory(), \"picture.jpg\");\n" +
            "        imageUri = FileProvider.getUriForFile(MainActivity.this,\n" +
            "                BuildConfig.APPLICATION_ID + \".provider\", photo);\n" +
            "        intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);\n" +
            "        startActivityForResult(intent, PHOTO_REQUEST);\n" +
            "    }\n" +
            "\n" +
            "    @Override\n" +
            "    protected void onSaveInstanceState(Bundle outState) {\n" +
            "        if (imageUri != null) {\n" +
            "            outState.putString(SAVED_INSTANCE_URI, imageUri.toString());\n" +
            "            outState.putString(SAVED_INSTANCE_RESULT, scanResults.getText().toString());\n" +
            "        }\n" +
            "        super.onSaveInstanceState(outState);\n" +
            "    }\n" +
            "\n" +
            "    private void launchMediaScanIntent() {\n" +
            "        Intent mediaScanIntent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);\n" +
            "        mediaScanIntent.setData(imageUri);\n" +
            "        this.sendBroadcast(mediaScanIntent);\n" +
            "    }\n" +
            "\n" +
            "    private Bitmap decodeBitmapUri(Context ctx, Uri uri) throws FileNotFoundException {\n" +
            "        int targetW = 600;\n" +
            "        int targetH = 600;\n" +
            "        BitmapFactory.Options bmOptions = new BitmapFactory.Options();\n" +
            "        bmOptions.inJustDecodeBounds = true;\n" +
            "        BitmapFactory.decodeStream(ctx.getContentResolver().openInputStream(uri), null, bmOptions);\n" +
            "        int photoW = bmOptions.outWidth;\n" +
            "        int photoH = bmOptions.outHeight;\n" +
            "\n" +
            "        int scaleFactor = Math.min(photoW / targetW, photoH / targetH);\n" +
            "        bmOptions.inJustDecodeBounds = false;\n" +
            "        bmOptions.inSampleSize = scaleFactor;\n" +
            "\n" +
            "        return BitmapFactory.decodeStream(ctx.getContentResolver()\n" +
            "                .openInputStream(uri), null, bmOptions);\n" +
            "    }\n" +
            "}"
            ;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_scrollview_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "    <ScrollView\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"match_parent\">\n" +
            "        <LinearLayout\n" +
            "            android:layout_width=\"match_parent\"\n" +
            "            android:layout_height=\"match_parent\"\n" +
            "            android:orientation=\"vertical\">\n" +
            "\n" +
            "\n" +
            "    <Button\n" +
            "        android:layout_width=\"wrap_content\"\n" +
            "        android:layout_height=\"wrap_content\"\n" +
            "        android:text=\"Hello World!\"\n" +
            "        android:layout_gravity=\"center\"\n" +
            "        android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "            <Button\n" +
            "                android:layout_width=\"wrap_content\"\n" +
            "                android:layout_height=\"wrap_content\"\n" +
            "                android:text=\"Hello World!\"\n" +
            "                android:layout_gravity=\"center\"\n" +
            "                android:layout_marginTop=\"20dp\"/>\n" +
            "\n" +
            "        </LinearLayout>\n" +
            "    </ScrollView>\n" +
            "\n" +
            "\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_speech_text_java extends Fragment {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    String Code="import android.Manifest;\n" +
            "import android.content.ActivityNotFoundException;\n" +
            "import android.content.Intent;\n" +
            "import android.content.pm.PackageManager;\n" +
            "import android.net.Uri;\n" +
            "import android.os.Build;\n" +
            "import android.provider.Settings;\n" +
            "import android.speech.RecognitionListener;\n" +
            "import android.speech.RecognizerIntent;\n" +
            "import android.speech.SpeechRecognizer;\n" +
            "import android.support.v4.content.ContextCompat;\n" +
            "import android.support.v7.app.AppCompatActivity;\n" +
            "import android.os.Bundle;\n" +
            "import android.view.MotionEvent;\n" +
            "import android.view.View;\n" +
            "import android.widget.EditText;\n" +
            "import android.widget.ImageButton;\n" +
            "import android.widget.Toast;\n" +
            "\n" +
            "import java.util.ArrayList;\n" +
            "import java.util.Locale;\n" +
            "\n" +
            "public class MainActivity extends AppCompatActivity {\n" +
            "ImageButton button;\n" +
            "    EditText editText;\n" +
            "    private final int REQ_CODE_SPEECH_INPUT = 100;\n" +
            "    @Override\n" +
            "    protected void onCreate(Bundle savedInstanceState) {\n" +
            "        super.onCreate(savedInstanceState);\n" +
            "        setContentView(R.layout.activity_main);\n" +
            "         editText = findViewById(R.id.editText);\n" +
            "        button=(ImageButton)findViewById(R.id.button);\n" +
            "\n" +
            "       button.setOnClickListener(new View.OnClickListener() {\n" +
            "           @Override\n" +
            "           public void onClick(View v) {\n" +
            "               promptSpeechInput();\n" +
            "           }\n" +
            "       });\n" +
            "        checkPermission();\n" +
            "    }\n" +
            "\n" +
            "    private void checkPermission() {\n" +
            "        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n" +
            "            if (!(ContextCompat.checkSelfPermission(this, Manifest.permission.RECORD_AUDIO) == PackageManager.PERMISSION_GRANTED)) {\n" +
            "                Intent intent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS,\n" +
            "                        Uri.parse(\"package:\" + getPackageName()));\n" +
            "                startActivity(intent);\n" +
            "                finish();\n" +
            "            }\n" +
            "        }\n" +
            "    }\n" +
            "    private void promptSpeechInput() {\n" +
            "        Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);\n" +
            "        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL,\n" +
            "                RecognizerIntent.LANGUAGE_MODEL_FREE_FORM);\n" +
            "        intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, Locale.getDefault());\n" +
            "        intent.putExtra(RecognizerIntent.EXTRA_PROMPT,\n" +
            "                getString(R.string.speech_prompt));\n" +
            "        try {\n" +
            "            startActivityForResult(intent, REQ_CODE_SPEECH_INPUT);\n" +
            "        } catch (ActivityNotFoundException a) {\n" +
            "            Toast.makeText(getApplicationContext(),\n" +
            "                    getString(R.string.speech_not_supported),\n" +
            "                    Toast.LENGTH_SHORT).show();\n" +
            "        }\n" +
            "    }\n" +
            "\n" +
            "    \n" +
            "    @Override\n" +
            "    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n" +
            "        super.onActivityResult(requestCode, resultCode, data);\n" +
            "\n" +
            "        switch (requestCode) {\n" +
            "            case REQ_CODE_SPEECH_INPUT: {\n" +
            "                if (resultCode == RESULT_OK && null != data) {\n" +
            "\n" +
            "                    ArrayList<String> result = data\n" +
            "                            .getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);\n" +
            "                    editText.setText(result.get(0));\n" +
            "                }\n" +
            "                break;\n" +
            "            }\n" +
            "\n" +
            "        }\n" +
            "    }\n" +
            "}\n";
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview, container, false);
        WebView webview = (WebView)view.findViewById(R.id.webview);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        Codeview.with(getActivity().getApplicationContext())
                .withCode(Code)
                .setStyle(Settings.WithStyle.DARKULA)
                .setLang(Settings.Lang.JAVA)
                .into(webview);
        return view;
    }



}





package com.Learning.com;

import android.app.ProgressDialog;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.TextView;

import com.protectsoft.webviewcode.Codeview;
import com.protectsoft.webviewcode.Settings;

public class Fragment_Textview_ref extends Fragment {
    TextView text,head;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_textview_ref, container, false);
         text=(TextView)view.findViewById(R.id.text);
        head=(TextView)view.findViewById(R.id.head);
        head.setText("Create Activity");

        text.setText("Click-->File-->New-->Activity-->EmptyActivity");

        return view;
    }



}



package com.Learning.com;

import android.app.ProgressDialog;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import br.tiagohm.codeview.CodeView;
import br.tiagohm.codeview.Language;
import br.tiagohm.codeview.Theme;

public class Fragment_AdvancedWebView_xml extends Fragment implements CodeView.OnHighlightListener {
    private ProgressDialog mProgressDialog;
    private int themePos = 0;
    CodeView mCodeView;
    String Code="<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n" +
            "    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n" +
            "    xmlns:tools=\"http://schemas.android.com/tools\"\n" +
            "    android:layout_width=\"match_parent\"\n" +
            "    android:layout_height=\"match_parent\"\n" +
            "    android:orientation=\"vertical\"\n" +
            "    tools:context=\".MainActivity\">\n" +
            "\n" +
            "    <im.delight.android.webview.AdvancedWebView\n" +
            "        android:id=\"@+id/webview\"\n" +
            "        android:layout_width=\"match_parent\"\n" +
            "        android:layout_height=\"match_parent\" />\n" +
            "</LinearLayout>";

    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.one_heading_codeview_xml, container, false);
        mCodeView = (CodeView)view.findViewById(R.id.codeView);
        Button copy=(Button)view.findViewById(R.id.copy);
        copy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                ClipboardManager clipboard = (ClipboardManager) getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
                ClipData clip = ClipData.newPlainText("clip", Code);
                clipboard.setPrimaryClip(clip);
            }
        });
        mCodeView.setOnHighlightListener(this)
                .setOnHighlightListener(this)
                .setTheme(Theme.DARCULA)
                .setCode(Code)
                .setLanguage(Language.XML)
                .setWrapLine(true)
                .setFontSize(12)
                .setZoomEnabled(false)
                .setShowLineNumber(false)
                .apply();
        return view;
    }


    @Override
    public void onStartCodeHighlight() {

    }

    @Override
    public void onFinishCodeHighlight() {

    }

    @Override
    public void onLanguageDetected(Language language, int i) {

    }

    @Override
    public void onFontSizeChanged(int i) {

    }

    @Override
    public void onLineClicked(int i, String s) {

    }
}





package com.Learning.com;

import android.content.Context;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.EditText;
import android.widget.Toast;
import android.widget.ToggleButton;

public class Fragment_sp_demo extends Fragment {
    EditText et_userid, et_password;
    private SharedPreferences mpref;
    private static final String PREF_NAME = "SP_NAME";
    CheckBox checkBox;
    String userid, password;
    Button Login, forgot_password, cancel, forgot;
    @Override
    @Nullable
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstancetate) {
        View view = inflater.inflate(R.layout.fragment_sp_demo, container, false);
        et_userid = (EditText) view.findViewById(R.id.et_userid);
        et_password = (EditText) view.findViewById(R.id.et_password);
        Login = (Button) view.findViewById(R.id.btn_submit);
        checkBox=(CheckBox)view.findViewById(R.id.check);
        checkBox.setChecked(true);
        mpref = getActivity().getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);
        userid=mpref.getString("USERID","");
        et_userid.setText(userid);
        password=mpref.getString("PASSWORD","");
        et_password.setText(password);
        Login.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                Log.i("userid", "+++++++" + userid + password);
                if (checkBox.isChecked() == true) {
                    userid = et_userid.getText().toString();
                    password = et_password.getText().toString();
                    if (TextUtils.isEmpty(userid) || TextUtils.isEmpty(password)) {
                        Toast.makeText(getActivity(), "All Fields Must Be filled", Toast.LENGTH_SHORT).show();
                    } else {
                        SharedPreferences.Editor editor = mpref.edit();
                        editor.putString("USERID", userid);
                        editor.putString("PASSWORD", password);
                        editor.apply();
                        Toast.makeText(getActivity(), "Values Stored", Toast.LENGTH_SHORT).show();


                    }
                }
            }
        });

        return view;
    }



}



